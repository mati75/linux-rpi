From 12ff863361eb5607e02fe38123867cdc1ad048be Mon Sep 17 00:00:00 2001
From: Ian Campbell <ijc@debian.org>
Date: Sun, 24 May 2015 12:53:19 +0100
Subject: [PATCH] syscon-reboot: Backport to pre-register_restart_handler
 kernels
Forwarded: not-needed

Signed-off-by: Ian Campbell <ijc@debian.org:>
---
 drivers/power/reset/Kconfig         |  1 +
 drivers/power/reset/syscon-reboot.c | 27 ++++++++++++---------------
 2 files changed, 13 insertions(+), 15 deletions(-)

diff --git a/drivers/power/reset/Kconfig b/drivers/power/reset/Kconfig
index 4044bd1..1b55a79 100644
--- a/drivers/power/reset/Kconfig
+++ b/drivers/power/reset/Kconfig
@@ -83,6 +83,7 @@ config POWER_RESET_KEYSTONE
 config POWER_RESET_SYSCON
 	bool "Generic SYSCON regmap reset driver"
 	depends on POWER_RESET && OF
+	depends on ARM || ARM64
 	select MFD_SYSCON
 	help
 	  Reboot support for generic SYSCON mapped register reset.
diff --git a/drivers/power/reset/syscon-reboot.c b/drivers/power/reset/syscon-reboot.c
index c4049f4..fd4e00b 100644
--- a/drivers/power/reset/syscon-reboot.c
+++ b/drivers/power/reset/syscon-reboot.c
@@ -23,35 +23,33 @@
 #include <linux/platform_device.h>
 #include <linux/reboot.h>
 #include <linux/regmap.h>
+#include <asm/system_misc.h>
 
 struct syscon_reboot_context {
+	struct platform_device *pdev;
 	struct regmap *map;
 	u32 offset;
 	u32 mask;
-	struct notifier_block restart_handler;
 };
 
-static int syscon_restart_handle(struct notifier_block *this,
-					unsigned long mode, void *cmd)
+static struct syscon_reboot_context *syscon_reboot_context;
+
+static void syscon_restart(enum reboot_mode reboot_mode, const char *cmd)
 {
-	struct syscon_reboot_context *ctx =
-			container_of(this, struct syscon_reboot_context,
-					restart_handler);
+	struct syscon_reboot_context *ctx = syscon_reboot_context;
 
 	/* Issue the reboot */
 	regmap_write(ctx->map, ctx->offset, ctx->mask);
 
 	mdelay(1000);
 
-	pr_emerg("Unable to restart system\n");
-	return NOTIFY_DONE;
+	dev_emerg(&ctx->pdev->dev, "Unable to restart system\n");
 }
 
 static int syscon_reboot_probe(struct platform_device *pdev)
 {
 	struct syscon_reboot_context *ctx;
 	struct device *dev = &pdev->dev;
-	int err;
 
 	ctx = devm_kzalloc(&pdev->dev, sizeof(*ctx), GFP_KERNEL);
 	if (!ctx)
@@ -67,13 +65,12 @@ static int syscon_reboot_probe(struct platform_device *pdev)
 	if (of_property_read_u32(pdev->dev.of_node, "mask", &ctx->mask))
 		return -EINVAL;
 
-	ctx->restart_handler.notifier_call = syscon_restart_handle;
-	ctx->restart_handler.priority = 192;
-	err = register_restart_handler(&ctx->restart_handler);
-	if (err)
-		dev_err(dev, "can't register restart notifier (err=%d)\n", err);
+	ctx->pdev = pdev;
+
+	syscon_reboot_context = ctx;
+	arm_pm_restart = syscon_restart;
 
-	return err;
+	return 0;
 }
 
 static struct of_device_id syscon_reboot_of_match[] = {
-- 
2.1.4

