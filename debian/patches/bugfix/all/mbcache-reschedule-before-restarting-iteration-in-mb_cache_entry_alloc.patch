From: Ben Hutchings <ben@decadent.org.uk>
Date: Mon, 13 Mar 2017 23:47:47 +0000
Subject: mbcache: Reschedule before restarting iteration in mb_cache_entry_alloc()
Bug: https://bugzilla.kernel.org/show_bug.cgi?id=107301
Bug-Debian-Security: https://security-tracker.debian.org/tracker/CVE-2015-8952

When there are too many different xattr sets for mbcache to work
properly, mb_cache_entry_alloc() may restart repeatedly, leading to
a soft-lockup.  Add a cond_resched() to mitigate this slightly.

Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
---
--- a/fs/mbcache.c
+++ b/fs/mbcache.c
@@ -529,6 +529,7 @@ mb_cache_entry_alloc(struct mb_cache *ca
 					!list_empty(&ce->e_lru_list)) {
 					hlist_bl_unlock(ce->e_index_hash_p);
 					hlist_bl_unlock(ce->e_block_hash_p);
+					cond_resched();
 					l = &mb_cache_lru_list;
 					spin_lock(&mb_cache_spinlock);
 					continue;
