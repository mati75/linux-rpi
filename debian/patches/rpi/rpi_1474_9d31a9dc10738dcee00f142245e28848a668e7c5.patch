commit 9d31a9dc10738dcee00f142245e28848a668e7c5
Author: Beni Lev <beni.lev@intel.com>
Date:   Tue Jul 25 11:25:25 2017 +0300

    mac80211_hwsim: Use proper TX power
    
    commit 9de981f507474f326e42117858dc9a9321331ae5 upstream.
    
    In struct ieee80211_tx_info, control.vif pointer and rate_driver_data[0]
    falls on the same place, depending on the union usage.
    During the whole TX process, the union is referred to as a control struct,
    which holds the vif that is later used in the tx flow, especially in order
    to derive the used tx power.
    Referring direcly to rate_driver_data[0] and assigning a value to it,
    overwrites the vif pointer, hence making all later references irrelevant.
    Moreover, rate_driver_data[0] isn't used later in the flow in order to
    retrieve the channel that it is pointing to.
    
    Signed-off-by: Beni Lev <beni.lev@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/net/wireless/mac80211_hwsim.c b/drivers/net/wireless/mac80211_hwsim.c
index 0fd7d7ed07ce..c06932c5ecdb 100644
--- a/drivers/net/wireless/mac80211_hwsim.c
+++ b/drivers/net/wireless/mac80211_hwsim.c
@@ -1357,8 +1357,6 @@ static void mac80211_hwsim_tx(struct ieee80211_hw *hw,
 				       txi->control.rates,
 				       ARRAY_SIZE(txi->control.rates));
 
-	txi->rate_driver_data[0] = channel;
-
 	if (skb->len >= 24 + 8 &&
 	    ieee80211_is_probe_resp(hdr->frame_control)) {
 		/* fake header transmission time */
