commit 31a92226a5d59a8538de9fd9a804a75a7ec1d3bd
Author: Colin Ian King <colin.king@canonical.com>
Date:   Sun May 27 22:17:02 2018 +0100

    ath10k: fix memory leak of tpc_stats
    
    [ Upstream commit 260e629bbf441585860e21d5e10d2e88437f47c8 ]
    
    Currently tpc_stats is allocated and is leaked on the return
    path if num_tx_chain is greater than WMI_TPC_TX_N_CHAIN. Avoid
    this leak by performing the check on num_tx_chain before the
    allocation of tpc_stats.
    
    Detected by CoverityScan, CID#1469422 ("Resource Leak")
    Fixes: 4b190675ad06 ("ath10k: fix kernel panic while reading tpc_stats")
    
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/net/wireless/ath/ath10k/wmi.c b/drivers/net/wireless/ath/ath10k/wmi.c
index f97ab795cf2e..2319f79b34f0 100644
--- a/drivers/net/wireless/ath/ath10k/wmi.c
+++ b/drivers/net/wireless/ath/ath10k/wmi.c
@@ -4602,10 +4602,6 @@ void ath10k_wmi_event_pdev_tpc_config(struct ath10k *ar, struct sk_buff *skb)
 
 	ev = (struct wmi_pdev_tpc_config_event *)skb->data;
 
-	tpc_stats = kzalloc(sizeof(*tpc_stats), GFP_ATOMIC);
-	if (!tpc_stats)
-		return;
-
 	num_tx_chain = __le32_to_cpu(ev->num_tx_chain);
 
 	if (num_tx_chain > WMI_TPC_TX_N_CHAIN) {
@@ -4614,6 +4610,10 @@ void ath10k_wmi_event_pdev_tpc_config(struct ath10k *ar, struct sk_buff *skb)
 		return;
 	}
 
+	tpc_stats = kzalloc(sizeof(*tpc_stats), GFP_ATOMIC);
+	if (!tpc_stats)
+		return;
+
 	ath10k_wmi_tpc_config_get_rate_code(rate_code, pream_table,
 					    num_tx_chain);
 
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1212_31a92226a5d59a8538de9fd9a804a75a7ec1d3bd.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1212_31a92226a5d59a8538de9fd9a804a75a7ec1d3bd.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
