commit 054e94ea43b23059bcee2378db39b440bb11283f
Author: Noralf Trønnes <noralf@tronnes.org>
Date:   Sat Sep 17 15:07:10 2016 +0200

    i2c: bcm2835: Fix hang for writing messages larger than 16 bytes
    
    Writing messages larger than the FIFO size results in a hang, rendering
    the machine unusable. This is because the RXD status flag is set on the
    first interrupt which results in bcm2835_drain_rxfifo() stealing bytes
    from the buffer. The controller continues to trigger interrupts waiting
    for the missing bytes, but bcm2835_fill_txfifo() has none to give.
    In this situation wait_for_completion_timeout() apparently is unable to
    stop the madness.
    
    The BCM2835 ARM Peripherals datasheet has this to say about the flags:
      TXD: is set when the FIFO has space for at least one byte of data.
      RXD: is set when the FIFO contains at least one byte of data.
      TXW: is set during a write transfer and the FIFO is less than full.
      RXR: is set during a read transfer and the FIFO is or more full.
    
    Implementing the logic from the downstream i2c-bcm2708 driver solved
    the hang problem.
    
    Signed-off-by: Noralf Trønnes <noralf@tronnes.org>
    Reviewed-by: Eric Anholt <eric@anholt.net>
    Reviewed-by: Martin Sperl <kernel@martin.sperl.org>

Index: linuxtest/dummy/rpi_1105_054e94ea43b23059bcee2378db39b440bb11283f.txt
===================================================================
--- /dev/null
+++ linuxtest/dummy/rpi_1105_054e94ea43b23059bcee2378db39b440bb11283f.txt
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
