commit c792238027157d0fc6a80a8ea1b9d73443459d75
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Wed Oct 4 03:46:14 2017 +0100

    MIPS: cmpxchg64() and HAVE_VIRT_CPU_ACCOUNTING_GEN don't work for 32-bit SMP
    
    commit a3f143106596d739e7fbc4b84c96b1475247d876 upstream.
    
    __cmpxchg64_local_generic() is atomic only w.r.t tasks and interrupts
    on the same CPU (that's what the 'local' means).  We can't use it to
    implement cmpxchg64() in SMP configurations.
    
    So, for 32-bit SMP configurations:
    
    - Don't define cmpxchg64()
    - Don't enable HAVE_VIRT_CPU_ACCOUNTING_GEN, which requires it
    
    Fixes: e2093c7b03c1 ("MIPS: Fall back to generic implementation of ...")
    Fixes: bb877e96bea1 ("MIPS: Add support for full dynticks CPU time accounting")
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Deng-Cheng Zhu <dengcheng.zhu@mips.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/17413/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/arch/mips/Kconfig b/arch/mips/Kconfig
index 5d3284d20678..c3d798b44030 100644
--- a/arch/mips/Kconfig
+++ b/arch/mips/Kconfig
@@ -65,7 +65,7 @@ config MIPS
 	select HAVE_PERF_EVENTS
 	select HAVE_REGS_AND_STACK_ACCESS_API
 	select HAVE_SYSCALL_TRACEPOINTS
-	select HAVE_VIRT_CPU_ACCOUNTING_GEN
+	select HAVE_VIRT_CPU_ACCOUNTING_GEN if 64BIT || !SMP
 	select IRQ_FORCED_THREADING
 	select MODULES_USE_ELF_RELA if MODULES && 64BIT
 	select MODULES_USE_ELF_REL if MODULES
diff --git a/arch/mips/include/asm/cmpxchg.h b/arch/mips/include/asm/cmpxchg.h
index 7e25c5cc353a..89e9fb7976fe 100644
--- a/arch/mips/include/asm/cmpxchg.h
+++ b/arch/mips/include/asm/cmpxchg.h
@@ -204,8 +204,10 @@ static inline unsigned long __cmpxchg(volatile void *ptr, unsigned long old,
 #else
 #include <asm-generic/cmpxchg-local.h>
 #define cmpxchg64_local(ptr, o, n) __cmpxchg64_local_generic((ptr), (o), (n))
+#ifndef CONFIG_SMP
 #define cmpxchg64(ptr, o, n) cmpxchg64_local((ptr), (o), (n))
 #endif
+#endif
 
 #undef __scbeqz
 
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1022_c792238027157d0fc6a80a8ea1b9d73443459d75.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1022_c792238027157d0fc6a80a8ea1b9d73443459d75.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
