commit 0396cf55657c67ad5aba567e5eca2e1f81d19cd7
Author: James Bottomley <James.Bottomley@HansenPartnership.com>
Date:   Tue Feb 12 08:05:25 2019 -0800

    scsi: sd: fix entropy gathering for most rotational disks
    
    commit e4a056987c86f402f1286e050b1dee3f4ce7c7eb upstream.
    
    The problem is that the default for MQ is not to gather entropy, whereas
    the default for the legacy queue was always to gather it.  The original
    attempt to fix entropy gathering for rotational disks under MQ added an
    else branch in sd_read_block_characteristics().  Unfortunately, the entire
    check isn't reached if the device has no characteristics VPD page.  Since
    this page was only introduced in SBC-3 and its optional anyway, most less
    expensive rotational disks don't have one, meaning they all stopped
    gathering entropy when we made MQ the default.  In a wholly unrelated
    change, openssl and openssh won't function until the random number
    generator is initialised, meaning lots of people have been seeing large
    delays before they could log into systems with default MQ kernels due to
    this lack of entropy, because it now can take tens of minutes to initialise
    the kernel random number generator.
    
    The fix is to set the non-rotational and add-randomness flags
    unconditionally early on in the disk initialization path, so they can be
    reset only if the device actually reports being non-rotational via the VPD
    page.
    
    Reported-by: Mikael Pettersson <mikpelinux@gmail.com>
    Fixes: 83e32a591077 ("scsi: sd: Contribute to randomness when running rotational device")
    Cc: stable@vger.kernel.org
    Signed-off-by: James Bottomley <James.Bottomley@HansenPartnership.com>
    Reviewed-by: Jens Axboe <axboe@kernel.dk>
    Reviewed-by: Xuewei Zhang <xueweiz@google.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/scsi/sd.c b/drivers/scsi/sd.c
index 0a27917263aa..58b78702c6c9 100644
--- a/drivers/scsi/sd.c
+++ b/drivers/scsi/sd.c
@@ -2970,9 +2970,6 @@ static void sd_read_block_characteristics(struct scsi_disk *sdkp)
 	if (rot == 1) {
 		blk_queue_flag_set(QUEUE_FLAG_NONROT, q);
 		blk_queue_flag_clear(QUEUE_FLAG_ADD_RANDOM, q);
-	} else {
-		blk_queue_flag_clear(QUEUE_FLAG_NONROT, q);
-		blk_queue_flag_set(QUEUE_FLAG_ADD_RANDOM, q);
 	}
 
 	if (sdkp->device->type == TYPE_ZBC) {
@@ -3109,6 +3106,15 @@ static int sd_revalidate_disk(struct gendisk *disk)
 	if (sdkp->media_present) {
 		sd_read_capacity(sdkp, buffer);
 
+		/*
+		 * set the default to rotational.  All non-rotational devices
+		 * support the block characteristics VPD page, which will
+		 * cause this to be updated correctly and any device which
+		 * doesn't support it should be treated as rotational.
+		 */
+		blk_queue_flag_clear(QUEUE_FLAG_NONROT, q);
+		blk_queue_flag_set(QUEUE_FLAG_ADD_RANDOM, q);
+
 		if (scsi_device_supports_vpd(sdp)) {
 			sd_read_block_provisioning(sdkp);
 			sd_read_block_limits(sdkp);
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1429_0396cf55657c67ad5aba567e5eca2e1f81d19cd7.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1429_0396cf55657c67ad5aba567e5eca2e1f81d19cd7.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
