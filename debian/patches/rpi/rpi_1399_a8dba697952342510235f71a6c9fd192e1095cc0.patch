commit a8dba697952342510235f71a6c9fd192e1095cc0
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Aug 2 13:11:39 2017 +0200

    tty: fix __tty_insert_flip_char regression
    
    commit 8a5a90a2a477b86a3dc2eaa5a706db9bfdd647ca upstream.
    
    Sergey noticed a small but fatal mistake in __tty_insert_flip_char,
    leading to an oops in an interrupt handler when using any serial
    port.
    
    The problem is that I accidentally took the tty_buffer pointer
    before calling __tty_buffer_request_room(), which replaces the
    buffer. This moves the pointer lookup to the right place after
    allocating the new buffer space.
    
    Fixes: 979990c62848 ("tty: improve tty_insert_flip_char() fast path")
    Reported-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Tested-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/tty/tty_buffer.c b/drivers/tty/tty_buffer.c
index 6b1dc32cfa22..c220c2c0893f 100644
--- a/drivers/tty/tty_buffer.c
+++ b/drivers/tty/tty_buffer.c
@@ -372,12 +372,13 @@ EXPORT_SYMBOL(tty_insert_flip_string_flags);
  */
 int __tty_insert_flip_char(struct tty_port *port, unsigned char ch, char flag)
 {
-	struct tty_buffer *tb = port->buf.tail;
+	struct tty_buffer *tb;
 	int flags = (flag == TTY_NORMAL) ? TTYB_NORMAL : 0;
 
 	if (!__tty_buffer_request_room(port, 1, flags))
 		return 0;
 
+	tb = port->buf.tail;
 	if (~tb->flags & TTYB_NORMAL)
 		*flag_buf_ptr(tb, tb->used) = flag;
 	*char_buf_ptr(tb, tb->used++) = ch;
