commit 4d92f1b73f2d89e2512e0abff728c16997743b49
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Wed Jan 25 12:29:59 2017 +0000

    arm/arm64: KVM: Enforce unconditional flush to PoC when mapping to stage-2
    
    commit 8f36ebaf21fdae99c091c67e8b6fab33969f2667 upstream.
    
    When we fault in a page, we flush it to the PoC (Point of Coherency)
    if the faulting vcpu has its own caches off, so that it can observe
    the page we just brought it.
    
    But if the vcpu has its caches on, we skip that step. Bad things
    happen when *another* vcpu tries to access that page with its own
    caches disabled. At that point, there is no garantee that the
    data has made it to the PoC, and we access stale data.
    
    The obvious fix is to always flush to PoC when a page is faulted
    in, no matter what the state of the vcpu is.
    
    Fixes: 2d58b733c876 ("arm64: KVM: force cache clean on page fault when caches are off")
    Reviewed-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

Index: linuxtest/dummy/rpi_1298_4d92f1b73f2d89e2512e0abff728c16997743b49.txt
===================================================================
--- /dev/null
+++ linuxtest/dummy/rpi_1298_4d92f1b73f2d89e2512e0abff728c16997743b49.txt
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
