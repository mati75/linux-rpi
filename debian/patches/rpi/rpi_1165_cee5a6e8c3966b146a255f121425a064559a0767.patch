commit cee5a6e8c3966b146a255f121425a064559a0767
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Tue Nov 14 15:48:47 2017 +1100

    powerpc/64s: Fix masking of SRR1 bits on instruction fault
    
    commit 475b581ff57bc01437cbc680e281869918447763 upstream.
    
    On 64-bit Book3s, when we take an instruction fault the reason for the
    fault may be reported in SRR1. For data faults the reason is reported
    in DSISR (Data Storage Instruction Status Register).
    
    The reasons reported in each do not necessarily correspond, so we mask
    the SRR1 bits before copying them to the DSISR, which is then used by
    the page fault code.
    
    Prior to commit b4c001dc44f0 ("powerpc/mm: Use symbolic constants for
    filtering SRR1 bits on ISIs") we used a hard-coded mask of 0x58200000,
    which corresponds to:
    
      DSISR_NOHPTE          0x40000000 /* no translation found */
      DSISR_NOEXEC_OR_G     0x10000000 /* exec of no-exec or guarded */
      DSISR_PROTFAULT       0x08000000 /* protection fault */
      DSISR_KEYFAULT        0x00200000 /* Storage Key fault */
    
    That commit added a #define for the mask, DSISR_SRR1_MATCH_64S, but
    incorrectly used a different similarly named DSISR_BAD_FAULT_64S.
    
    This had the effect of changing the mask to 0xa43a0000, which omits
    everything but DSISR_KEYFAULT.
    
    Luckily this had no visible effect, because in practice we hardly use
    the DSISR bits. The lack of DSISR_NOHPTE means a TLB flush
    optimisation was missed in the native HPTE code, and DSISR_NOEXEC_OR_G
    and DSISR_PROTFAULT are both only used to trigger rare warnings.
    
    So we got lucky, but let's fix it. The new value only has bits between
    17 and 30 set, so we can continue to use andis.
    
    Fixes: b4c001dc44f0 ("powerpc/mm: Use symbolic constants for filtering SRR1 bits on ISIs")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/arch/powerpc/kernel/exceptions-64s.S b/arch/powerpc/kernel/exceptions-64s.S
index 1c80bd292e48..06598142d755 100644
--- a/arch/powerpc/kernel/exceptions-64s.S
+++ b/arch/powerpc/kernel/exceptions-64s.S
@@ -542,7 +542,7 @@ EXC_COMMON_BEGIN(instruction_access_common)
 	RECONCILE_IRQ_STATE(r10, r11)
 	ld	r12,_MSR(r1)
 	ld	r3,_NIP(r1)
-	andis.	r4,r12,DSISR_BAD_FAULT_64S@h
+	andis.	r4,r12,DSISR_SRR1_MATCH_64S@h
 	li	r5,0x400
 	std	r3,_DAR(r1)
 	std	r4,_DSISR(r1)
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1165_cee5a6e8c3966b146a255f121425a064559a0767.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1165_cee5a6e8c3966b146a255f121425a064559a0767.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
