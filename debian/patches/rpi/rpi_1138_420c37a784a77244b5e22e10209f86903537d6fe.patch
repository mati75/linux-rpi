commit 420c37a784a77244b5e22e10209f86903537d6fe
Author: Julia Lawall <Julia.Lawall@lip6.fr>
Date:   Sun Jul 1 19:32:04 2018 +0200

    usb: wusbcore: security: cast sizeof to int for comparison
    
    [ Upstream commit d3ac5598c5010a8999978ebbcca3b1c6188ca36b ]
    
    Comparing an int to a size, which is unsigned, causes the int to become
    unsigned, giving the wrong result.  usb_get_descriptor can return a
    negative error code.
    
    A simplified version of the semantic match that finds this problem is as
    follows: (http://coccinelle.lip6.fr/)
    
    // <smpl>
    @@
    int x;
    expression e,e1;
    identifier f;
    @@
    
    *x = f(...);
    ... when != x = e1
        when != if (x < 0 || ...) { ... return ...; }
    *x < sizeof(e)
    // </smpl>
    
    Signed-off-by: Julia Lawall <Julia.Lawall@lip6.fr>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/usb/wusbcore/security.c b/drivers/usb/wusbcore/security.c
index 33d2f5d7f33b..14ac8c98ac9e 100644
--- a/drivers/usb/wusbcore/security.c
+++ b/drivers/usb/wusbcore/security.c
@@ -217,7 +217,7 @@ int wusb_dev_sec_add(struct wusbhc *wusbhc,
 
 	result = usb_get_descriptor(usb_dev, USB_DT_SECURITY,
 				    0, secd, sizeof(*secd));
-	if (result < sizeof(*secd)) {
+	if (result < (int)sizeof(*secd)) {
 		dev_err(dev, "Can't read security descriptor or "
 			"not enough data: %d\n", result);
 		goto out;
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1138_420c37a784a77244b5e22e10209f86903537d6fe.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1138_420c37a784a77244b5e22e10209f86903537d6fe.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
