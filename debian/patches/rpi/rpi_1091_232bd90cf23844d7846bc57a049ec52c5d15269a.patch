commit 232bd90cf23844d7846bc57a049ec52c5d15269a
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Jan 31 13:57:58 2019 +0100

    relay: check return of create_buf_file() properly
    
    [ Upstream commit 2c1cf00eeacb784781cf1c9896b8af001246d339 ]
    
    If create_buf_file() returns an error, don't try to reference it later
    as a valid dentry pointer.
    
    This problem was exposed when debugfs started to return errors instead
    of just NULL for some calls when they do not succeed properly.
    
    Also, the check for WARN_ON(dentry) was just wrong :)
    
    Reported-by: Kees Cook <keescook@chromium.org>
    Reported-and-tested-by: syzbot+16c3a70e1e9b29346c43@syzkaller.appspotmail.com
    Reported-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: David Rientjes <rientjes@google.com>
    Fixes: ff9fb72bc077 ("debugfs: return error values, not NULL")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

diff --git a/kernel/relay.c b/kernel/relay.c
index 04f248644e06..9e0f52375487 100644
--- a/kernel/relay.c
+++ b/kernel/relay.c
@@ -428,6 +428,8 @@ static struct dentry *relay_create_buf_file(struct rchan *chan,
 	dentry = chan->cb->create_buf_file(tmpname, chan->parent,
 					   S_IRUSR, buf,
 					   &chan->is_global);
+	if (IS_ERR(dentry))
+		dentry = NULL;
 
 	kfree(tmpname);
 
@@ -461,7 +463,7 @@ static struct rchan_buf *relay_open_buf(struct rchan *chan, unsigned int cpu)
 		dentry = chan->cb->create_buf_file(NULL, NULL,
 						   S_IRUSR, buf,
 						   &chan->is_global);
-		if (WARN_ON(dentry))
+		if (IS_ERR_OR_NULL(dentry))
 			goto free_buf;
 	}
 
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1091_232bd90cf23844d7846bc57a049ec52c5d15269a.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1091_232bd90cf23844d7846bc57a049ec52c5d15269a.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
