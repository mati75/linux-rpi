commit 622b5bd63ee4e7abf92355a9b497c814428284ac
Author: Eric Anholt <eric@anholt.net>
Date:   Thu Mar 30 10:23:27 2017 -0700

    Revert "drm/vc4: Verify at boot that CMA doesn't cross a 256MB boundary."
    
    This reverts commit 016c804fa69381bd23a1a13cba08a3c4557fcdff.  The
    restriction was lifted by the previous commit.

diff --git a/drivers/base/dma-contiguous.c b/drivers/base/dma-contiguous.c
index 60f5c2591ccd..e167a1e1bccb 100644
--- a/drivers/base/dma-contiguous.c
+++ b/drivers/base/dma-contiguous.c
@@ -35,7 +35,6 @@
 #endif
 
 struct cma *dma_contiguous_default_area;
-EXPORT_SYMBOL(dma_contiguous_default_area);
 
 /*
  * Default global CMA area size can be defined in kernel's .config.
diff --git a/drivers/gpu/drm/vc4/vc4_v3d.c b/drivers/gpu/drm/vc4/vc4_v3d.c
index da79d8511dfb..882ec06225f1 100644
--- a/drivers/gpu/drm/vc4/vc4_v3d.c
+++ b/drivers/gpu/drm/vc4/vc4_v3d.c
@@ -16,10 +16,7 @@
  * this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-#include "linux/init.h"
-#include "linux/cma.h"
 #include "linux/component.h"
-#include "linux/dma-contiguous.h"
 #include "linux/pm_runtime.h"
 #include "vc4_drv.h"
 #include "vc4_regs.h"
@@ -334,23 +331,8 @@ static int vc4_v3d_bind(struct device *dev, struct device *master, void *data)
 	struct drm_device *drm = dev_get_drvdata(master);
 	struct vc4_dev *vc4 = to_vc4_dev(drm);
 	struct vc4_v3d *v3d = NULL;
-	struct cma *cma;
 	int ret;
 
-	cma = dev_get_cma_area(dev);
-	if (!cma)
-		return -EINVAL;
-
-	if ((cma_get_base(cma) & 0xf0000000) !=
-	    ((cma_get_base(cma) + cma_get_size(cma) - 1) & 0xf0000000)) {
-		DRM_ERROR("V3D requires that the CMA area (0x%08lx - 0x%08lx) "
-			  "not span a 256MB boundary, or memory corruption "
-			  "would happen.\n",
-			  (long)cma_get_base(cma),
-			  cma_get_base(cma) + cma_get_size(cma));
-		return -EINVAL;
-	}
-
 	v3d = devm_kzalloc(&pdev->dev, sizeof(*v3d), GFP_KERNEL);
 	if (!v3d)
 		return -ENOMEM;
diff --git a/mm/cma.c b/mm/cma.c
index b50245282a18..c960459eda7e 100644
--- a/mm/cma.c
+++ b/mm/cma.c
@@ -47,13 +47,11 @@ phys_addr_t cma_get_base(const struct cma *cma)
 {
 	return PFN_PHYS(cma->base_pfn);
 }
-EXPORT_SYMBOL(cma_get_base);
 
 unsigned long cma_get_size(const struct cma *cma)
 {
 	return cma->count << PAGE_SHIFT;
 }
-EXPORT_SYMBOL(cma_get_size);
 
 static unsigned long cma_bitmap_aligned_mask(const struct cma *cma,
 					     int align_order)
