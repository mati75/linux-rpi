commit 49414387c4ac273cb7e62632269ea3bef2c7f422
Author: Damien Le Moal <damien.lemoal@wdc.com>
Date:   Wed Oct 11 05:54:25 2017 +0900

    scsi: sd_zbc: Fix sd_zbc_read_zoned_characteristics()
    
    commit 4a109032e3941413d8a029f619543fc5aec1d26d upstream.
    
    The three values starting at byte 8 of the Zoned Block Device
    Characteristics VPD page B6h are 32 bits values, not 64bits. So use
    get_unaligned_be32() to retrieve the values and not get_unaligned_be64()
    
    Fixes: 89d947561077 ("sd: Implement support for ZBC devices")
    Signed-off-by: Damien Le Moal <damien.lemoal@wdc.com>
    Reviewed-by: Bart Van Assche <Bart.VanAssche@wdc.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/scsi/sd_zbc.c b/drivers/scsi/sd_zbc.c
index 8aa54779aac1..2eb61d54bbb4 100644
--- a/drivers/scsi/sd_zbc.c
+++ b/drivers/scsi/sd_zbc.c
@@ -375,15 +375,15 @@ static int sd_zbc_read_zoned_characteristics(struct scsi_disk *sdkp,
 	if (sdkp->device->type != TYPE_ZBC) {
 		/* Host-aware */
 		sdkp->urswrz = 1;
-		sdkp->zones_optimal_open = get_unaligned_be64(&buf[8]);
-		sdkp->zones_optimal_nonseq = get_unaligned_be64(&buf[12]);
+		sdkp->zones_optimal_open = get_unaligned_be32(&buf[8]);
+		sdkp->zones_optimal_nonseq = get_unaligned_be32(&buf[12]);
 		sdkp->zones_max_open = 0;
 	} else {
 		/* Host-managed */
 		sdkp->urswrz = buf[4] & 1;
 		sdkp->zones_optimal_open = 0;
 		sdkp->zones_optimal_nonseq = 0;
-		sdkp->zones_max_open = get_unaligned_be64(&buf[16]);
+		sdkp->zones_max_open = get_unaligned_be32(&buf[16]);
 	}
 
 	return 0;
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1104_49414387c4ac273cb7e62632269ea3bef2c7f422.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1104_49414387c4ac273cb7e62632269ea3bef2c7f422.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
