commit 08be4b72f36206213a0cd3fe8b356fd1f4c03854
Author: Stanislav Fomichev <sdf@google.com>
Date:   Mon Jan 7 13:38:38 2019 -0800

    tun: publish tfile after it's fully initialized
    
    [ Upstream commit 0b7959b6257322f7693b08a459c505d4938646f2 ]
    
    BUG: unable to handle kernel NULL pointer dereference at 00000000000000d1
    Call Trace:
     ? napi_gro_frags+0xa7/0x2c0
     tun_get_user+0xb50/0xf20
     tun_chr_write_iter+0x53/0x70
     new_sync_write+0xff/0x160
     vfs_write+0x191/0x1e0
     __x64_sys_write+0x5e/0xd0
     do_syscall_64+0x47/0xf0
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    I think there is a subtle race between sending a packet via tap and
    attaching it:
    
    CPU0:                    CPU1:
    tun_chr_ioctl(TUNSETIFF)
      tun_set_iff
        tun_attach
          rcu_assign_pointer(tfile->tun, tun);
                             tun_fops->write_iter()
                               tun_chr_write_iter
                                 tun_napi_alloc_frags
                                   napi_get_frags
                                     napi->skb = napi_alloc_skb
          tun_napi_init
            netif_napi_add
              napi->skb = NULL
                                  napi->skb is NULL here
                                  napi_gro_frags
                                    napi_frags_skb
                                      skb = napi->skb
                                      skb_reset_mac_header(skb)
                                      panic()
    
    Move rcu_assign_pointer(tfile->tun) and rcu_assign_pointer(tun->tfiles) to
    be the last thing we do in tun_attach(); this should guarantee that when we
    call tun_get() we always get an initialized object.
    
    v2 changes:
    * remove extra napi_mutex locks/unlocks for napi operations
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Fixes: 90e33d459407 ("tun: enable napi_gro_frags() for TUN/TAP driver")
    
    Signed-off-by: Stanislav Fomichev <sdf@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/net/tun.c b/drivers/net/tun.c
index 8c1abcba4cbd..33978b0cdac8 100644
--- a/drivers/net/tun.c
+++ b/drivers/net/tun.c
@@ -859,10 +859,6 @@ static int tun_attach(struct tun_struct *tun, struct file *file,
 		err = 0;
 	}
 
-	rcu_assign_pointer(tfile->tun, tun);
-	rcu_assign_pointer(tun->tfiles[tun->numqueues], tfile);
-	tun->numqueues++;
-
 	if (tfile->detached) {
 		tun_enable_queue(tfile);
 	} else {
@@ -876,6 +872,13 @@ static int tun_attach(struct tun_struct *tun, struct file *file,
 	 * refcnt.
 	 */
 
+	/* Publish tfile->tun and tun->tfiles only after we've fully
+	 * initialized tfile; otherwise we risk using half-initialized
+	 * object.
+	 */
+	rcu_assign_pointer(tfile->tun, tun);
+	rcu_assign_pointer(tun->tfiles[tun->numqueues], tfile);
+	tun->numqueues++;
 out:
 	return err;
 }
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1023_08be4b72f36206213a0cd3fe8b356fd1f4c03854.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1023_08be4b72f36206213a0cd3fe8b356fd1f4c03854.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
