commit 279eb1d940442ac0599fd107da9944249134e1e2
Author: Christophe Leroy <christophe.leroy@c-s.fr>
Date:   Wed Nov 28 09:27:04 2018 +0000

    powerpc/mm: Fix reporting of kernel execute faults on the 8xx
    
    [ Upstream commit ffca395b11c4a5a6df6d6345f794b0e3d578e2d0 ]
    
    On the 8xx, no-execute is set via PPP bits in the PTE. Therefore
    a no-exec fault generates DSISR_PROTFAULT error bits,
    not DSISR_NOEXEC_OR_G.
    
    This patch adds DSISR_PROTFAULT in the test mask.
    
    Fixes: d3ca587404b3 ("powerpc/mm: Fix reporting of kernel execute faults")
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

diff --git a/arch/powerpc/mm/fault.c b/arch/powerpc/mm/fault.c
index d51cf5f4e45e..365526ee29b8 100644
--- a/arch/powerpc/mm/fault.c
+++ b/arch/powerpc/mm/fault.c
@@ -221,7 +221,9 @@ static int mm_fault_error(struct pt_regs *regs, unsigned long addr,
 static bool bad_kernel_fault(bool is_exec, unsigned long error_code,
 			     unsigned long address)
 {
-	if (is_exec && (error_code & (DSISR_NOEXEC_OR_G | DSISR_KEYFAULT))) {
+	/* NX faults set DSISR_PROTFAULT on the 8xx, DSISR_NOEXEC_OR_G on others */
+	if (is_exec && (error_code & (DSISR_NOEXEC_OR_G | DSISR_KEYFAULT |
+				      DSISR_PROTFAULT))) {
 		printk_ratelimited(KERN_CRIT "kernel tried to execute"
 				   " exec-protected page (%lx) -"
 				   "exploit attempt? (uid: %d)\n",
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1195_279eb1d940442ac0599fd107da9944249134e1e2.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1195_279eb1d940442ac0599fd107da9944249134e1e2.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
