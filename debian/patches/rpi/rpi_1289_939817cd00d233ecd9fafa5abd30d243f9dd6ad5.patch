commit 939817cd00d233ecd9fafa5abd30d243f9dd6ad5
Author: Quentin Monnet <quentin.monnet@netronome.com>
Date:   Thu Aug 23 17:46:25 2018 +0100

    tools: bpftool: return from do_event_pipe() on bad arguments
    
    [ Upstream commit 785e76d7a2051a9e28b9134d5388a45b16f5eb72 ]
    
    When command line parsing fails in the while loop in do_event_pipe()
    because the number of arguments is incorrect or because the keyword is
    unknown, an error message is displayed, but bpftool remains stuck in
    the loop. Make sure we exit the loop upon failure.
    
    Fixes: f412eed9dfde ("tools: bpftool: add simple perf event output reader")
    Signed-off-by: Quentin Monnet <quentin.monnet@netronome.com>
    Reviewed-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/tools/bpf/bpftool/map_perf_ring.c b/tools/bpf/bpftool/map_perf_ring.c
index 1832100d1b27..6d41323be291 100644
--- a/tools/bpf/bpftool/map_perf_ring.c
+++ b/tools/bpf/bpftool/map_perf_ring.c
@@ -194,8 +194,10 @@ int do_event_pipe(int argc, char **argv)
 	}
 
 	while (argc) {
-		if (argc < 2)
+		if (argc < 2) {
 			BAD_ARG();
+			goto err_close_map;
+		}
 
 		if (is_prefix(*argv, "cpu")) {
 			char *endptr;
@@ -221,6 +223,7 @@ int do_event_pipe(int argc, char **argv)
 			NEXT_ARG();
 		} else {
 			BAD_ARG();
+			goto err_close_map;
 		}
 
 		do_all = false;
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1289_939817cd00d233ecd9fafa5abd30d243f9dd6ad5.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1289_939817cd00d233ecd9fafa5abd30d243f9dd6ad5.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
