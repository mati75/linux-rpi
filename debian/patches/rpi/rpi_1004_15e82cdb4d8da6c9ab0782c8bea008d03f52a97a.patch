commit 15e82cdb4d8da6c9ab0782c8bea008d03f52a97a
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Tue Sep 26 09:16:48 2017 +0200

    s390/disassembler: add missing end marker for e7 table
    
    commit 5c50538752af7968f53924b22dede8ed4ce4cb3b upstream.
    
    The e7 opcode table does not have an end marker. Hence when trying to
    find an unknown e7 instruction the code will access memory behind the
    table until it finds something that matches the opcode, or the kernel
    crashes, whatever comes first.
    
    This affects not only the in-kernel disassembler but also uprobes and
    kprobes which refuse to set a probe on unknown instructions, and
    therefore search the opcode tables to figure out if instructions are
    known or not.
    
    Fixes: 3585cb0280654 ("s390/disassembler: add vector instructions")
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/arch/s390/kernel/dis.c b/arch/s390/kernel/dis.c
index f7e82302a71e..d9970c15f79d 100644
--- a/arch/s390/kernel/dis.c
+++ b/arch/s390/kernel/dis.c
@@ -1548,6 +1548,7 @@ static struct s390_insn opcode_e7[] = {
 	{ "vfsq", 0xce, INSTR_VRR_VV000MM },
 	{ "vfs", 0xe2, INSTR_VRR_VVV00MM },
 	{ "vftci", 0x4a, INSTR_VRI_VVIMM },
+	{ "", 0, INSTR_INVALID }
 };
 
 static struct s390_insn opcode_eb[] = {
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1004_15e82cdb4d8da6c9ab0782c8bea008d03f52a97a.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1004_15e82cdb4d8da6c9ab0782c8bea008d03f52a97a.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
