commit b0034cb5014e7c7d64389c52ee58180101c8ac29
Author: Paul Blakey <paulb@mellanox.com>
Date:   Tue Aug 22 13:51:56 2017 +0300

    net/mlx5e: Properly resolve TC offloaded ipv6 vxlan tunnel source address
    
    
    [ Upstream commit 08820528c9d3ff0d0eda047d7ef5ecac2da1ef6c ]
    
    Currently if vxlan tunnel ipv6 src isn't supplied the driver fails to
    resolve it as part of the route lookup. The resulting encap header
    is left with a zeroed out ipv6 src address so the packets are sent
    with this src ip.
    
    Use an appropriate route lookup API that also resolves the source
    ipv6 address if it's not supplied.
    
    Fixes: ce99f6b97fcd ('net/mlx5e: Support SRIOV TC encapsulation offloads for IPv6 tunnels')
    Signed-off-by: Paul Blakey <paulb@mellanox.com>
    Reviewed-by: Or Gerlitz <ogerlitz@mellanox.com>
    Reviewed-by: Roi Dayan <roid@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c b/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
index 9df9fc0d26f5..558a8841c9a5 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
@@ -1262,12 +1262,10 @@ static int mlx5e_route_lookup_ipv6(struct mlx5e_priv *priv,
 	struct mlx5_eswitch *esw = priv->mdev->priv.eswitch;
 	int ret;
 
-	dst = ip6_route_output(dev_net(mirred_dev), NULL, fl6);
-	ret = dst->error;
-	if (ret) {
-		dst_release(dst);
+	ret = ipv6_stub->ipv6_dst_lookup(dev_net(mirred_dev), NULL, &dst,
+					 fl6);
+	if (ret < 0)
 		return ret;
-	}
 
 	*out_ttl = ip6_dst_hoplimit(dst);
 
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1027_b0034cb5014e7c7d64389c52ee58180101c8ac29.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1027_b0034cb5014e7c7d64389c52ee58180101c8ac29.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
