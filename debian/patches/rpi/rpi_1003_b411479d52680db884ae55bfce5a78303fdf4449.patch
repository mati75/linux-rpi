commit b411479d52680db884ae55bfce5a78303fdf4449
Author: Colin Ian King <colin.king@canonical.com>
Date:   Fri Sep 14 17:39:53 2018 +0100

    net: hp100: fix always-true check for link up state
    
    [ Upstream commit a7f38002fb69b44f8fc622ecb838665d0b8666af ]
    
    The operation ~(p100_inb(VG_LAN_CFG_1) & HP100_LINK_UP) returns a value
    that is always non-zero and hence the wait for the link to drop always
    terminates prematurely.  Fix this by using a logical not operator instead
    of a bitwise complement.  This issue has been in the driver since
    pre-2.6.12-rc2.
    
    Detected by CoverityScan, CID#114157 ("Logical vs. bitwise operator")
    
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/net/ethernet/hp/hp100.c b/drivers/net/ethernet/hp/hp100.c
index c8c7ad2eff77..9b5a68b65432 100644
--- a/drivers/net/ethernet/hp/hp100.c
+++ b/drivers/net/ethernet/hp/hp100.c
@@ -2634,7 +2634,7 @@ static int hp100_login_to_vg_hub(struct net_device *dev, u_short force_relogin)
 		/* Wait for link to drop */
 		time = jiffies + (HZ / 10);
 		do {
-			if (~(hp100_inb(VG_LAN_CFG_1) & HP100_LINK_UP_ST))
+			if (!(hp100_inb(VG_LAN_CFG_1) & HP100_LINK_UP_ST))
 				break;
 			if (!in_interrupt())
 				schedule_timeout_interruptible(1);
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1003_b411479d52680db884ae55bfce5a78303fdf4449.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1003_b411479d52680db884ae55bfce5a78303fdf4449.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
