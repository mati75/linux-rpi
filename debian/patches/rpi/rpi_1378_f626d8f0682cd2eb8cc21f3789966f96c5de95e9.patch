commit f626d8f0682cd2eb8cc21f3789966f96c5de95e9
Author: Dave Stevenson <dave.stevenson@raspberrypi.org>
Date:   Fri Sep 1 17:55:07 2017 +0100

    vcsm: Remove VC_SM_LOCK_CACHE_MODE_T typedef.
    
    Signed-off-by: Dave Stevenson <dave.stevenson@raspberrypi.org>

diff --git a/drivers/char/broadcom/vc_sm/vc_sm_knl.h b/drivers/char/broadcom/vc_sm/vc_sm_knl.h
index 8538f618ffd3..f7f74750d835 100644
--- a/drivers/char/broadcom/vc_sm/vc_sm_knl.h
+++ b/drivers/char/broadcom/vc_sm/vc_sm_knl.h
@@ -22,11 +22,10 @@
 #endif
 
 /* Type of memory to be locked (ie mapped) */
-typedef enum {
+enum vc_sm_lock_cache_mode {
 	VC_SM_LOCK_CACHED,
 	VC_SM_LOCK_NON_CACHED,
-
-} VC_SM_LOCK_CACHE_MODE_T;
+};
 
 /* Allocate a shared memory handle and block. */
 int vc_sm_alloc(struct vc_sm_alloc_t *alloc, int *handle);
@@ -35,7 +34,7 @@ int vc_sm_alloc(struct vc_sm_alloc_t *alloc, int *handle);
 int vc_sm_free(int handle);
 
 /* Lock a memory handle for use by kernel. */
-int vc_sm_lock(int handle, VC_SM_LOCK_CACHE_MODE_T mode,
+int vc_sm_lock(int handle, enum vc_sm_lock_cache_mode mode,
 	       unsigned long *data);
 
 /* Unlock a memory handle in use by kernel. */
@@ -45,8 +44,8 @@ int vc_sm_unlock(int handle, int flush, int no_vc_unlock);
 int vc_sm_int_handle(int handle);
 
 /* Map a shared memory region for use by kernel. */
-int vc_sm_map(int handle, unsigned int sm_addr, VC_SM_LOCK_CACHE_MODE_T mode,
-	      unsigned long *data);
+int vc_sm_map(int handle, unsigned int sm_addr,
+	      enum vc_sm_lock_cache_mode mode, unsigned long *data);
 
 /* Import a block of memory into the GPU space. */
 int vc_sm_import_dmabuf(struct dma_buf *dmabuf, int *handle);
diff --git a/drivers/char/broadcom/vc_sm/vmcs_sm.c b/drivers/char/broadcom/vc_sm/vmcs_sm.c
index a18407d111c4..2ad5ecbccf30 100644
--- a/drivers/char/broadcom/vc_sm/vmcs_sm.c
+++ b/drivers/char/broadcom/vc_sm/vmcs_sm.c
@@ -3356,7 +3356,7 @@ int vc_sm_free(int handle)
 EXPORT_SYMBOL_GPL(vc_sm_free);
 
 /* Lock a memory handle for use by kernel. */
-int vc_sm_lock(int handle, VC_SM_LOCK_CACHE_MODE_T mode,
+int vc_sm_lock(int handle, enum vc_sm_lock_cache_mode mode,
 	       unsigned long *data)
 {
 	struct vmcs_sm_ioctl_lock_unlock ioparam;
@@ -3401,8 +3401,8 @@ int vc_sm_unlock(int handle, int flush, int no_vc_unlock)
 EXPORT_SYMBOL_GPL(vc_sm_unlock);
 
 /* Map a shared memory region for use by kernel. */
-int vc_sm_map(int handle, unsigned int sm_addr, VC_SM_LOCK_CACHE_MODE_T mode,
-	      unsigned long *data)
+int vc_sm_map(int handle, unsigned int sm_addr,
+	      enum vc_sm_lock_cache_mode mode, unsigned long *data)
 {
 	struct vmcs_sm_ioctl_lock_unlock ioparam;
 	int ret;
