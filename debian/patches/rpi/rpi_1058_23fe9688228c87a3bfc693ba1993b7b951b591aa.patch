commit 23fe9688228c87a3bfc693ba1993b7b951b591aa
Author: Jens Axboe <axboe@kernel.dk>
Date:   Thu Sep 20 08:30:55 2018 -0600

    libata: mask swap internal and hardware tag
    
    commit 7ce5c8cd753f9afa8e79e9ec40351998e354f239 upstream.
    
    hen we're comparing the hardware completion mask passed in from the
    driver with the internal tag pending mask, we need to account for the
    fact that the internal tag is different from the hardware tag. If not,
    then we can end up either prematurely completing the internal tag (since
    it's not set in the hw mask), or simply flag an error:
    
    ata2: illegal qc_active transition (100000000->00000001)
    
    If the internal tag is set, then swap that with the hardware tag in this
    case before comparing with what the hardware reports.
    
    Fixes: 28361c403683 ("libata: add extra internal command")
    Buglink: https://bugzilla.kernel.org/show_bug.cgi?id=201151
    Cc: stable@vger.kernel.org
    Reported-by: Paul Sbarra <sbarra.paul@gmail.com>
    Tested-by: Paul Sbarra <sbarra.paul@gmail.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/ata/libata-core.c b/drivers/ata/libata-core.c
index 984b37647b2f..22a2bc5f25ce 100644
--- a/drivers/ata/libata-core.c
+++ b/drivers/ata/libata-core.c
@@ -5358,10 +5358,20 @@ void ata_qc_complete(struct ata_queued_cmd *qc)
  */
 int ata_qc_complete_multiple(struct ata_port *ap, u64 qc_active)
 {
+	u64 done_mask, ap_qc_active = ap->qc_active;
 	int nr_done = 0;
-	u64 done_mask;
 
-	done_mask = ap->qc_active ^ qc_active;
+	/*
+	 * If the internal tag is set on ap->qc_active, then we care about
+	 * bit0 on the passed in qc_active mask. Move that bit up to match
+	 * the internal tag.
+	 */
+	if (ap_qc_active & (1ULL << ATA_TAG_INTERNAL)) {
+		qc_active |= (qc_active & 0x01) << ATA_TAG_INTERNAL;
+		qc_active ^= qc_active & 0x01;
+	}
+
+	done_mask = ap_qc_active ^ qc_active;
 
 	if (unlikely(done_mask & qc_active)) {
 		ata_port_err(ap, "illegal qc_active transition (%08llx->%08llx)\n",
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1058_23fe9688228c87a3bfc693ba1993b7b951b591aa.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1058_23fe9688228c87a3bfc693ba1993b7b951b591aa.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
