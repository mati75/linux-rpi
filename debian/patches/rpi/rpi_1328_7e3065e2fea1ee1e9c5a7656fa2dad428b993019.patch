commit 7e3065e2fea1ee1e9c5a7656fa2dad428b993019
Author: Dave Stevenson <dave.stevenson@raspberrypi.org>
Date:   Tue Sep 18 11:08:51 2018 +0100

    media: ov5647: Use gpiod_set_value_cansleep
    
    All calls to the gpio library are in contexts that can sleep,
    therefore there is no issue with having those GPIOs controlled
    by controllers which require sleeping (eg I2C GPIO expanders).
    
    Switch to using gpiod_set_value_cansleep instead of gpiod_set_value
    to avoid triggering the warning in gpiolib should the GPIO
    controller need to sleep.
    
    Signed-off-by: Dave Stevenson <dave.stevenson@raspberrypi.org>

diff --git a/drivers/media/i2c/ov5647.c b/drivers/media/i2c/ov5647.c
index 93e267006669..bb5f73805ab4 100644
--- a/drivers/media/i2c/ov5647.c
+++ b/drivers/media/i2c/ov5647.c
@@ -373,7 +373,7 @@ static int ov5647_sensor_power(struct v4l2_subdev *sd, int on)
 		dev_dbg(&client->dev, "OV5647 power on\n");
 
 		if (ov5647->pwdn) {
-			gpiod_set_value(ov5647->pwdn, 0);
+			gpiod_set_value_cansleep(ov5647->pwdn, 0);
 			msleep(PWDN_ACTIVE_DELAY_MS);
 		}
 
@@ -415,7 +415,7 @@ static int ov5647_sensor_power(struct v4l2_subdev *sd, int on)
 
 		clk_disable_unprepare(ov5647->xclk);
 
-		gpiod_set_value(ov5647->pwdn, 1);
+		gpiod_set_value_cansleep(ov5647->pwdn, 1);
 	}
 
 	/* Update the power count. */
@@ -649,13 +649,13 @@ static int ov5647_probe(struct i2c_client *client,
 		goto mutex_remove;
 
 	if (sensor->pwdn) {
-		gpiod_set_value(sensor->pwdn, 0);
+		gpiod_set_value_cansleep(sensor->pwdn, 0);
 		msleep(PWDN_ACTIVE_DELAY_MS);
 	}
 
 	ret = ov5647_detect(sd);
 
-	gpiod_set_value(sensor->pwdn, 1);
+	gpiod_set_value_cansleep(sensor->pwdn, 1);
 
 	if (ret < 0)
 		goto error;
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1328_7e3065e2fea1ee1e9c5a7656fa2dad428b993019.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1328_7e3065e2fea1ee1e9c5a7656fa2dad428b993019.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
