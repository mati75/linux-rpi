commit 16870b7ba2855204af532c23fa973d530f4959b6
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Fri Sep 29 16:03:24 2017 -0700

    target: Fix caw_sem leak in transport_generic_request_failure
    
    commit fd2f928b0ddd2fe8876d4f1344df2ace2b715a4d upstream.
    
    With the recent addition of transport_check_aborted_status() within
    transport_generic_request_failure() to avoid sending a SCSI status
    exception after CMD_T_ABORTED w/ TAS=1 has occured, it introduced
    a COMPARE_AND_WRITE early failure regression.
    
    Namely when COMPARE_AND_WRITE fails and se_device->caw_sem has
    been taken by sbc_compare_and_write(), if the new check for
    transport_check_aborted_status() returns true and exits,
    cmd->transport_complete_callback() -> compare_and_write_post()
    is skipped never releasing se_device->caw_sem.
    
    This regression was originally introduced by:
    
      commit e3b88ee95b4e4bf3e9729a4695d695b9c7c296c8
      Author: Bart Van Assche <bart.vanassche@sandisk.com>
      Date:   Tue Feb 14 16:25:45 2017 -0800
    
          target: Fix handling of aborted failed commands
    
    To address this bug, move the transport_check_aborted_status()
    call after transport_complete_task_attr() and
    cmd->transport_complete_callback().
    
    Cc: Mike Christie <mchristi@redhat.com>
    Cc: Hannes Reinecke <hare@suse.com>
    Cc: Bart Van Assche <bart.vanassche@sandisk.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/target/target_core_transport.c b/drivers/target/target_core_transport.c
index 576d081325f4..953b99d8654c 100644
--- a/drivers/target/target_core_transport.c
+++ b/drivers/target/target_core_transport.c
@@ -1730,9 +1730,6 @@ void transport_generic_request_failure(struct se_cmd *cmd,
 {
 	int ret = 0, post_ret = 0;
 
-	if (transport_check_aborted_status(cmd, 1))
-		return;
-
 	pr_debug("-----[ Storage Engine Exception; sense_reason %d\n",
 		 sense_reason);
 	target_show_cmd("-----[ ", cmd);
@@ -1741,6 +1738,7 @@ void transport_generic_request_failure(struct se_cmd *cmd,
 	 * For SAM Task Attribute emulation for failed struct se_cmd
 	 */
 	transport_complete_task_attr(cmd);
+
 	/*
 	 * Handle special case for COMPARE_AND_WRITE failure, where the
 	 * callback is expected to drop the per device ->caw_sem.
@@ -1749,6 +1747,9 @@ void transport_generic_request_failure(struct se_cmd *cmd,
 	     cmd->transport_complete_callback)
 		cmd->transport_complete_callback(cmd, false, &post_ret);
 
+	if (transport_check_aborted_status(cmd, 1))
+		return;
+
 	switch (sense_reason) {
 	case TCM_NON_EXISTENT_LUN:
 	case TCM_UNSUPPORTED_SCSI_OPCODE:
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1115_16870b7ba2855204af532c23fa973d530f4959b6.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1115_16870b7ba2855204af532c23fa973d530f4959b6.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
