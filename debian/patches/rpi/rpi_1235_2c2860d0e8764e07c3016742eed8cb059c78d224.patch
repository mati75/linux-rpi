commit 2c2860d0e8764e07c3016742eed8cb059c78d224
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Mon Sep 3 16:49:37 2018 +0200

    regulator: Fix 'do-nothing' value for regulators without suspend state
    
    commit 3edd79cf5a44b12dbb13bc320f5788aed6562b36 upstream.
    
    Some regulators don't have all states defined and in such cases regulator
    core should not assume anything. However in current implementation
    of of_get_regulation_constraints() DO_NOTHING_IN_SUSPEND enable value was
    set only for regulators which had suspend node defined, otherwise the
    default 0 value was used, what means DISABLE_IN_SUSPEND. This lead to
    broken system suspend/resume on boards, which had simple regulator
    constraints definition (without suspend state nodes).
    
    To avoid further mismatches between the default and uninitialized values
    of the suspend enabled/disabled states, change the values of the them,
    so default '0' means DO_NOTHING_IN_SUSPEND.
    
    Fixes: 72069f9957a1: regulator: leave one item to record whether regulator is enabled
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/regulator/core.c b/drivers/regulator/core.c
index 397b35a93898..cc1450c53fb2 100644
--- a/drivers/regulator/core.c
+++ b/drivers/regulator/core.c
@@ -3147,7 +3147,7 @@ static inline int regulator_suspend_toggle(struct regulator_dev *rdev,
 	if (!rstate->changeable)
 		return -EPERM;
 
-	rstate->enabled = en;
+	rstate->enabled = (en) ? ENABLE_IN_SUSPEND : DISABLE_IN_SUSPEND;
 
 	return 0;
 }
diff --git a/drivers/regulator/of_regulator.c b/drivers/regulator/of_regulator.c
index 638f17d4c848..210fc20f7de7 100644
--- a/drivers/regulator/of_regulator.c
+++ b/drivers/regulator/of_regulator.c
@@ -213,8 +213,6 @@ static void of_get_regulation_constraints(struct device_node *np,
 		else if (of_property_read_bool(suspend_np,
 					"regulator-off-in-suspend"))
 			suspend_state->enabled = DISABLE_IN_SUSPEND;
-		else
-			suspend_state->enabled = DO_NOTHING_IN_SUSPEND;
 
 		if (!of_property_read_u32(np, "regulator-suspend-min-microvolt",
 					  &pval))
diff --git a/include/linux/regulator/machine.h b/include/linux/regulator/machine.h
index 3468703d663a..a459a5e973a7 100644
--- a/include/linux/regulator/machine.h
+++ b/include/linux/regulator/machine.h
@@ -48,9 +48,9 @@ struct regulator;
  * DISABLE_IN_SUSPEND	- turn off regulator in suspend states
  * ENABLE_IN_SUSPEND	- keep regulator on in suspend states
  */
-#define DO_NOTHING_IN_SUSPEND	(-1)
-#define DISABLE_IN_SUSPEND	0
-#define ENABLE_IN_SUSPEND	1
+#define DO_NOTHING_IN_SUSPEND	0
+#define DISABLE_IN_SUSPEND	1
+#define ENABLE_IN_SUSPEND	2
 
 /* Regulator active discharge flags */
 enum regulator_active_discharge {
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1235_2c2860d0e8764e07c3016742eed8cb059c78d224.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1235_2c2860d0e8764e07c3016742eed8cb059c78d224.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
