commit c58500a8234d019c8c1822753291a8088b698b6b
Author: Haozhong Zhang <haozhong.zhang@intel.com>
Date:   Mon Sep 18 09:56:49 2017 +0800

    KVM: VMX: do not change SN bit in vmx_update_pi_irte()
    
    commit dc91f2eb1a4021eb6705c15e474942f84ab9b211 upstream.
    
    In kvm_vcpu_trigger_posted_interrupt() and pi_pre_block(), KVM
    assumes that PI notification events should not be suppressed when the
    target vCPU is not blocked.
    
    vmx_update_pi_irte() sets the SN field before changing an interrupt
    from posting to remapping, but it does not check the vCPU mode.
    Therefore, the change of SN field may break above the assumption.
    Besides, I don't see reasons to suppress notification events here, so
    remove the changes of SN field to avoid race condition.
    
    Signed-off-by: Haozhong Zhang <haozhong.zhang@intel.com>
    Reported-by: "Ramamurthy, Venkatesh" <venkatesh.ramamurthy@intel.com>
    Reported-by: Dan Williams <dan.j.williams@intel.com>
    Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>
    Fixes: 28b835d60fcc ("KVM: Update Posted-Interrupts Descriptor when vCPU is preempted")
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/arch/x86/kvm/vmx.c b/arch/x86/kvm/vmx.c
index a29f5452f83d..81a3ab2afe6e 100644
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@ -11215,12 +11215,8 @@ static int vmx_update_pi_irte(struct kvm *kvm, unsigned int host_irq,
 
 		if (set)
 			ret = irq_set_vcpu_affinity(host_irq, &vcpu_info);
-		else {
-			/* suppress notification event before unposting */
-			pi_set_sn(vcpu_to_pi_desc(vcpu));
+		else
 			ret = irq_set_vcpu_affinity(host_irq, NULL);
-			pi_clear_sn(vcpu_to_pi_desc(vcpu));
-		}
 
 		if (ret < 0) {
 			printk(KERN_INFO "%s: failed to update PI IRTE\n",
