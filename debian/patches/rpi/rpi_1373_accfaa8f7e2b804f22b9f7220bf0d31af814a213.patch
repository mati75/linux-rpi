commit accfaa8f7e2b804f22b9f7220bf0d31af814a213
Author: Tariq Toukan <tariqt@mellanox.com>
Date:   Wed Feb 22 17:20:16 2017 +0200

    net/mlx5e: Fix wrong CQE decompression
    
    [ Upstream commit 36154be40a28e4afaa0416da2681d80b7e2ca319 ]
    
    In cqe compression with striding RQ, the decompression of the CQE field
    wqe_counter was done with a wrong wraparound value.
    This caused handling cqes with a wrong pointer to wqe (rx descriptor)
    and creating SKBs with wrong data, pointing to wrong (and already consumed)
    strides/pages.
    
    The meaning of the CQE field wqe_counter in striding RQ holds the
    stride index instead of the WQE index. Hence, when decompressing
    a CQE, wqe_counter should have wrapped-around the number of strides
    in a single multi-packet WQE.
    
    We dropped this wrap-around mask at all in CQE decompression of striding
    RQ. It is not needed as in such cases the CQE compression session would
    break because of different value of wqe_id field, starting a new
    compression session.
    
    Tested:
     ethtool -K ethxx lro off/on
     ethtool --set-priv-flags ethxx rx_cqe_compress on
     super_netperf 16 {ipv4,ipv6} -t TCP_STREAM -m 50 -D
     verified no csum errors and no page refcount issues.
    
    Fixes: 7219ab34f184 ("net/mlx5e: CQE compression")
    Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
    Reported-by: Tom Herbert <tom@herbertland.com>
    Cc: kernel-team@fb.com
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

Index: linuxtest/dummy/rpi_1373_accfaa8f7e2b804f22b9f7220bf0d31af814a213.txt
===================================================================
--- /dev/null
+++ linuxtest/dummy/rpi_1373_accfaa8f7e2b804f22b9f7220bf0d31af814a213.txt
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
