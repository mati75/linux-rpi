commit f5b4de05129402d89218a483716cfd981f8bcf41
Author: Paul Burton <paul.burton@mips.com>
Date:   Mon Jan 28 23:16:22 2019 +0000

    MIPS: VDSO: Include $(ccflags-vdso) in o32,n32 .lds builds
    
    commit 67fc5dc8a541e8f458d7f08bf88ff55933bf9f9d upstream.
    
    When generating vdso-o32.lds & vdso-n32.lds for use with programs
    running as compat ABIs under 64b kernels, we previously haven't included
    the compiler flags that are supposedly common to all ABIs - ie. those in
    the ccflags-vdso variable.
    
    This is problematic in cases where we need to provide the -m%-float flag
    in order to ensure that we don't attempt to use a floating point ABI
    that's incompatible with the target CPU & ABI. For example a toolchain
    using current gcc trunk configured --with-fp-32=xx fails to build a
    64r6el_defconfig kernel with the following error:
    
      cc1: error: '-march=mips1' requires '-mfp32'
      make[2]: *** [arch/mips/vdso/Makefile:135: arch/mips/vdso/vdso-o32.lds] Error 1
    
    Include $(ccflags-vdso) for the compat VDSO .lds builds, just as it is
    included for the native VDSO .lds & when compiling objects for the
    compat VDSOs. This ensures we consistently provide the -msoft-float flag
    amongst others, avoiding the problem by ensuring we're agnostic to the
    toolchain defaults.
    
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Fixes: ebb5e78cc634 ("MIPS: Initial implementation of a VDSO")
    Cc: linux-mips@vger.kernel.org
    Cc: Kevin Hilman <khilman@baylibre.com>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Cc: Maciej W . Rozycki <macro@linux-mips.org>
    Cc: stable@vger.kernel.org # v4.4+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/arch/mips/vdso/Makefile b/arch/mips/vdso/Makefile
index 7e89dd317efd..6f10312e0c76 100644
--- a/arch/mips/vdso/Makefile
+++ b/arch/mips/vdso/Makefile
@@ -129,7 +129,7 @@ $(obj)/%-o32.o: $(src)/%.c FORCE
 	$(call cmd,force_checksrc)
 	$(call if_changed_rule,cc_o_c)
 
-$(obj)/vdso-o32.lds: KBUILD_CPPFLAGS := -mabi=32
+$(obj)/vdso-o32.lds: KBUILD_CPPFLAGS := $(ccflags-vdso) -mabi=32
 $(obj)/vdso-o32.lds: $(src)/vdso.lds.S FORCE
 	$(call if_changed_dep,cpp_lds_S)
 
@@ -169,7 +169,7 @@ $(obj)/%-n32.o: $(src)/%.c FORCE
 	$(call cmd,force_checksrc)
 	$(call if_changed_rule,cc_o_c)
 
-$(obj)/vdso-n32.lds: KBUILD_CPPFLAGS := -mabi=n32
+$(obj)/vdso-n32.lds: KBUILD_CPPFLAGS := $(ccflags-vdso) -mabi=n32
 $(obj)/vdso-n32.lds: $(src)/vdso.lds.S FORCE
 	$(call if_changed_dep,cpp_lds_S)
 
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1330_f5b4de05129402d89218a483716cfd981f8bcf41.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1330_f5b4de05129402d89218a483716cfd981f8bcf41.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
