commit 7cd4e833761f0dfccd3ae61be0a620684556601b
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Feb 4 03:27:58 2019 +0800

    sctp: check and update stream->out_curr when allocating stream_out
    
    [ Upstream commit cfe4bd7a257f6d6f81d3458d8c9d9ec4957539e6 ]
    
    Now when using stream reconfig to add out streams, stream->out
    will get re-allocated, and all old streams' information will
    be copied to the new ones and the old ones will be freed.
    
    So without stream->out_curr updated, next time when trying to
    send from stream->out_curr stream, a panic would be caused.
    
    This patch is to check and update stream->out_curr when
    allocating stream_out.
    
    v1->v2:
      - define fa_index() to get elem index from stream->out_curr.
    v2->v3:
      - repost with no change.
    
    Fixes: 5bbbbe32a431 ("sctp: introduce stream scheduler foundations")
    Reported-by: Ying Xu <yinxu@redhat.com>
    Reported-by: syzbot+e33a3a138267ca119c7d@syzkaller.appspotmail.com
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/net/sctp/stream.c b/net/sctp/stream.c
index 80e0ae5534ec..f24633114dfd 100644
--- a/net/sctp/stream.c
+++ b/net/sctp/stream.c
@@ -84,6 +84,19 @@ static void fa_zero(struct flex_array *fa, size_t index, size_t count)
 	}
 }
 
+static size_t fa_index(struct flex_array *fa, void *elem, size_t count)
+{
+	size_t index = 0;
+
+	while (count--) {
+		if (elem == flex_array_get(fa, index))
+			break;
+		index++;
+	}
+
+	return index;
+}
+
 /* Migrates chunks from stream queues to new stream queues if needed,
  * but not across associations. Also, removes those chunks to streams
  * higher than the new max.
@@ -147,6 +160,13 @@ static int sctp_stream_alloc_out(struct sctp_stream *stream, __u16 outcnt,
 
 	if (stream->out) {
 		fa_copy(out, stream->out, 0, min(outcnt, stream->outcnt));
+		if (stream->out_curr) {
+			size_t index = fa_index(stream->out, stream->out_curr,
+						stream->outcnt);
+
+			BUG_ON(index == stream->outcnt);
+			stream->out_curr = flex_array_get(out, index);
+		}
 		fa_free(stream->out);
 	}
 
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1263_7cd4e833761f0dfccd3ae61be0a620684556601b.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1263_7cd4e833761f0dfccd3ae61be0a620684556601b.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
