commit 56286383eb242aa53bdd0657a9b2ac66cb4c4982
Author: Lukas Wunner <lukas@wunner.de>
Date:   Sat Jan 19 09:00:26 2019 +0100

    bcm2835-mmc: Fix duplicate free_irq() on remove
    
    The BCM2835 MMC host driver requests its interrupt as a device-managed
    resource, so the interrupt is automatically freed after the driver is
    unbound.
    
    However on driver unbind, bcm2835_mmc_remove() frees the interrupt
    explicitly to avoid invocation of the interrupt handler after driver
    structures have been torn down.
    
    The interrupt is thus freed twice, leading to a WARN splat in
    __free_irq().  Fix by not requesting the interrupt as a device-managed
    resource.
    
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Cc: Frank Pavlic <f.pavlic@kunbus.de>

diff --git a/drivers/mmc/host/bcm2835-mmc.c b/drivers/mmc/host/bcm2835-mmc.c
index c4ca979995f9..4f215a47fdd7 100644
--- a/drivers/mmc/host/bcm2835-mmc.c
+++ b/drivers/mmc/host/bcm2835-mmc.c
@@ -1389,9 +1389,9 @@ static int bcm2835_mmc_add_host(struct bcm2835_host *host)
 	init_waitqueue_head(&host->buf_ready_int);
 
 	bcm2835_mmc_init(host, 0);
-	ret = devm_request_threaded_irq(dev, host->irq, bcm2835_mmc_irq,
-					bcm2835_mmc_thread_irq, IRQF_SHARED,
-					mmc_hostname(mmc), host);
+	ret = request_threaded_irq(host->irq, bcm2835_mmc_irq,
+				   bcm2835_mmc_thread_irq, IRQF_SHARED,
+				   mmc_hostname(mmc), host);
 	if (ret) {
 		dev_err(dev, "Failed to request IRQ %d: %d\n", host->irq, ret);
 		goto untasklet;
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1389_56286383eb242aa53bdd0657a9b2ac66cb4c4982.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1389_56286383eb242aa53bdd0657a9b2ac66cb4c4982.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
