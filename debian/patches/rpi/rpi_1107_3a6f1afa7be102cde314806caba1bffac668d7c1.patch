commit 3a6f1afa7be102cde314806caba1bffac668d7c1
Author: Yu Zhao <yuzhao@google.com>
Date:   Thu Dec 6 14:39:15 2018 -0700

    iommu/amd: Fix amd_iommu=force_isolation
    
    [ Upstream commit c12b08ebbe16f0d3a96a116d86709b04c1ee8e74 ]
    
    The parameter is still there but it's ignored. We need to check its
    value before deciding to go into passthrough mode for AMD IOMMU v2
    capable device.
    
    We occasionally use this parameter to force v2 capable device into
    translation mode to debug memory corruption that we suspect is
    caused by DMA writes.
    
    To address the following comment from Joerg Roedel on the first
    version, v2 capability of device is completely ignored.
    > This breaks the iommu_v2 use-case, as it needs a direct mapping for the
    > devices that support it.
    
    And from Documentation/admin-guide/kernel-parameters.txt:
      This option does not override iommu=pt
    
    Fixes: aafd8ba0ca74 ("iommu/amd: Implement add_device and remove_device")
    
    Signed-off-by: Yu Zhao <yuzhao@google.com>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

diff --git a/drivers/iommu/amd_iommu.c b/drivers/iommu/amd_iommu.c
index bee0dfb7b93b..34c9aa76a7bd 100644
--- a/drivers/iommu/amd_iommu.c
+++ b/drivers/iommu/amd_iommu.c
@@ -438,7 +438,14 @@ static int iommu_init_device(struct device *dev)
 
 	dev_data->alias = get_alias(dev);
 
-	if (dev_is_pci(dev) && pci_iommuv2_capable(to_pci_dev(dev))) {
+	/*
+	 * By default we use passthrough mode for IOMMUv2 capable device.
+	 * But if amd_iommu=force_isolation is set (e.g. to debug DMA to
+	 * invalid address), we ignore the capability for the device so
+	 * it'll be forced to go into translation mode.
+	 */
+	if ((iommu_pass_through || !amd_iommu_force_isolation) &&
+	    dev_is_pci(dev) && pci_iommuv2_capable(to_pci_dev(dev))) {
 		struct amd_iommu *iommu;
 
 		iommu = amd_iommu_rlookup_table[dev_data->devid];
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1107_3a6f1afa7be102cde314806caba1bffac668d7c1.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1107_3a6f1afa7be102cde314806caba1bffac668d7c1.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
