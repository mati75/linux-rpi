commit a9f07a13edf797b7ad2f1999dcfbce83c7924269
Author: Stefan Agner <stefan@agner.ch>
Date:   Fri Apr 29 10:32:17 2016 -0700

    mmc: read mmc alias from device tree
    
    To get the SD/MMC host device ID, read the alias from the device
    tree.
    
    This is useful in case a SoC has multipe SD/MMC host controllers while
    the second controller should logically be the first device (e.g. if
    the second controller is connected to an internal eMMC). Combined
    with block device numbering using MMC/SD host device ID, this
    results in predictable name assignment of the internal eMMC block
    device.
    
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Dmitry Torokhov <dtor@chromium.org>
    [dianders: rebase + roll in http://crosreview.com/259916]
    Signed-off-by: Douglas Anderson <dianders@chromium.org>

diff --git a/drivers/mmc/core/host.c b/drivers/mmc/core/host.c
index 3f8c85d5aa09..4dbd0e8e27a4 100644
--- a/drivers/mmc/core/host.c
+++ b/drivers/mmc/core/host.c
@@ -345,15 +345,30 @@ struct mmc_host *mmc_alloc_host(int extra, struct device *dev)
 {
 	int err;
 	struct mmc_host *host;
+	int id;
 
 	host = kzalloc(sizeof(struct mmc_host) + extra, GFP_KERNEL);
 	if (!host)
 		return NULL;
 
+	/* If OF aliases exist, start dynamic assignment after highest */
+	id = of_alias_get_highest_id("mmc");
+	id = (id < 0) ? 0 : id + 1;
+
+	/* If this devices has OF node, maybe it has an alias */
+	if (dev->of_node) {
+		int of_id = of_alias_get_id(dev->of_node, "mmc");
+
+		if (of_id < 0)
+			dev_warn(dev, "/aliases ID not available\n");
+		else
+			id = of_id;
+	}
+
 	/* scanning will be enabled when we're ready */
 	host->rescan_disable = 1;
 
-	err = ida_simple_get(&mmc_host_ida, 0, 0, GFP_KERNEL);
+	err = ida_simple_get(&mmc_host_ida, id, 0, GFP_KERNEL);
 	if (err < 0) {
 		kfree(host);
 		return NULL;
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1124_a9f07a13edf797b7ad2f1999dcfbce83c7924269.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1124_a9f07a13edf797b7ad2f1999dcfbce83c7924269.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
