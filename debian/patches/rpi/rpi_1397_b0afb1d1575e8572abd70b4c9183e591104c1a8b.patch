commit b0afb1d1575e8572abd70b4c9183e591104c1a8b
Author: David H <davidjhu@gmail.com>
Date:   Wed Oct 4 04:43:07 2017 -0700

    bcm2835-camera: Fix timestamp calculation problem (#2214)
    
    * bcm2835-camera: Fix timestamp calculation problem
    
    Use div_s64_rem() to convert usec timestamp to timeval
    to avoid integer signedness bug.
    
    * bcm2835-camera: Store kernel start time in NSEC instead of USEC
    
    * bcm2835-camera: Reword debug message for clarity

diff --git a/drivers/media/platform/bcm2835/bcm2835-camera.c b/drivers/media/platform/bcm2835/bcm2835-camera.c
index 6bdec0806126..5b68abbf9e45 100644
--- a/drivers/media/platform/bcm2835/bcm2835-camera.c
+++ b/drivers/media/platform/bcm2835/bcm2835-camera.c
@@ -363,37 +363,17 @@ static void buffer_cb(struct vchiq_mmal_instance *instance,
 				 buf->vb.vb2_buf.timestamp);
 
 			} else if(pts != 0) {
-				struct timeval timestamp;
 				s64 runtime_us = pts -
 				    dev->capture.vc_start_timestamp;
-				u32 div = 0;
-				u32 rem = 0;
-
-				div =
-				    div_u64_rem(runtime_us, USEC_PER_SEC, &rem);
-				timestamp.tv_sec =
-				    dev->capture.kernel_start_ts.tv_sec + div;
-				timestamp.tv_usec =
-				    dev->capture.kernel_start_ts.tv_usec + rem;
-
-				if (timestamp.tv_usec >=
-				    USEC_PER_SEC) {
-					timestamp.tv_sec++;
-					timestamp.tv_usec -=
-					    USEC_PER_SEC;
-				}
+				buf->vb.vb2_buf.timestamp = (runtime_us * NSEC_PER_USEC) +
+				    dev->capture.kernel_start_timestamp;
 				v4l2_dbg(1, bcm2835_v4l2_debug, &dev->v4l2_dev,
-					 "Convert start time %d.%06d and %llu "
-					 "with offset %llu to %d.%06d\n",
-					 (int)dev->capture.kernel_start_ts.
-					 tv_sec,
-					 (int)dev->capture.kernel_start_ts.
-					 tv_usec,
-					 dev->capture.vc_start_timestamp, pts,
-					 (int)timestamp.tv_sec,
-					 (int)timestamp.tv_usec);
-				buf->vb.vb2_buf.timestamp = timestamp.tv_sec * 1000000000ULL +
-					timestamp.tv_usec * 1000ULL;
+					 "Buffer time set as converted timestamp - %llu "
+					 "= (pts [%lld usec] - vc start time [%llu usec]) "
+					 "+ kernel start time [%llu nsec]\n",
+					 buf->vb.vb2_buf.timestamp,
+					 pts, dev->capture.vc_start_timestamp,
+					 dev->capture.kernel_start_timestamp);
 			} else {
 				if (dev->capture.last_timestamp) {
 					buf->vb.vb2_buf.timestamp = dev->capture.last_timestamp;
@@ -403,8 +383,7 @@ static void buffer_cb(struct vchiq_mmal_instance *instance,
 				}
 				else {
 					buf->vb.vb2_buf.timestamp =
-					dev->capture.kernel_start_ts.tv_sec  * 1000000000ULL +
-					dev->capture.kernel_start_ts.tv_usec * 1000ULL;
+					dev->capture.kernel_start_timestamp;
 					v4l2_dbg(1, bcm2835_v4l2_debug, &dev->v4l2_dev,
 					 "Buffer time set as start timestamp - %lld",
 					 buf->vb.vb2_buf.timestamp);
@@ -586,7 +565,7 @@ static int start_streaming(struct vb2_queue *vq, unsigned int count)
 
 	dev->capture.last_timestamp = 0;
 
-	v4l2_get_timestamp(&dev->capture.kernel_start_ts);
+	dev->capture.kernel_start_timestamp = ktime_get_ns();
 
 	/* enable the camera port */
 	dev->capture.port->cb_ctx = dev;
diff --git a/drivers/media/platform/bcm2835/bcm2835-camera.h b/drivers/media/platform/bcm2835/bcm2835-camera.h
index 7f8a68916a67..d1b2a675e41d 100644
--- a/drivers/media/platform/bcm2835/bcm2835-camera.h
+++ b/drivers/media/platform/bcm2835/bcm2835-camera.h
@@ -92,7 +92,7 @@ struct bm2835_mmal_dev {
 		/* VC start timestamp for streaming */
 		s64         vc_start_timestamp;
 		/* Kernel start timestamp for streaming */
-		struct timeval kernel_start_ts;
+		u64         kernel_start_timestamp;
 		/* Timestamp of last frame */
 		u64 		last_timestamp;
 
