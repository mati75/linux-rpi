commit aed4ca2690c2e80d86f53883ba331f4b50fffb5c
Author: Lyude Paul <lyude@redhat.com>
Date:   Thu Aug 9 18:22:05 2018 -0400

    drm/nouveau: Only write DP_MSTM_CTRL when needed
    
    commit b26b4590dd53e012526342e749c423e6c0e73437 upstream.
    
    Currently, nouveau will re-write the DP_MSTM_CTRL register for an MST
    hub every time it receives a long HPD pulse on DP. This isn't actually
    necessary and additionally, has some unintended side effects.
    
    With the P50 I've got here, rewriting DP_MSTM_CTRL constantly seems to
    make it rather likely (1 out of 5 times usually) that bringing up MST
    with it's ThinkPad dock will fail and result in sideband messages timing
    out in the middle. Afterwards, successive probes don't manage to get the
    dock to communicate properly over MST sideband properly.
    
    Many times sideband message timeouts from MST hubs are indicative of
    either the source or the sink dropping an ESI event, which can cause
    DRM's perspective of the topology's current state to go out of sync with
    reality. While it's tough to really know for sure what's happening to
    the dock, using userspace tools to write to DP_MSTM_CTRL in the middle
    of the MST link probing process does appear to make things flaky. It's
    possible that when we write to DP_MSTM_CTRL, the function that gets
    triggered to respond in the dock's firmware temporarily puts it in a
    state where it might end up not reporting an ESI to the source, or ends
    up dropping a sideband message we sent it.
    
    So, to fix this we make it so that when probing an MST topology, we
    respect it's current state. If the dock's already enabled, we simply
    read DP_MSTM_CTRL and disable the topology if it's value is not what we
    expected. Otherwise, we perform the normal MST probing dance. We avoid
    taking any action except if the state of the MST topology actually
    changes.
    
    This fixes MST sideband message timeouts and detection failures on my
    P50 with its ThinkPad dock.
    
    Signed-off-by: Lyude Paul <lyude@redhat.com>
    Cc: stable@vger.kernel.org
    Cc: Karol Herbst <karolherbst@gmail.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/gpu/drm/nouveau/dispnv50/disp.c b/drivers/gpu/drm/nouveau/dispnv50/disp.c
index c65eae6f03b9..9b978f9ccf44 100644
--- a/drivers/gpu/drm/nouveau/dispnv50/disp.c
+++ b/drivers/gpu/drm/nouveau/dispnv50/disp.c
@@ -1121,31 +1121,58 @@ nv50_mstm_enable(struct nv50_mstm *mstm, u8 dpcd, int state)
 int
 nv50_mstm_detect(struct nv50_mstm *mstm, u8 dpcd[8], int allow)
 {
-	int ret, state = 0;
+	struct drm_dp_aux *aux;
+	int ret;
+	bool old_state, new_state;
+	u8 mstm_ctrl;
 
 	if (!mstm)
 		return 0;
 
-	if (dpcd[0] >= 0x12) {
-		ret = drm_dp_dpcd_readb(mstm->mgr.aux, DP_MSTM_CAP, &dpcd[1]);
+	mutex_lock(&mstm->mgr.lock);
+
+	old_state = mstm->mgr.mst_state;
+	new_state = old_state;
+	aux = mstm->mgr.aux;
+
+	if (old_state) {
+		/* Just check that the MST hub is still as we expect it */
+		ret = drm_dp_dpcd_readb(aux, DP_MSTM_CTRL, &mstm_ctrl);
+		if (ret < 0 || !(mstm_ctrl & DP_MST_EN)) {
+			DRM_DEBUG_KMS("Hub gone, disabling MST topology\n");
+			new_state = false;
+		}
+	} else if (dpcd[0] >= 0x12) {
+		ret = drm_dp_dpcd_readb(aux, DP_MSTM_CAP, &dpcd[1]);
 		if (ret < 0)
-			return ret;
+			goto probe_error;
 
 		if (!(dpcd[1] & DP_MST_CAP))
 			dpcd[0] = 0x11;
 		else
-			state = allow;
+			new_state = allow;
 	}
 
-	ret = nv50_mstm_enable(mstm, dpcd[0], state);
+	if (new_state == old_state) {
+		mutex_unlock(&mstm->mgr.lock);
+		return new_state;
+	}
+
+	ret = nv50_mstm_enable(mstm, dpcd[0], new_state);
 	if (ret)
-		return ret;
+		goto probe_error;
+
+	mutex_unlock(&mstm->mgr.lock);
 
-	ret = drm_dp_mst_topology_mgr_set_mst(&mstm->mgr, state);
+	ret = drm_dp_mst_topology_mgr_set_mst(&mstm->mgr, new_state);
 	if (ret)
 		return nv50_mstm_enable(mstm, dpcd[0], 0);
 
-	return mstm->mgr.mst_state;
+	return new_state;
+
+probe_error:
+	mutex_unlock(&mstm->mgr.lock);
+	return ret;
 }
 
 static void
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1062_aed4ca2690c2e80d86f53883ba331f4b50fffb5c.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1062_aed4ca2690c2e80d86f53883ba331f4b50fffb5c.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
