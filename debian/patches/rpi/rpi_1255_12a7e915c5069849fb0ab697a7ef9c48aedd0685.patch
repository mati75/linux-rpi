commit 12a7e915c5069849fb0ab697a7ef9c48aedd0685
Author: Steve Wise <swise@opengridcomputing.com>
Date:   Fri Aug 31 07:16:03 2018 -0700

    RDMA/uverbs: Atomically flush and mark closed the comp event queue
    
    commit 67e3816842fe6414d629c7515b955952ec40c7d7 upstream.
    
    Currently a uverbs completion event queue is flushed of events in
    ib_uverbs_comp_event_close() with the queue spinlock held and then
    released.  Yet setting ev_queue->is_closed is not set until later in
    uverbs_hot_unplug_completion_event_file().
    
    In between the time ib_uverbs_comp_event_close() releases the lock and
    uverbs_hot_unplug_completion_event_file() acquires the lock, a completion
    event can arrive and be inserted into the event queue by
    ib_uverbs_comp_handler().
    
    This can cause a "double add" list_add warning or crash depending on the
    kernel configuration, or a memory leak because the event is never dequeued
    since the queue is already closed down.
    
    So add setting ev_queue->is_closed = 1 to ib_uverbs_comp_event_close().
    
    Cc: stable@vger.kernel.org
    Fixes: 1e7710f3f656 ("IB/core: Change completion channel to use the reworked objects schema")
    Signed-off-by: Steve Wise <swise@opengridcomputing.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/infiniband/core/uverbs_main.c b/drivers/infiniband/core/uverbs_main.c
index 2094d136513d..92d8469e28f3 100644
--- a/drivers/infiniband/core/uverbs_main.c
+++ b/drivers/infiniband/core/uverbs_main.c
@@ -429,6 +429,7 @@ static int ib_uverbs_comp_event_close(struct inode *inode, struct file *filp)
 			list_del(&entry->obj_list);
 		kfree(entry);
 	}
+	file->ev_queue.is_closed = 1;
 	spin_unlock_irq(&file->ev_queue.lock);
 
 	uverbs_close_fd(filp);
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1255_12a7e915c5069849fb0ab697a7ef9c48aedd0685.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1255_12a7e915c5069849fb0ab697a7ef9c48aedd0685.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
