commit 2585867ac3cfa3bc11868b16a02923494aae7433
Author: Phil Elwell <phil@raspberrypi.org>
Date:   Fri May 26 13:03:41 2017 +0100

    BCM270X_DT: Add midi-uart1 overlay
    
    Add a scaler to the ttyS0 clock so that requesting 38400 baud results
    in an approximately 31250 baud signal. This is analagous to
    midi-uart0, except for ttyS0, which may be useful on Pi3 and also
    may avoid an issue with ttyAMA0 failing to synchronise to an active
    data stream.
    
    See: https://www.raspberrypi.org/forums/viewtopic.php?f=107&t=183860
    
    Signed-off-by: Phil Elwell <phil@raspberrypi.org>

diff --git a/arch/arm/boot/dts/overlays/Makefile b/arch/arm/boot/dts/overlays/Makefile
index e2f66a55dc5a..e0ff5793f124 100644
--- a/arch/arm/boot/dts/overlays/Makefile
+++ b/arch/arm/boot/dts/overlays/Makefile
@@ -56,6 +56,7 @@ dtbo-$(CONFIG_ARCH_BCM2835) += \
 	mcp2515-can1.dtbo \
 	mcp3008.dtbo \
 	midi-uart0.dtbo \
+	midi-uart1.dtbo \
 	mmc.dtbo \
 	mz61581.dtbo \
 	pi3-act-led.dtbo \
diff --git a/arch/arm/boot/dts/overlays/README b/arch/arm/boot/dts/overlays/README
index e2a803e5180c..ec9e7b194167 100644
--- a/arch/arm/boot/dts/overlays/README
+++ b/arch/arm/boot/dts/overlays/README
@@ -864,6 +864,13 @@ Load:   dtoverlay=midi-uart0
 Params: <None>
 
 
+Name:   midi-uart1
+Info:   Configures UART1 (ttyS0) so that a requested 38.4kbaud actually gets
+        31.25kbaud, the frequency required for MIDI
+Load:   dtoverlay=midi-uart1
+Params: <None>
+
+
 Name:   mmc
 Info:   Selects the bcm2835-mmc SD/MMC driver, optionally with overclock
 Load:   dtoverlay=mmc,<param>=<val>
diff --git a/arch/arm/boot/dts/overlays/midi-uart1-overlay.dts b/arch/arm/boot/dts/overlays/midi-uart1-overlay.dts
new file mode 100644
index 000000000000..e0bc410acbff
--- /dev/null
+++ b/arch/arm/boot/dts/overlays/midi-uart1-overlay.dts
@@ -0,0 +1,43 @@
+/dts-v1/;
+/plugin/;
+
+#include <dt-bindings/clock/bcm2835-aux.h>
+
+/*
+ * Fake a higher clock rate to get a larger divisor, and thereby a lower
+ * baudrate. The real clock is 48MHz, which we scale so that requesting
+ * 38.4kHz results in an actual 31.25kHz.
+ *
+ *   48000000*38400/31250 = 58982400
+ */
+
+/{
+	compatible = "brcm,bcm2835";
+
+	fragment@0 {
+		target-path = "/clocks";
+		__overlay__ {
+			midi_clk: clock@5 {
+				compatible = "fixed-factor-clock";
+				#clock-cells = <0>;
+				clocks = <&aux BCM2835_AUX_CLOCK_UART>;
+				clock-mult = <38400>;
+				clock-div  = <31250>;
+			};
+		};
+	};
+
+	fragment@1 {
+		target = <&uart1>;
+		__overlay__ {
+			clocks = <&midi_clk>;
+		};
+	};
+
+	fragment@2 {
+		target = <&aux>;
+		__overlay__ {
+			clock-output-names = "aux_uart", "aux_spi1", "aux_spi2";
+		};
+	};
+};
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1165_2585867ac3cfa3bc11868b16a02923494aae7433.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1165_2585867ac3cfa3bc11868b16a02923494aae7433.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
