commit 3ec93eb3808feb14afb965f2095a17a6398af6a6
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Fri Feb 8 10:52:07 2019 -0500

    dm crypt: don't overallocate the integrity tag space
    
    commit ff0c129d3b5ecb3df7c8f5e2236582bf745b6c5f upstream.
    
    bio_sectors() returns the value in the units of 512-byte sectors (no
    matter what the real sector size of the device).  dm-crypt multiplies
    bio_sectors() by on_disk_tag_size to calculate the space allocated for
    integrity tags.  If dm-crypt is running with sector size larger than
    512b, it allocates more data than is needed.
    
    Device Mapper trims the extra space when passing the bio to
    dm-integrity, so this bug didn't result in any visible misbehavior.
    But it must be fixed to avoid wasteful memory allocation for the block
    integrity payload.
    
    Fixes: ef43aa38063a6 ("dm crypt: add cryptographic data integrity protection (authenticated encryption)")
    Cc: stable@vger.kernel.org # 4.12+
    Reported-by: Milan Broz <mbroz@redhat.com>
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/md/dm-crypt.c b/drivers/md/dm-crypt.c
index 5921ecc670c1..f3dcc7640319 100644
--- a/drivers/md/dm-crypt.c
+++ b/drivers/md/dm-crypt.c
@@ -932,7 +932,7 @@ static int dm_crypt_integrity_io_alloc(struct dm_crypt_io *io, struct bio *bio)
 	if (IS_ERR(bip))
 		return PTR_ERR(bip);
 
-	tag_len = io->cc->on_disk_tag_size * bio_sectors(bio);
+	tag_len = io->cc->on_disk_tag_size * (bio_sectors(bio) >> io->cc->sector_shift);
 
 	bip->bip_iter.bi_size = tag_len;
 	bip->bip_iter.bi_sector = io->cc->start + io->sector;
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1433_3ec93eb3808feb14afb965f2095a17a6398af6a6.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1433_3ec93eb3808feb14afb965f2095a17a6398af6a6.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
