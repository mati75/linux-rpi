commit 4c38317174d0f344b94f979ba452450c32d6729d
Author: Phil Elwell <phil@raspberrypi.org>
Date:   Tue Jan 15 12:41:15 2019 +0000

    spi: spi-bcm2835: Disable forced software CS
    
    With GPIO CS used by the DTBs, allow hardware CS to be selected by an
    overlay.
    
    Signed-off-by: Phil Elwell <phil@raspberrypi.org>

diff --git a/drivers/spi/spi-bcm2835.c b/drivers/spi/spi-bcm2835.c
index 0344f386213d..cfaf98775a4b 100644
--- a/drivers/spi/spi-bcm2835.c
+++ b/drivers/spi/spi-bcm2835.c
@@ -927,8 +927,6 @@ static void bcm2835_spi_set_cs(struct spi_device *spi, bool gpio_level)
 
 static int bcm2835_spi_setup(struct spi_device *spi)
 {
-	int err;
-	struct gpio_chip *chip;
 	/*
 	 * sanity checking the native-chipselects
 	 */
@@ -945,29 +943,6 @@ static int bcm2835_spi_setup(struct spi_device *spi)
 			"setup: only two native chip-selects are supported\n");
 		return -EINVAL;
 	}
-	/* now translate native cs to GPIO */
-
-	/* get the gpio chip for the base */
-	chip = gpiochip_find("pinctrl-bcm2835", chip_match_name);
-	if (!chip)
-		return 0;
-
-	/* and calculate the real CS */
-	spi->cs_gpio = chip->base + 8 - spi->chip_select;
-
-	/* and set up the "mode" and level */
-	dev_info(&spi->dev, "setting up native-CS%i as GPIO %i\n",
-		 spi->chip_select, spi->cs_gpio);
-
-	/* set up GPIO as output and pull to the correct level */
-	err = gpio_direction_output(spi->cs_gpio,
-				    (spi->mode & SPI_CS_HIGH) ? 0 : 1);
-	if (err) {
-		dev_err(&spi->dev,
-			"could not set CS%i gpio %i as output: %i",
-			spi->chip_select, spi->cs_gpio, err);
-		return err;
-	}
 
 	return 0;
 }
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1172_4c38317174d0f344b94f979ba452450c32d6729d.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1172_4c38317174d0f344b94f979ba452450c32d6729d.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
