commit 662a79661d85f3aa0cd95b8ba7dc7c4e9b527826
Author: Dave Stevenson <dave.stevenson@raspberrypi.org>
Date:   Fri May 19 14:29:12 2017 +0100

    vcsm: code-style: Fix comment indentation
    
    Signed-off-by: Dave Stevenson <dave.stevenson@raspberrypi.org>

diff --git a/drivers/char/broadcom/vc_sm/vc_vchi_sm.h b/drivers/char/broadcom/vc_sm/vc_vchi_sm.h
index 5e279f5a95fa..f8e555dc3007 100644
--- a/drivers/char/broadcom/vc_sm/vc_vchi_sm.h
+++ b/drivers/char/broadcom/vc_sm/vc_vchi_sm.h
@@ -19,63 +19,73 @@
 
 #include "vc_sm_defs.h"
 
-/* Forward declare.
+/*
+ * Forward declare.
 */
 typedef struct sm_instance *VC_VCHI_SM_HANDLE_T;
 
-/* Initialize the shared memory service, opens up vchi connection to talk to it.
-*/
+/*
+ * Initialize the shared memory service, opens up vchi connection to talk to it.
+ */
 VC_VCHI_SM_HANDLE_T vc_vchi_sm_init(VCHI_INSTANCE_T vchi_instance,
 				    VCHI_CONNECTION_T **vchi_connections,
 				    uint32_t num_connections);
 
-/* Terminates the shared memory service.
-*/
+/*
+ * Terminates the shared memory service.
+ */
 int vc_vchi_sm_stop(VC_VCHI_SM_HANDLE_T *handle);
 
-/* Ask the shared memory service to allocate some memory on videocre and
-** return the result of this allocation (which upon success will be a pointer
-** to some memory in videocore space).
-*/
+/*
+ * Ask the shared memory service to allocate some memory on videocre and
+ * return the result of this allocation (which upon success will be a pointer
+ * to some memory in videocore space).
+ */
 int vc_vchi_sm_alloc(VC_VCHI_SM_HANDLE_T handle,
 		     VC_SM_ALLOC_T *alloc,
 		     VC_SM_ALLOC_RESULT_T *alloc_result, uint32_t *trans_id);
 
-/* Ask the shared memory service to free up some memory that was previously
-** allocated by the vc_vchi_sm_alloc function call.
-*/
+/*
+ * Ask the shared memory service to free up some memory that was previously
+ * allocated by the vc_vchi_sm_alloc function call.
+ */
 int vc_vchi_sm_free(VC_VCHI_SM_HANDLE_T handle,
 		    VC_SM_FREE_T *free, uint32_t *trans_id);
 
-/* Ask the shared memory service to lock up some memory that was previously
-** allocated by the vc_vchi_sm_alloc function call.
+/*
+ * Ask the shared memory service to lock up some memory that was previously
+ * allocated by the vc_vchi_sm_alloc function call.
 */
 int vc_vchi_sm_lock(VC_VCHI_SM_HANDLE_T handle,
 		    VC_SM_LOCK_UNLOCK_T *lock_unlock,
 		    VC_SM_LOCK_RESULT_T *lock_result, uint32_t *trans_id);
 
-/* Ask the shared memory service to unlock some memory that was previously
-** allocated by the vc_vchi_sm_alloc function call.
+/*
+ * Ask the shared memory service to unlock some memory that was previously
+ * allocated by the vc_vchi_sm_alloc function call.
 */
 int vc_vchi_sm_unlock(VC_VCHI_SM_HANDLE_T handle,
 		      VC_SM_LOCK_UNLOCK_T *lock_unlock,
 		      uint32_t *trans_id, uint8_t wait_reply);
 
-/* Ask the shared memory service to resize some memory that was previously
-** allocated by the vc_vchi_sm_alloc function call.
+/*
+ * Ask the shared memory service to resize some memory that was previously
+ * allocated by the vc_vchi_sm_alloc function call.
 */
 int vc_vchi_sm_resize(VC_VCHI_SM_HANDLE_T handle,
 		      VC_SM_RESIZE_T *resize, uint32_t *trans_id);
 
-/* Walk the allocated resources on the videocore side, the allocation will
-** show up in the log.  This is purely for debug/information and takes no
-** specific actions.
+/*
+ * Walk the allocated resources on the videocore side, the allocation will
+ * show up in the log.  This is purely for debug/information and takes no
+ * specific actions.
 */
 int vc_vchi_sm_walk_alloc(VC_VCHI_SM_HANDLE_T handle);
 
-/* Clean up following a previously interrupted action which left the system
-** in a bad state of some sort.
-*/
+/*
+ * Clean up following a previously interrupted action which left the system
+ * in a bad state of some sort.
+ */
 int vc_vchi_sm_clean_up(VC_VCHI_SM_HANDLE_T handle,
 			VC_SM_ACTION_CLEAN_T *action_clean);
 
