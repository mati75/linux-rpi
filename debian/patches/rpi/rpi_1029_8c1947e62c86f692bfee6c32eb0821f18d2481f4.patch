commit 8c1947e62c86f692bfee6c32eb0821f18d2481f4
Author: Mark <dmarkh@cfl.rr.com>
Date:   Sun Aug 12 11:47:16 2018 -0400

    tty: serial: 8250: Revert NXP SC16C2552 workaround
    
    commit 47ac76662ca9c5852fd353093f19de3ae85f2e66 upstream.
    
    Revert commit ecb988a3b7985913d1f0112f66667cdd15e40711: tty: serial:
    8250: 8250_core: NXP SC16C2552 workaround
    
    The above commit causes userland application to no longer write
    correctly its first write to a dumb terminal connected to /dev/ttyS0.
    This commit seems to be the culprit. It's as though the TX FIFO is being
    reset during that write. What should be displayed is:
    
    PSW 80000000 INST 00000000                           HALT
    //
    
    What is displayed is some variation of:
    
    T 00000000           HAL//
    
    Reverting this commit via this patch fixes my problem.
    
    Signed-off-by: Mark Hounschell <dmarkh@cfl.rr.com>
    Fixes: ecb988a3b798 ("tty: serial: 8250: 8250_core: NXP SC16C2552 workaround")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/tty/serial/8250/8250_port.c b/drivers/tty/serial/8250/8250_port.c
index 95833cbc4338..8d981168279c 100644
--- a/drivers/tty/serial/8250/8250_port.c
+++ b/drivers/tty/serial/8250/8250_port.c
@@ -90,8 +90,7 @@ static const struct serial8250_config uart_config[] = {
 		.name		= "16550A",
 		.fifo_size	= 16,
 		.tx_loadsz	= 16,
-		.fcr		= UART_FCR_ENABLE_FIFO | UART_FCR_R_TRIG_10 |
-				  UART_FCR_CLEAR_RCVR | UART_FCR_CLEAR_XMIT,
+		.fcr		= UART_FCR_ENABLE_FIFO | UART_FCR_R_TRIG_10,
 		.rxtrig_bytes	= {1, 4, 8, 14},
 		.flags		= UART_CAP_FIFO,
 	},
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1029_8c1947e62c86f692bfee6c32eb0821f18d2481f4.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1029_8c1947e62c86f692bfee6c32eb0821f18d2481f4.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
