commit a59e386c4f4fce346161c0a62a5e1fbc1f435d6f
Author: Simon Guinot <simon.guinot@sequanux.org>
Date:   Mon Nov 13 16:27:02 2017 +0100

    net: mvneta: fix handling of the Tx descriptor counter
    
    commit 0d63785c6b94b5d2f095f90755825f90eea791f5 upstream.
    
    The mvneta controller provides a 8-bit register to update the pending
    Tx descriptor counter. Then, a maximum of 255 Tx descriptors can be
    added at once. In the current code the mvneta_txq_pend_desc_add function
    assumes the caller takes care of this limit. But it is not the case. In
    some situations (xmit_more flag), more than 255 descriptors are added.
    When this happens, the Tx descriptor counter register is updated with a
    wrong value, which breaks the whole Tx queue management.
    
    This patch fixes the issue by allowing the mvneta_txq_pend_desc_add
    function to process more than 255 Tx descriptors.
    
    Fixes: 2a90f7e1d5d0 ("net: mvneta: add xmit_more support")
    Signed-off-by: Simon Guinot <simon.guinot@sequanux.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/net/ethernet/marvell/mvneta.c b/drivers/net/ethernet/marvell/mvneta.c
index 64a04975bcf8..bc93b69cfd1e 100644
--- a/drivers/net/ethernet/marvell/mvneta.c
+++ b/drivers/net/ethernet/marvell/mvneta.c
@@ -816,11 +816,14 @@ static void mvneta_txq_pend_desc_add(struct mvneta_port *pp,
 {
 	u32 val;
 
-	/* Only 255 descriptors can be added at once ; Assume caller
-	 * process TX desriptors in quanta less than 256
-	 */
-	val = pend_desc + txq->pending;
-	mvreg_write(pp, MVNETA_TXQ_UPDATE_REG(txq->id), val);
+	pend_desc += txq->pending;
+
+	/* Only 255 Tx descriptors can be added at once */
+	do {
+		val = min(pend_desc, 255);
+		mvreg_write(pp, MVNETA_TXQ_UPDATE_REG(txq->id), val);
+		pend_desc -= val;
+	} while (pend_desc > 0);
 	txq->pending = 0;
 }
 
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1025_a59e386c4f4fce346161c0a62a5e1fbc1f435d6f.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1025_a59e386c4f4fce346161c0a62a5e1fbc1f435d6f.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
