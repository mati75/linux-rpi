commit ba008489371d05f5566ac31e140ed07fbb4f5fbb
Author: Eran Ben Elisha <eranbe@mellanox.com>
Date:   Wed Aug 16 14:37:11 2017 +0300

    net/mlx5e: Fix dangling page pointer on DMA mapping error
    
    
    [ Upstream commit 0556ce72ab16156af6c94cdc7964e4310acc97c0 ]
    
    Function mlx5e_dealloc_rx_wqe is using page pointer value as an
    indication to valid DMA mapping. In case that the mapping failed, we
    released the page but kept the dangling pointer. Store the page pointer
    only after the DMA mapping passed to avoid invalid page DMA unmap.
    
    Fixes: bc77b240b3c5 ("net/mlx5e: Add fragmented memory support for RX multi packet WQE")
    Signed-off-by: Eran Ben Elisha <eranbe@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_rx.c b/drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
index 66b5fec15313..f70029d5eea1 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
@@ -216,13 +216,13 @@ static inline int mlx5e_page_alloc_mapped(struct mlx5e_rq *rq,
 	if (unlikely(!page))
 		return -ENOMEM;
 
-	dma_info->page = page;
 	dma_info->addr = dma_map_page(rq->pdev, page, 0,
 				      RQ_PAGE_SIZE(rq), rq->buff.map_dir);
 	if (unlikely(dma_mapping_error(rq->pdev, dma_info->addr))) {
 		put_page(page);
 		return -ENOMEM;
 	}
+	dma_info->page = page;
 
 	return 0;
 }
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1025_ba008489371d05f5566ac31e140ed07fbb4f5fbb.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1025_ba008489371d05f5566ac31e140ed07fbb4f5fbb.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
