commit 3ca59bf1fb7c4af12321ccbc80c735312be18506
Author: Boris Brezillon <bbrezillon@kernel.org>
Date:   Wed Jan 30 12:55:52 2019 +0100

    mtd: Make sure mtd->erasesize is valid even if the partition is of size 0
    
    commit ad4635153034c20c6f6e211e2ed3fd38b658649a upstream.
    
    Commit 33f45c44d68b ("mtd: Do not allow MTD devices with inconsistent
    erase properties") introduced a check to make sure ->erasesize and
    ->_erase values are consistent with the MTD_NO_ERASE flag.
    This patch did not take the 0 bytes partition case into account which
    can happen when the defined partition is outside the flash device memory
    range. Fix that by setting the partition erasesize to the parent
    erasesize.
    
    Fixes: 33f45c44d68b ("mtd: Do not allow MTD devices with inconsistent erase properties")
    Reported-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: <stable@vger.kernel.org>
    Cc: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Boris Brezillon <bbrezillon@kernel.org>
    Tested-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/mtd/mtdpart.c b/drivers/mtd/mtdpart.c
index 99c460facd5e..0bbb23b014f1 100644
--- a/drivers/mtd/mtdpart.c
+++ b/drivers/mtd/mtdpart.c
@@ -470,6 +470,10 @@ static struct mtd_part *allocate_partition(struct mtd_info *parent,
 		/* let's register it anyway to preserve ordering */
 		slave->offset = 0;
 		slave->mtd.size = 0;
+
+		/* Initialize ->erasesize to make add_mtd_device() happy. */
+		slave->mtd.erasesize = parent->erasesize;
+
 		printk(KERN_ERR"mtd: partition \"%s\" is out of reach -- disabled\n",
 			part->name);
 		goto out_register;
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1308_3ca59bf1fb7c4af12321ccbc80c735312be18506.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1308_3ca59bf1fb7c4af12321ccbc80c735312be18506.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
