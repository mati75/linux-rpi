commit 3a59b35c3cb88e3fa1f050c34bea2f3f849851b4
Author: Julien Thierry <julien.thierry@arm.com>
Date:   Wed Feb 13 16:32:08 2019 -0500

    ARM: 8790/1: signal: always use __copy_to_user to save iwmmxt context
    
    Commit 73839798af7ebc6c8d0c9271ebbbc148700e521f upstream.
    
    When setting a dummy iwmmxt context, create a local instance and
    use __copy_to_user both cases whether iwmmxt is being used or not.
    This has the benefit of disabling/enabling PAN once for the whole copy
    intead of once per write.
    
    Signed-off-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

diff --git a/arch/arm/kernel/signal.c b/arch/arm/kernel/signal.c
index 76fe75d36312..464393d241e1 100644
--- a/arch/arm/kernel/signal.c
+++ b/arch/arm/kernel/signal.c
@@ -77,8 +77,6 @@ static int preserve_iwmmxt_context(struct iwmmxt_sigframe __user *frame)
 		kframe->magic = IWMMXT_MAGIC;
 		kframe->size = IWMMXT_STORAGE_SIZE;
 		iwmmxt_task_copy(current_thread_info(), &kframe->storage);
-
-		err = __copy_to_user(frame, kframe, sizeof(*frame));
 	} else {
 		/*
 		 * For bug-compatibility with older kernels, some space
@@ -86,10 +84,14 @@ static int preserve_iwmmxt_context(struct iwmmxt_sigframe __user *frame)
 		 * Set the magic and size appropriately so that properly
 		 * written userspace can skip it reliably:
 		 */
-		__put_user_error(DUMMY_MAGIC, &frame->magic, err);
-		__put_user_error(IWMMXT_STORAGE_SIZE, &frame->size, err);
+		*kframe = (struct iwmmxt_sigframe) {
+			.magic = DUMMY_MAGIC,
+			.size  = IWMMXT_STORAGE_SIZE,
+		};
 	}
 
+	err = __copy_to_user(frame, kframe, sizeof(*kframe));
+
 	return err;
 }
 
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1359_3a59b35c3cb88e3fa1f050c34bea2f3f849851b4.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1359_3a59b35c3cb88e3fa1f050c34bea2f3f849851b4.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
