commit 9e1f977d82eca514e71826bdb9cb34da2e687f0d
Author: Jerry Snitselaar <jsnitsel@redhat.com>
Date:   Sat Jan 19 10:38:05 2019 -0700

    iommu/amd: Unmap all mapped pages in error path of map_sg
    
    [ Upstream commit f1724c0883bb0ce93b8dcb94b53dcca3b75ac9a7 ]
    
    In the error path of map_sg there is an incorrect if condition
    for breaking out of the loop that searches the scatterlist
    for mapped pages to unmap. Instead of breaking out of the
    loop once all the pages that were mapped have been unmapped,
    it will break out of the loop after it has unmapped 1 page.
    Fix the condition, so it breaks out of the loop only after
    all the mapped pages have been unmapped.
    
    Fixes: 80187fd39dcb ("iommu/amd: Optimize map_sg and unmap_sg")
    Cc: Joerg Roedel <joro@8bytes.org>
    Signed-off-by: Jerry Snitselaar <jsnitsel@redhat.com>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

diff --git a/drivers/iommu/amd_iommu.c b/drivers/iommu/amd_iommu.c
index 2a5c05ca7fca..2ab87e3f07e6 100644
--- a/drivers/iommu/amd_iommu.c
+++ b/drivers/iommu/amd_iommu.c
@@ -2555,7 +2555,7 @@ static int map_sg(struct device *dev, struct scatterlist *sglist,
 			bus_addr  = address + s->dma_address + (j << PAGE_SHIFT);
 			iommu_unmap_page(domain, bus_addr, PAGE_SIZE);
 
-			if (--mapped_pages)
+			if (--mapped_pages == 0)
 				goto out_free_iova;
 		}
 	}
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1008_9e1f977d82eca514e71826bdb9cb34da2e687f0d.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1008_9e1f977d82eca514e71826bdb9cb34da2e687f0d.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
