commit b34ba9e024085b15ec7d7726e7180466dcf843de
Author: Michael J. Ruhl <michael.j.ruhl@intel.com>
Date:   Thu Sep 20 12:59:05 2018 -0700

    IB/hfi1: Fix context recovery when PBC has an UnsupportedVL
    
    commit d623500b3c4efd8d4e945ac9003c6b87b469a9ab upstream.
    
    If a packet stream uses an UnsupportedVL (virtual lane), the send
    engine will not send the packet, and it will not indicate that an
    error has occurred.  This will cause the packet stream to block.
    
    HFI has 8 virtual lanes available for packet streams.  Each lane can
    be enabled or disabled using the UnsupportedVL mask.  If a lane is
    disabled, adding a packet to the send context must be disallowed.
    
    The current mask for determining unsupported VLs defaults to 0 (allow
    all).  This is incorrect.  Only the VLs that are defined should be
    allowed.
    
    Determine which VLs are disabled (mtu == 0), and set the appropriate
    unsupported bit in the mask.  The correct mask will allow the send
    engine to error on the invalid VL, and error recovery will work
    correctly.
    
    Cc: <stable@vger.kernel.org> # 4.9.x+
    Fixes: 7724105686e7 ("IB/hfi1: add driver files")
    Reviewed-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Reviewed-by: Lukasz Odzioba <lukasz.odzioba@intel.com>
    Signed-off-by: Michael J. Ruhl <michael.j.ruhl@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/infiniband/hw/hfi1/pio.c b/drivers/infiniband/hw/hfi1/pio.c
index 9cac15d10c4f..f61381ef78a5 100644
--- a/drivers/infiniband/hw/hfi1/pio.c
+++ b/drivers/infiniband/hw/hfi1/pio.c
@@ -86,6 +86,7 @@ void pio_send_control(struct hfi1_devdata *dd, int op)
 	unsigned long flags;
 	int write = 1;	/* write sendctrl back */
 	int flush = 0;	/* re-read sendctrl to make sure it is flushed */
+	int i;
 
 	spin_lock_irqsave(&dd->sendctrl_lock, flags);
 
@@ -95,9 +96,13 @@ void pio_send_control(struct hfi1_devdata *dd, int op)
 		reg |= SEND_CTRL_SEND_ENABLE_SMASK;
 	/* Fall through */
 	case PSC_DATA_VL_ENABLE:
+		mask = 0;
+		for (i = 0; i < ARRAY_SIZE(dd->vld); i++)
+			if (!dd->vld[i].mtu)
+				mask |= BIT_ULL(i);
 		/* Disallow sending on VLs not enabled */
-		mask = (((~0ull) << num_vls) & SEND_CTRL_UNSUPPORTED_VL_MASK) <<
-				SEND_CTRL_UNSUPPORTED_VL_SHIFT;
+		mask = (mask & SEND_CTRL_UNSUPPORTED_VL_MASK) <<
+			SEND_CTRL_UNSUPPORTED_VL_SHIFT;
 		reg = (reg & ~SEND_CTRL_UNSUPPORTED_VL_SMASK) | mask;
 		break;
 	case PSC_GLOBAL_DISABLE:
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1252_b34ba9e024085b15ec7d7726e7180466dcf843de.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1252_b34ba9e024085b15ec7d7726e7180466dcf843de.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
