commit 10db0e22fb8c50db736e5294af33fae43e950fe6
Author: Hugo Lefeuvre <hle@owl.eu.com>
Date:   Wed Jun 13 21:04:38 2018 -0400

    staging: pi433: fix race condition in pi433_ioctl
    
    [ Upstream commit 6de4ef65a8c6f53ce7eef06666410bc3b6e4b624 ]
    
    In the PI433_IOC_WR_TX_CFG case in pi433_ioctl, instance->tx_cfg is
    modified via
    
    copy_from_user(&instance->tx_cfg, argp, sizeof(struct pi433_tx_cfg)))
    
    without any kind of synchronization. In the case where two threads
    would execute this same command concurrently the tx_cfg field might
    enter in an inconsistent state.
    
    Additionally: if ioctl(PI433_IOC_WR_TX_CFG) and write() execute
    concurrently the tx config might be modified while it is being
    copied to the fifo, resulting in potential data corruption.
    
    Fix: Get instance->tx_cfg_lock before modifying tx config in the
    PI433_IOC_WR_TX_CFG case in pi433_ioctl.
    
    Also, do not copy data directly from user space to instance->tx_cfg.
    Instead use a temporary buffer allowing future checks for correctness
    of copied data and simpler code.
    
    Signed-off-by: Hugo Lefeuvre <hle@owl.eu.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/pi433/pi433_if.c b/drivers/staging/pi433/pi433_if.c
index b061f77dda41..94e0bfcec991 100644
--- a/drivers/staging/pi433/pi433_if.c
+++ b/drivers/staging/pi433/pi433_if.c
@@ -880,6 +880,7 @@ pi433_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)
 	int			retval = 0;
 	struct pi433_instance	*instance;
 	struct pi433_device	*device;
+	struct pi433_tx_cfg	tx_cfg;
 	void __user *argp = (void __user *)arg;
 
 	/* Check type and command number */
@@ -902,9 +903,11 @@ pi433_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)
 			return -EFAULT;
 		break;
 	case PI433_IOC_WR_TX_CFG:
-		if (copy_from_user(&instance->tx_cfg, argp,
-				   sizeof(struct pi433_tx_cfg)))
+		if (copy_from_user(&tx_cfg, argp, sizeof(struct pi433_tx_cfg)))
 			return -EFAULT;
+		mutex_lock(&device->tx_fifo_lock);
+		memcpy(&instance->tx_cfg, &tx_cfg, sizeof(struct pi433_tx_cfg));
+		mutex_unlock(&device->tx_fifo_lock);
 		break;
 	case PI433_IOC_RD_RX_CFG:
 		if (copy_to_user(argp, &device->rx_cfg,
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1208_10db0e22fb8c50db736e5294af33fae43e950fe6.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1208_10db0e22fb8c50db736e5294af33fae43e950fe6.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
