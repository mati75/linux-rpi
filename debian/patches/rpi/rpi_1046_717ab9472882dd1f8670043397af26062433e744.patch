commit 717ab9472882dd1f8670043397af26062433e744
Author: Howard Mitchell <hm@hmbedded.co.uk>
Date:   Wed Jul 30 21:43:37 2014 +0100

    soc-core: Fix volsw_range funcs so SOC_DOUBLE_R_RANGE_TLV works.
    
    This is so that the correct range of values as specified
    with the SOC_DOUBLE_R_RANGE_TLV macro are sent to the
    hardware for both the normal and invert cases.

diff --git a/sound/soc/soc-core.c b/sound/soc/soc-core.c
index 49acc98..ad05b2b 100644
--- a/sound/soc/soc-core.c
+++ b/sound/soc/soc-core.c
@@ -2973,8 +2973,8 @@ int snd_soc_info_volsw_range(struct snd_kcontrol *kcontrol,
 
 	uinfo->type = SNDRV_CTL_ELEM_TYPE_INTEGER;
 	uinfo->count = snd_soc_volsw_is_stereo(mc) ? 2 : 1;
-	uinfo->value.integer.min = 0;
-	uinfo->value.integer.max = platform_max - min;
+	uinfo->value.integer.min = min;
+	uinfo->value.integer.max = platform_max;
 
 	return 0;
 }
@@ -3005,9 +3005,10 @@ int snd_soc_put_volsw_range(struct snd_kcontrol *kcontrol,
 	unsigned int val, val_mask;
 	int ret;
 
-	val = ((ucontrol->value.integer.value[0] + min) & mask);
 	if (invert)
-		val = max - val;
+		val = ((max - ucontrol->value.integer.value[0] + min) & mask);
+	else
+		val = (ucontrol->value.integer.value[0] & mask);
 	val_mask = mask << shift;
 	val = val << shift;
 
@@ -3016,9 +3017,10 @@ int snd_soc_put_volsw_range(struct snd_kcontrol *kcontrol,
 		return ret;
 
 	if (snd_soc_volsw_is_stereo(mc)) {
-		val = ((ucontrol->value.integer.value[1] + min) & mask);
 		if (invert)
-			val = max - val;
+			val = ((max - ucontrol->value.integer.value[1] + min) & mask);
+		else
+			val = (ucontrol->value.integer.value[1] & mask);
 		val_mask = mask << shift;
 		val = val << shift;
 
@@ -3062,9 +3064,7 @@ int snd_soc_get_volsw_range(struct snd_kcontrol *kcontrol,
 	ucontrol->value.integer.value[0] = (val >> shift) & mask;
 	if (invert)
 		ucontrol->value.integer.value[0] =
-			max - ucontrol->value.integer.value[0];
-	ucontrol->value.integer.value[0] =
-		ucontrol->value.integer.value[0] - min;
+			max - ucontrol->value.integer.value[0] + min;
 
 	if (snd_soc_volsw_is_stereo(mc)) {
 		ret = snd_soc_component_read(component, rreg, &val);
@@ -3074,9 +3074,7 @@ int snd_soc_get_volsw_range(struct snd_kcontrol *kcontrol,
 		ucontrol->value.integer.value[1] = (val >> shift) & mask;
 		if (invert)
 			ucontrol->value.integer.value[1] =
-				max - ucontrol->value.integer.value[1];
-		ucontrol->value.integer.value[1] =
-			ucontrol->value.integer.value[1] - min;
+				max - ucontrol->value.integer.value[1] + min;
 	}
 
 	return 0;
