commit bbc83e8d08cbbbd083f4c5cb192d60d64b0bd0ba
Author: Yuchung Cheng <ycheng@google.com>
Date:   Wed Dec 5 14:38:38 2018 -0800

    tcp: fix NULL ref in tail loss probe
    
    [ Upstream commit b2b7af861122a0c0f6260155c29a1b2e594cd5b5 ]
    
    TCP loss probe timer may fire when the retranmission queue is empty but
    has a non-zero tp->packets_out counter. tcp_send_loss_probe will call
    tcp_rearm_rto which triggers NULL pointer reference by fetching the
    retranmission queue head in its sub-routines.
    
    Add a more detailed warning to help catch the root cause of the inflight
    accounting inconsistency.
    
    Reported-by: Rafael Tinoco <rafael.tinoco@linaro.org>
    Signed-off-by: Yuchung Cheng <ycheng@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Neal Cardwell <ncardwell@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/net/ipv4/tcp_output.c b/net/ipv4/tcp_output.c
index 97e8aea4ac71..65632f827eea 100644
--- a/net/ipv4/tcp_output.c
+++ b/net/ipv4/tcp_output.c
@@ -2479,15 +2479,18 @@ void tcp_send_loss_probe(struct sock *sk)
 		goto rearm_timer;
 	}
 	skb = skb_rb_last(&sk->tcp_rtx_queue);
+	if (unlikely(!skb)) {
+		WARN_ONCE(tp->packets_out,
+			  "invalid inflight: %u state %u cwnd %u mss %d\n",
+			  tp->packets_out, sk->sk_state, tp->snd_cwnd, mss);
+		inet_csk(sk)->icsk_pending = 0;
+		return;
+	}
 
 	/* At most one outstanding TLP retransmission. */
 	if (tp->tlp_high_seq)
 		goto rearm_timer;
 
-	/* Retransmit last segment. */
-	if (WARN_ON(!skb))
-		goto rearm_timer;
-
 	if (skb_still_in_host_queue(sk, skb))
 		goto rearm_timer;
 
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1014_bbc83e8d08cbbbd083f4c5cb192d60d64b0bd0ba.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1014_bbc83e8d08cbbbd083f4c5cb192d60d64b0bd0ba.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
