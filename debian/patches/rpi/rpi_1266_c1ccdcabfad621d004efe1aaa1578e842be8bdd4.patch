commit c1ccdcabfad621d004efe1aaa1578e842be8bdd4
Author: Karl Palsson <karlp@tweak.net.au>
Date:   Tue Mar 18 23:33:27 2014 +0000

    usb/serial/ch341: Add parity support
    
    Based on wireshark packet traces from a windows machine.
    
    ch340 and ch341 both seem to support all parity modes, but only the ch341
    appears to support variable data bits and variable stop bits, so those are left
    unimplemented, as before.
    
    Tested on a generic usb-rs485 dongle with the chip label scratched off, and
    some Modbus/RTU devices that required various parity settings.
    
    Signed-off-by: Karl Palsson <karlp@tweak.net.au>

diff --git a/drivers/usb/serial/ch341.c b/drivers/usb/serial/ch341.c
index e98590aab633..4f25aba5bdfc 100644
--- a/drivers/usb/serial/ch341.c
+++ b/drivers/usb/serial/ch341.c
@@ -358,6 +358,7 @@ static void ch341_set_termios(struct tty_struct *tty,
 	struct ch341_private *priv = usb_get_serial_port_data(port);
 	unsigned baud_rate;
 	unsigned long flags;
+	unsigned int par_flags;
 
 	baud_rate = tty_get_baud_rate(tty);
 
@@ -368,10 +369,34 @@ static void ch341_set_termios(struct tty_struct *tty,
 
 	/* Unimplemented:
 	 * (cflag & CSIZE) : data bits [5, 8]
-	 * (cflag & PARENB) : parity {NONE, EVEN, ODD}
 	 * (cflag & CSTOPB) : stop bits [1, 2]
 	 */
 
+	/* CH340 doesn't appear to support variable stop bits or data bits */
+	if (C_PARENB(tty)) {
+		if (C_PARODD(tty)) {
+			if (tty->termios.c_cflag & CMSPAR) {
+				dev_dbg(&port->dev, "parity = mark\n");
+				par_flags = 0xeb;
+			} else {
+				dev_dbg(&port->dev, "parity = odd\n");
+				par_flags = 0xcb;
+			}
+		} else {
+			if (tty->termios.c_cflag & CMSPAR) {
+				dev_dbg(&port->dev, "parity = space\n");
+				par_flags = 0xfb;
+			} else {
+				dev_dbg(&port->dev, "parity = even\n");
+				par_flags = 0xdb;
+			}
+		}
+	} else {
+		dev_dbg(&port->dev, "parity = none\n");
+		par_flags = 0xc3;
+	}
+	ch341_control_out(port->serial->dev, 0x9a, 0x2518, par_flags);
+
 	spin_lock_irqsave(&priv->lock, flags);
 	if (C_BAUD(tty) == B0)
 		priv->line_control &= ~(CH341_BIT_DTR | CH341_BIT_RTS);
