commit 8e0451c78a2b2bdea8b765ee7d819fbc63d8ec5a
Author: Matthias Reichl <hias@horus.com>
Date:   Wed Jun 13 01:37:02 2018 +0200

    ASoC: justboom-digi: change codec to component
    
    Signed-off-by: Matthias Reichl <hias@horus.com>

diff --git a/sound/soc/bcm/justboom-digi.c b/sound/soc/bcm/justboom-digi.c
index 909cf8928f2f..88711e5f9194 100644
--- a/sound/soc/bcm/justboom-digi.c
+++ b/sound/soc/bcm/justboom-digi.c
@@ -29,10 +29,10 @@
 
 static int snd_rpi_justboom_digi_init(struct snd_soc_pcm_runtime *rtd)
 {
-	struct snd_soc_codec *codec = rtd->codec;
+	struct snd_soc_component *component = rtd->codec_dai->component;
 
 	/* enable TX output */
-	snd_soc_update_bits(codec, WM8804_PWRDN, 0x4, 0x0);
+	snd_soc_component_update_bits(component, WM8804_PWRDN, 0x4, 0x0);
 
 	return 0;
 }
@@ -40,16 +40,16 @@ static int snd_rpi_justboom_digi_init(struct snd_soc_pcm_runtime *rtd)
 static int snd_rpi_justboom_digi_startup(struct snd_pcm_substream *substream) {
 	/* turn on digital output */
 	struct snd_soc_pcm_runtime *rtd = substream->private_data;
-	struct snd_soc_codec *codec = rtd->codec;
-	snd_soc_update_bits(codec, WM8804_PWRDN, 0x3c, 0x00);
+	struct snd_soc_component *component = rtd->codec_dai->component;
+	snd_soc_component_update_bits(component, WM8804_PWRDN, 0x3c, 0x00);
 	return 0;
 }
 
 static void snd_rpi_justboom_digi_shutdown(struct snd_pcm_substream *substream) {
 	/* turn off output */
 	struct snd_soc_pcm_runtime *rtd = substream->private_data;
-	struct snd_soc_codec *codec = rtd->codec;
-	snd_soc_update_bits(codec, WM8804_PWRDN, 0x3c, 0x3c);
+	struct snd_soc_component *component = rtd->codec_dai->component;
+	snd_soc_component_update_bits(component, WM8804_PWRDN, 0x3c, 0x3c);
 }
 
 static int snd_rpi_justboom_digi_hw_params(struct snd_pcm_substream *substream,
@@ -57,7 +57,7 @@ static int snd_rpi_justboom_digi_hw_params(struct snd_pcm_substream *substream,
 {
 	struct snd_soc_pcm_runtime *rtd = substream->private_data;
 	struct snd_soc_dai *codec_dai = rtd->codec_dai;
-	struct snd_soc_codec *codec = rtd->codec;
+	struct snd_soc_component *component = rtd->codec_dai->component;
 	struct snd_soc_dai *cpu_dai = rtd->cpu_dai;
 
 	int sysclk = 27000000; /* This is fixed on this board */
@@ -101,7 +101,7 @@ static int snd_rpi_justboom_digi_hw_params(struct snd_pcm_substream *substream,
 			sampling_freq=0x0e;
 			break;
 		default:
-			dev_err(codec->dev,
+			dev_err(rtd->card->dev,
 			"Failed to set WM8804 SYSCLK, unsupported samplerate %d\n",
 			samplerate);
 	}
@@ -112,19 +112,19 @@ static int snd_rpi_justboom_digi_hw_params(struct snd_pcm_substream *substream,
 	ret = snd_soc_dai_set_sysclk(codec_dai, WM8804_TX_CLKSRC_PLL,
 					sysclk, SND_SOC_CLOCK_OUT);
 	if (ret < 0) {
-		dev_err(codec->dev,
+		dev_err(rtd->card->dev,
 		"Failed to set WM8804 SYSCLK: %d\n", ret);
 		return ret;
 	}
 
 	/* Enable TX output */
-	snd_soc_update_bits(codec, WM8804_PWRDN, 0x4, 0x0);
+	snd_soc_component_update_bits(component, WM8804_PWRDN, 0x4, 0x0);
 
 	/* Power on */
-	snd_soc_update_bits(codec, WM8804_PWRDN, 0x9, 0);
+	snd_soc_component_update_bits(component, WM8804_PWRDN, 0x9, 0);
 
 	/* set sampling frequency status bits */
-	snd_soc_update_bits(codec, WM8804_SPDTX4, 0x0f, sampling_freq);
+	snd_soc_component_update_bits(component, WM8804_SPDTX4, 0x0f, sampling_freq);
 
 	return snd_soc_dai_set_bclk_ratio(cpu_dai,64);
 }
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1161_8e0451c78a2b2bdea8b765ee7d819fbc63d8ec5a.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1161_8e0451c78a2b2bdea8b765ee7d819fbc63d8ec5a.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
