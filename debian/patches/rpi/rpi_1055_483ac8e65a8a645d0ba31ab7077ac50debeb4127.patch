commit 483ac8e65a8a645d0ba31ab7077ac50debeb4127
Author: Kees Cook <keescook@chromium.org>
Date:   Sun Jan 20 14:33:34 2019 -0800

    pstore/ram: Avoid allocation and leak of platform data
    
    commit 5631e8576a3caf606cdc375f97425a67983b420c upstream.
    
    Yue Hu noticed that when parsing device tree the allocated platform data
    was never freed. Since it's not used beyond the function scope, this
    switches to using a stack variable instead.
    
    Reported-by: Yue Hu <huyue2@yulong.com>
    Fixes: 35da60941e44 ("pstore/ram: add Device Tree bindings")
    Cc: stable@vger.kernel.org
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/fs/pstore/ram.c b/fs/pstore/ram.c
index 03cd59375abe..eb67bb7f04de 100644
--- a/fs/pstore/ram.c
+++ b/fs/pstore/ram.c
@@ -713,18 +713,15 @@ static int ramoops_probe(struct platform_device *pdev)
 {
 	struct device *dev = &pdev->dev;
 	struct ramoops_platform_data *pdata = dev->platform_data;
+	struct ramoops_platform_data pdata_local;
 	struct ramoops_context *cxt = &oops_cxt;
 	size_t dump_mem_sz;
 	phys_addr_t paddr;
 	int err = -EINVAL;
 
 	if (dev_of_node(dev) && !pdata) {
-		pdata = devm_kzalloc(&pdev->dev, sizeof(*pdata), GFP_KERNEL);
-		if (!pdata) {
-			pr_err("cannot allocate platform data buffer\n");
-			err = -ENOMEM;
-			goto fail_out;
-		}
+		pdata = &pdata_local;
+		memset(pdata, 0, sizeof(*pdata));
 
 		err = ramoops_parse_dt(pdev, pdata);
 		if (err < 0)
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1055_483ac8e65a8a645d0ba31ab7077ac50debeb4127.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1055_483ac8e65a8a645d0ba31ab7077ac50debeb4127.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
