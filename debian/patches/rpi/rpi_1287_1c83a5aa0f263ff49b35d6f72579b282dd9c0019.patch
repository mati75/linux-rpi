commit 1c83a5aa0f263ff49b35d6f72579b282dd9c0019
Author: Jacob Keller <jacob.e.keller@intel.com>
Date:   Thu Aug 9 06:28:57 2018 -0700

    ice: Use order_base_2 to calculate higher power of 2
    
    [ Upstream commit 1eb43fc754485d772b1165118a8fb80c385f0492 ]
    
    Currently, we use a combination of ilog2 and is_power_of_2() to
    calculate the next power of 2 for the qcount. This appears to be causing
    a warning on some combinations of GCC and the Linux kernel:
    
    MODPOST 1 modules
    WARNING: "____ilog2_NaN" [ice.ko] undefined!
    
    This appears to because because GCC realizes that qcount could be zero
    in some circumstances and thus attempts to link against the
    intentionally undefined ___ilog2_NaN function.
    
    The order_base_2 function is intentionally defined to return 0 when
    passed 0 as an argument, and thus will be safe to use here.
    
    This not only fixes the warning but makes the resulting code slightly
    cleaner, and is really what we should have used originally.
    
    Also update the comment to make it more clear that we are rounding up,
    not just incrementing the ilog2 of qcount unconditionally.
    
    Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
    Signed-off-by: Anirudh Venkataramanan <anirudh.venkataramanan@intel.com>
    Tested-by: Tony Brelinski <tonyx.brelinski@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/net/ethernet/intel/ice/ice_main.c b/drivers/net/ethernet/intel/ice/ice_main.c
index 46b35b78e8aa..db580d41dbf9 100644
--- a/drivers/net/ethernet/intel/ice/ice_main.c
+++ b/drivers/net/ethernet/intel/ice/ice_main.c
@@ -1313,11 +1313,8 @@ static void ice_vsi_setup_q_map(struct ice_vsi *vsi, struct ice_vsi_ctx *ctxt)
 		qcount = numq_tc;
 	}
 
-	/* find higher power-of-2 of qcount */
-	pow = ilog2(qcount);
-
-	if (!is_power_of_2(qcount))
-		pow++;
+	/* find the (rounded up) power-of-2 of qcount */
+	pow = order_base_2(qcount);
 
 	for (i = 0; i < ICE_MAX_TRAFFIC_CLASS; i++) {
 		if (!(vsi->tc_cfg.ena_tc & BIT(i))) {
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1287_1c83a5aa0f263ff49b35d6f72579b282dd9c0019.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1287_1c83a5aa0f263ff49b35d6f72579b282dd9c0019.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
