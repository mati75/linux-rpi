commit 8fe8940ffcf6984dcf69e5c869aaf244f6d1742b
Author: Florian Westphal <fw@strlen.de>
Date:   Wed Oct 31 18:26:20 2018 +0100

    netfilter: nf_tables: don't skip inactive chains during update
    
    [ Upstream commit 0fb39bbe43d4481fcf300d2b5822de60942fd189 ]
    
    There is no synchronization between packet path and the configuration plane.
    
    The packet path uses two arrays with rules, one contains the current (active)
    generation.  The other either contains the last (obsolete) generation or
    the future one.
    
    Consider:
    cpu1               cpu2
                       nft_do_chain(c);
    delete c
    net->gen++;
                       genbit = !!net->gen;
                       rules = c->rg[genbit];
    
    cpu1 ignores c when updating if c is not active anymore in the new
    generation.
    
    On cpu2, we now use rules from wrong generation, as c->rg[old]
    contains the rules matching 'c' whereas c->rg[new] was not updated and
    can even point to rules that have been free'd already, causing a crash.
    
    To fix this, make sure that 'current' to the 'next' generation are
    identical for chains that are going away so that c->rg[new] will just
    use the matching rules even if genbit was incremented already.
    
    Fixes: 0cbc06b3faba7 ("netfilter: nf_tables: remove synchronize_rcu in commit phase")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

diff --git a/net/netfilter/nf_tables_api.c b/net/netfilter/nf_tables_api.c
index 2cfb173cd0b2..4c016b49fe2b 100644
--- a/net/netfilter/nf_tables_api.c
+++ b/net/netfilter/nf_tables_api.c
@@ -6277,7 +6277,7 @@ static void nf_tables_commit_chain_free_rules_old(struct nft_rule **rules)
 	call_rcu(&old->h, __nf_tables_commit_chain_free_rules_old);
 }
 
-static void nf_tables_commit_chain_active(struct net *net, struct nft_chain *chain)
+static void nf_tables_commit_chain(struct net *net, struct nft_chain *chain)
 {
 	struct nft_rule **g0, **g1;
 	bool next_genbit;
@@ -6363,11 +6363,8 @@ static int nf_tables_commit(struct net *net, struct sk_buff *skb)
 
 	/* step 2.  Make rules_gen_X visible to packet path */
 	list_for_each_entry(table, &net->nft.tables, list) {
-		list_for_each_entry(chain, &table->chains, list) {
-			if (!nft_is_active_next(net, chain))
-				continue;
-			nf_tables_commit_chain_active(net, chain);
-		}
+		list_for_each_entry(chain, &table->chains, list)
+			nf_tables_commit_chain(net, chain);
 	}
 
 	/*
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1038_8fe8940ffcf6984dcf69e5c869aaf244f6d1742b.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1038_8fe8940ffcf6984dcf69e5c869aaf244f6d1742b.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
