commit 1d3d9d4c7666bda49eb278f4b7871587eea87685
Author: Noralf Trønnes <noralf@tronnes.org>
Date:   Thu Sep 22 22:05:50 2016 +0200

    i2c: bcm2835: Can't support I2C_M_IGNORE_NAK
    
    The controller can't support this flag, so remove it.
    
    Documentation/i2c/i2c-protocol states that all of the message is sent:
    
    I2C_M_IGNORE_NAK:
        Normally message is interrupted immediately if there is [NA] from the
        client. Setting this flag treats any [NA] as [A], and all of
        message is sent.
    
    From the BCM2835 ARM Peripherals datasheet:
    
        The ERR field is set when the slave fails to acknowledge either
        its address or a data byte written to it.
    
    So when the controller doesn't receive an ack, it sets ERR and raises
    an interrupt. In other words, the whole message is not sent.
    
    Signed-off-by: Noralf Trønnes <noralf@tronnes.org>
    Reviewed-by: Eric Anholt <eric@anholt.net>

diff --git a/drivers/i2c/busses/i2c-bcm2835.c b/drivers/i2c/busses/i2c-bcm2835.c
index 54d510abd46a..565ef69ce614 100644
--- a/drivers/i2c/busses/i2c-bcm2835.c
+++ b/drivers/i2c/busses/i2c-bcm2835.c
@@ -212,10 +212,6 @@ static int bcm2835_i2c_xfer_msg(struct bcm2835_i2c_dev *i2c_dev,
 	if (likely(!i2c_dev->msg_err))
 		return 0;
 
-	if ((i2c_dev->msg_err & BCM2835_I2C_S_ERR) &&
-	    (msg->flags & I2C_M_IGNORE_NAK))
-		return 0;
-
 	dev_dbg(i2c_dev->dev, "i2c transfer failed: %x\n", i2c_dev->msg_err);
 
 	if (i2c_dev->msg_err & BCM2835_I2C_S_ERR)
