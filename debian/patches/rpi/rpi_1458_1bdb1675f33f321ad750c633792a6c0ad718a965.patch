commit 1bdb1675f33f321ad750c633792a6c0ad718a965
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Feb 15 13:36:21 2019 -0800

    tcp: tcp_v4_err() should be more careful
    
    [ Upstream commit 2c4cc9712364c051b1de2d175d5fbea6be948ebf ]
    
    ICMP handlers are not very often stressed, we should
    make them more resilient to bugs that might surface in
    the future.
    
    If there is no packet in retransmit queue, we should
    avoid a NULL deref.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: soukjin bae <soukjin.bae@samsung.com>
    Acked-by: Neal Cardwell <ncardwell@google.com>
    Acked-by: Soheil Hassas Yeganeh <soheil@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/net/ipv4/tcp_ipv4.c b/net/ipv4/tcp_ipv4.c
index cd426313a298..3b83b157b0a1 100644
--- a/net/ipv4/tcp_ipv4.c
+++ b/net/ipv4/tcp_ipv4.c
@@ -535,14 +535,15 @@ void tcp_v4_err(struct sk_buff *icmp_skb, u32 info)
 		if (sock_owned_by_user(sk))
 			break;
 
+		skb = tcp_rtx_queue_head(sk);
+		if (WARN_ON_ONCE(!skb))
+			break;
+
 		icsk->icsk_backoff--;
 		icsk->icsk_rto = tp->srtt_us ? __tcp_set_rto(tp) :
 					       TCP_TIMEOUT_INIT;
 		icsk->icsk_rto = inet_csk_rto_backoff(icsk, TCP_RTO_MAX);
 
-		skb = tcp_rtx_queue_head(sk);
-		BUG_ON(!skb);
-
 		tcp_mstamp_refresh(tp);
 		delta_us = (u32)(tp->tcp_mstamp - skb->skb_mstamp);
 		remaining = icsk->icsk_rto -
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1458_1bdb1675f33f321ad750c633792a6c0ad718a965.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1458_1bdb1675f33f321ad750c633792a6c0ad718a965.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
