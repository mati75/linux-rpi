commit 6cbaed5c50ac046fdad63fef1463201750407e44
Author: Akinobu Mita <akinobu.mita@gmail.com>
Date:   Sun May 6 10:19:18 2018 -0400

    media: ov772x: allow i2c controllers without I2C_FUNC_PROTOCOL_MANGLING
    
    [ Upstream commit 0b964d183cbf3f95a062ad9f3eec87ffa2790558 ]
    
    The ov772x driver only works when the i2c controller have
    I2C_FUNC_PROTOCOL_MANGLING.  However, many i2c controller drivers don't
    support it.
    
    The reason that the ov772x requires I2C_FUNC_PROTOCOL_MANGLING is that
    it doesn't support repeated starts.
    
    This changes the reading ov772x register method so that it doesn't
    require I2C_FUNC_PROTOCOL_MANGLING by calling two separated i2c messages.
    
    Cc: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Cc: Hans Verkuil <hans.verkuil@cisco.com>
    Cc: Wolfram Sang <wsa@the-dreams.de>
    Reviewed-by: Jacopo Mondi <jacopo+renesas@jmondi.org>
    Signed-off-by: Akinobu Mita <akinobu.mita@gmail.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/media/i2c/ov772x.c b/drivers/media/i2c/ov772x.c
index ef6581e56753..3fdbe644648a 100644
--- a/drivers/media/i2c/ov772x.c
+++ b/drivers/media/i2c/ov772x.c
@@ -542,9 +542,19 @@ static struct ov772x_priv *to_ov772x(struct v4l2_subdev *sd)
 	return container_of(sd, struct ov772x_priv, subdev);
 }
 
-static inline int ov772x_read(struct i2c_client *client, u8 addr)
+static int ov772x_read(struct i2c_client *client, u8 addr)
 {
-	return i2c_smbus_read_byte_data(client, addr);
+	int ret;
+	u8 val;
+
+	ret = i2c_master_send(client, &addr, 1);
+	if (ret < 0)
+		return ret;
+	ret = i2c_master_recv(client, &val, 1);
+	if (ret < 0)
+		return ret;
+
+	return val;
 }
 
 static inline int ov772x_write(struct i2c_client *client, u8 addr, u8 value)
@@ -1263,13 +1273,11 @@ static int ov772x_probe(struct i2c_client *client,
 		return -EINVAL;
 	}
 
-	if (!i2c_check_functionality(adapter, I2C_FUNC_SMBUS_BYTE_DATA |
-					      I2C_FUNC_PROTOCOL_MANGLING)) {
+	if (!i2c_check_functionality(adapter, I2C_FUNC_SMBUS_BYTE_DATA)) {
 		dev_err(&adapter->dev,
-			"I2C-Adapter doesn't support SMBUS_BYTE_DATA or PROTOCOL_MANGLING\n");
+			"I2C-Adapter doesn't support SMBUS_BYTE_DATA\n");
 		return -EIO;
 	}
-	client->flags |= I2C_CLIENT_SCCB;
 
 	priv = devm_kzalloc(&client->dev, sizeof(*priv), GFP_KERNEL);
 	if (!priv)
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1161_6cbaed5c50ac046fdad63fef1463201750407e44.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1161_6cbaed5c50ac046fdad63fef1463201750407e44.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
