commit efed642bc585c8d26bdba3b4de97d78057874bcf
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Tue Aug 21 15:55:00 2018 +0200

    bpf, sockmap: fix sock_hash_alloc and reject zero-sized keys
    
    [ Upstream commit b845c898b2f1ea458d5453f0fa1da6e2dfce3bb4 ]
    
    Currently, it is possible to create a sock hash map with key size
    of 0 and have the kernel return a fd back to user space. This is
    invalid for hash maps (and kernel also hasn't been tested for zero
    key size support in general at this point). Thus, reject such
    configuration.
    
    Fixes: 81110384441a ("bpf: sockmap, add hash map support")
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: John Fastabend <john.fastabend@gmail.com>
    Acked-by: Song Liu <songliubraving@fb.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/kernel/bpf/sockmap.c b/kernel/bpf/sockmap.c
index 58899601fccf..dd87d930f036 100644
--- a/kernel/bpf/sockmap.c
+++ b/kernel/bpf/sockmap.c
@@ -2143,7 +2143,9 @@ static struct bpf_map *sock_hash_alloc(union bpf_attr *attr)
 		return ERR_PTR(-EPERM);
 
 	/* check sanity of attributes */
-	if (attr->max_entries == 0 || attr->value_size != 4 ||
+	if (attr->max_entries == 0 ||
+	    attr->key_size == 0 ||
+	    attr->value_size != 4 ||
 	    attr->map_flags & ~SOCK_CREATE_FLAG_MASK)
 		return ERR_PTR(-EINVAL);
 
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1270_efed642bc585c8d26bdba3b4de97d78057874bcf.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1270_efed642bc585c8d26bdba3b4de97d78057874bcf.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
