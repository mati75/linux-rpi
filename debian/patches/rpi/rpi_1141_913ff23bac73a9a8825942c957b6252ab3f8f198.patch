commit 913ff23bac73a9a8825942c957b6252ab3f8f198
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Tue Sep 26 11:41:28 2017 -0700

    libnvdimm, namespace: fix label initialization to use valid seq numbers
    
    commit b18d4b8a25af6fe83d7692191d6ff962ea611c4f upstream.
    
    The set of valid sequence numbers is {1,2,3}. The specification
    indicates that an implementation should consider 0 a sign of a critical
    error:
    
        UEFI 2.7: 13.19 NVDIMM Label Protocol
    
        Software never writes the sequence number 00, so a correctly
        check-summed Index Block with this sequence number probably indicates a
        critical error. When software discovers this case it treats it as an
        invalid Index Block indication.
    
    While the expectation is that the invalid block is just thrown away, the
    Robustness Principle says we should fix this to make both sequence
    numbers valid.
    
    Fixes: f524bf271a5c ("libnvdimm: write pmem label set")
    Reported-by: Juston Li <juston.li@intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/nvdimm/label.c b/drivers/nvdimm/label.c
index 9c5f108910e3..de66c02f6140 100644
--- a/drivers/nvdimm/label.c
+++ b/drivers/nvdimm/label.c
@@ -1050,7 +1050,7 @@ static int init_labels(struct nd_mapping *nd_mapping, int num_labels)
 	nsindex = to_namespace_index(ndd, 0);
 	memset(nsindex, 0, ndd->nsarea.config_size);
 	for (i = 0; i < 2; i++) {
-		int rc = nd_label_write_index(ndd, i, i*2, ND_NSINDEX_INIT);
+		int rc = nd_label_write_index(ndd, i, 3 - i, ND_NSINDEX_INIT);
 
 		if (rc)
 			return rc;
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1141_913ff23bac73a9a8825942c957b6252ab3f8f198.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1141_913ff23bac73a9a8825942c957b6252ab3f8f198.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
