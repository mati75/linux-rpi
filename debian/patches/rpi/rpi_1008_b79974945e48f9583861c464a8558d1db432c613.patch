commit b79974945e48f9583861c464a8558d1db432c613
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Wed Nov 8 20:23:55 2017 +0530

    cpufreq: schedutil: Reset cached_raw_freq when not in sync with next_freq
    
    commit 07458f6a5171d97511dfbdf6ce549ed2ca0280c7 upstream.
    
    'cached_raw_freq' is used to get the next frequency quickly but should
    always be in sync with sg_policy->next_freq. There is a case where it is
    not and in such cases it should be reset to avoid switching to incorrect
    frequencies.
    
    Consider this case for example:
    
     - policy->cur is 1.2 GHz (Max)
     - New request comes for 780 MHz and we store that in cached_raw_freq.
     - Based on 780 MHz, we calculate the effective frequency as 800 MHz.
     - We then see the CPU wasn't idle recently and choose to keep the next
       freq as 1.2 GHz.
     - Now we have cached_raw_freq is 780 MHz and sg_policy->next_freq is
       1.2 GHz.
     - Now if the utilization doesn't change in then next request, then the
       next target frequency will still be 780 MHz and it will match with
       cached_raw_freq. But we will choose 1.2 GHz instead of 800 MHz here.
    
    Fixes: b7eaf1aab9f8 (cpufreq: schedutil: Avoid reducing frequency of busy CPUs prematurely)
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/kernel/sched/cpufreq_schedutil.c b/kernel/sched/cpufreq_schedutil.c
index ba0da243fdd8..2f52ec0f1539 100644
--- a/kernel/sched/cpufreq_schedutil.c
+++ b/kernel/sched/cpufreq_schedutil.c
@@ -282,8 +282,12 @@ static void sugov_update_single(struct update_util_data *hook, u64 time,
 		 * Do not reduce the frequency if the CPU has not been idle
 		 * recently, as the reduction is likely to be premature then.
 		 */
-		if (busy && next_f < sg_policy->next_freq)
+		if (busy && next_f < sg_policy->next_freq) {
 			next_f = sg_policy->next_freq;
+
+			/* Reset cached freq as next_freq has changed */
+			sg_policy->cached_raw_freq = 0;
+		}
 	}
 	sugov_update_commit(sg_policy, time, next_f);
 }
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1008_b79974945e48f9583861c464a8558d1db432c613.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1008_b79974945e48f9583861c464a8558d1db432c613.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
