commit acee207b7cc92b3f057086e1df972b3020caa54a
Author: Dmitry Osipenko <digetx@gmail.com>
Date:   Tue Jul 17 19:10:38 2018 +0300

    gpio: tegra: Fix tegra_gpio_irq_set_type()
    
    [ Upstream commit f78709a5d4114edc21a5d86586ed5e56e284f2bd ]
    
    Commit 36b312792b97 ("gpiolib: Respect error code of ->get_direction()")
    broke tegra_gpio_irq_set_type() because requesting of GPIO direction must
    be done after enabling GPIO function for a pin.
    
    This patch fixes drivers probe failure like this:
    
     gpio gpiochip0: (tegra-gpio): gpiochip_lock_as_irq: cannot get GPIO direction
     tegra-gpio 6000d000.gpio: unable to lock Tegra GPIO 144 as IRQ
    
    Fixes: 36b312792b97 ("gpiolib: Respect error code of ->get_direction()")
    Signed-off-by: Dmitry Osipenko <digetx@gmail.com>
    Acked-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/gpio/gpio-tegra.c b/drivers/gpio/gpio-tegra.c
index d5d79727c55d..d9e4da146227 100644
--- a/drivers/gpio/gpio-tegra.c
+++ b/drivers/gpio/gpio-tegra.c
@@ -323,13 +323,6 @@ static int tegra_gpio_irq_set_type(struct irq_data *d, unsigned int type)
 		return -EINVAL;
 	}
 
-	ret = gpiochip_lock_as_irq(&tgi->gc, gpio);
-	if (ret) {
-		dev_err(tgi->dev,
-			"unable to lock Tegra GPIO %u as IRQ\n", gpio);
-		return ret;
-	}
-
 	spin_lock_irqsave(&bank->lvl_lock[port], flags);
 
 	val = tegra_gpio_readl(tgi, GPIO_INT_LVL(tgi, gpio));
@@ -342,6 +335,14 @@ static int tegra_gpio_irq_set_type(struct irq_data *d, unsigned int type)
 	tegra_gpio_mask_write(tgi, GPIO_MSK_OE(tgi, gpio), gpio, 0);
 	tegra_gpio_enable(tgi, gpio);
 
+	ret = gpiochip_lock_as_irq(&tgi->gc, gpio);
+	if (ret) {
+		dev_err(tgi->dev,
+			"unable to lock Tegra GPIO %u as IRQ\n", gpio);
+		tegra_gpio_disable(tgi, gpio);
+		return ret;
+	}
+
 	if (type & (IRQ_TYPE_LEVEL_LOW | IRQ_TYPE_LEVEL_HIGH))
 		irq_set_handler_locked(d, handle_level_irq);
 	else if (type & (IRQ_TYPE_EDGE_FALLING | IRQ_TYPE_EDGE_RISING))
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1219_acee207b7cc92b3f057086e1df972b3020caa54a.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1219_acee207b7cc92b3f057086e1df972b3020caa54a.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
