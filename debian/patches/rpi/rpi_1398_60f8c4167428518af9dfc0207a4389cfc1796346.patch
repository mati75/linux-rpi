commit 60f8c4167428518af9dfc0207a4389cfc1796346
Author: Phil Elwell <phil@raspberrypi.org>
Date:   Fri Sep 29 10:32:19 2017 +0100

    amba_pl011: Add cts-event-workaround DT property
    
    The BCM2835 PL011 implementation seems to have a bug that can lead to a
    transmission lockup if CTS changes frequently. A workaround was added to
    the driver with a vendor-specific flag to enable it, but this flag is
    currently not set for ARM implementations.
    
    Add a "cts-event-workaround" property to Pi DTBs and use the presence
    of that property to force the flag to be enabled in the driver.
    
    See: https://github.com/raspberrypi/linux/issues/1280
    
    Signed-off-by: Phil Elwell <phil@raspberrypi.org>

diff --git a/Documentation/devicetree/bindings/serial/pl011.txt b/Documentation/devicetree/bindings/serial/pl011.txt
index 77863aefe9ef..8d65b0ec2828 100644
--- a/Documentation/devicetree/bindings/serial/pl011.txt
+++ b/Documentation/devicetree/bindings/serial/pl011.txt
@@ -35,6 +35,9 @@ Optional properties:
 - poll-timeout-ms:
 	   Poll timeout when auto-poll is set, default
 	   3000ms.
+- cts-event-workaround:
+	   Enables the (otherwise vendor-specific) workaround for the
+	   CTS-induced TX lockup.
 
 See also bindings/arm/primecell.txt
 
diff --git a/arch/arm/boot/dts/bcm270x.dtsi b/arch/arm/boot/dts/bcm270x.dtsi
index caa663935186..6af5a3651377 100644
--- a/arch/arm/boot/dts/bcm270x.dtsi
+++ b/arch/arm/boot/dts/bcm270x.dtsi
@@ -26,6 +26,11 @@
 			interrupts = <2 17>, <2 18>;
 		};
 
+		serial@7e201000 { /* uart0 */
+			/* Enable CTS bug workaround */
+			cts-event-workaround;
+		};
+
 		sdhost: sdhost@7e202000 {
 			compatible = "brcm,bcm2835-sdhost";
 			reg = <0x7e202000 0x100>;
diff --git a/drivers/tty/serial/amba-pl011.c b/drivers/tty/serial/amba-pl011.c
index a17489a1174e..460c7d3e2962 100644
--- a/drivers/tty/serial/amba-pl011.c
+++ b/drivers/tty/serial/amba-pl011.c
@@ -2578,6 +2578,11 @@ static int pl011_probe(struct amba_device *dev, const struct amba_id *id)
 	if (IS_ERR(uap->clk))
 		return PTR_ERR(uap->clk);
 
+	if (of_property_read_bool(dev->dev.of_node, "cts-event-workaround")) {
+	    vendor->cts_event_workaround = true;
+	    dev_info(&dev->dev, "cts_event_workaround enabled\n");
+	}
+
 	uap->reg_offset = vendor->reg_offset;
 	uap->vendor = vendor;
 	uap->fifosize = vendor->get_fifosize(dev);
