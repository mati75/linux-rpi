commit 3c409ca9dff1b160526aa5001b8d0e01ec7fdbbe
Author: Nir Dotan <nird@mellanox.com>
Date:   Fri Aug 3 15:57:42 2018 +0300

    mlxsw: core_acl_flex_actions: Remove redundant resource destruction
    
    [ Upstream commit dda0a3a3fb92451d4a922e56365ee1f73c8a9586 ]
    
    Some ACL actions require the allocation of a separate resource
    prior to applying the action itself. When facing an error condition
    during the setup phase of the action, resource should be destroyed.
    For such actions the destruction was done twice which is dangerous
    and lead to a potential crash.
    The destruction took place first upon error on action setup phase
    and then as the rule was destroyed.
    
    The following sequence generated a crash:
    
     # tc qdisc add dev swp49 ingress
     # tc filter add dev swp49 parent ffff: \
       protocol ip chain 100 pref 10 \
       flower skip_sw dst_ip 192.168.101.1 action drop
     # tc filter add dev swp49 parent ffff: \
       protocol ip pref 10 \
       flower skip_sw dst_ip 192.168.101.1 action goto chain 100 \
       action mirred egress mirror dev swp4
    
    Therefore add mlxsw_afa_resource_del() as a complement of
    mlxsw_afa_resource_add() to add symmetry to resource_list membership
    handling. Call this from mlxsw_afa_fwd_entry_ref_destroy() to make the
    _fwd_entry_ref_create() and _fwd_entry_ref_destroy() pair of calls a
    NOP.
    
    Fixes: 140ce421217e ("mlxsw: core: Convert fwd_entry_ref list to be generic per-block resource list")
    Signed-off-by: Nir Dotan <nird@mellanox.com>
    Reviewed-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: Ido Schimmel <idosch@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c b/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c
index ce280680258e..d664cc0289c2 100644
--- a/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c
@@ -327,12 +327,16 @@ static void mlxsw_afa_resource_add(struct mlxsw_afa_block *block,
 	list_add(&resource->list, &block->resource_list);
 }
 
+static void mlxsw_afa_resource_del(struct mlxsw_afa_resource *resource)
+{
+	list_del(&resource->list);
+}
+
 static void mlxsw_afa_resources_destroy(struct mlxsw_afa_block *block)
 {
 	struct mlxsw_afa_resource *resource, *tmp;
 
 	list_for_each_entry_safe(resource, tmp, &block->resource_list, list) {
-		list_del(&resource->list);
 		resource->destructor(block, resource);
 	}
 }
@@ -530,6 +534,7 @@ static void
 mlxsw_afa_fwd_entry_ref_destroy(struct mlxsw_afa_block *block,
 				struct mlxsw_afa_fwd_entry_ref *fwd_entry_ref)
 {
+	mlxsw_afa_resource_del(&fwd_entry_ref->resource);
 	mlxsw_afa_fwd_entry_put(block->afa, fwd_entry_ref->fwd_entry);
 	kfree(fwd_entry_ref);
 }
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1010_3c409ca9dff1b160526aa5001b8d0e01ec7fdbbe.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1010_3c409ca9dff1b160526aa5001b8d0e01ec7fdbbe.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
