commit 9fd4b9dc69769bb763e212fd287ce11971c6968a
Author: Noralf Trønnes <noralf@tronnes.org>
Date:   Mon Sep 19 17:19:41 2016 +0200

    i2c: bcm2835: Use dev_dbg logging on transfer errors
    
    Writing to an AT24C32 generates on average 2x i2c transfer errors per
    32-byte page write. Which amounts to a lot for a 4k write. This is due
    to the fact that the chip doesn't respond during it's internal write
    cycle when the at24 driver tries and retries the next write.
    Only a handful drivers use dev_err() on transfer error, so switch to
    dev_dbg() instead.
    
    Signed-off-by: Noralf Trønnes <noralf@tronnes.org>
    Reviewed-by: Eric Anholt <eric@anholt.net>

diff --git a/drivers/i2c/busses/i2c-bcm2835.c b/drivers/i2c/busses/i2c-bcm2835.c
index d2ba1a4de36a..54d510abd46a 100644
--- a/drivers/i2c/busses/i2c-bcm2835.c
+++ b/drivers/i2c/busses/i2c-bcm2835.c
@@ -216,7 +216,7 @@ static int bcm2835_i2c_xfer_msg(struct bcm2835_i2c_dev *i2c_dev,
 	    (msg->flags & I2C_M_IGNORE_NAK))
 		return 0;
 
-	dev_err(i2c_dev->dev, "i2c transfer failed: %x\n", i2c_dev->msg_err);
+	dev_dbg(i2c_dev->dev, "i2c transfer failed: %x\n", i2c_dev->msg_err);
 
 	if (i2c_dev->msg_err & BCM2835_I2C_S_ERR)
 		return -EREMOTEIO;
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1108_9fd4b9dc69769bb763e212fd287ce11971c6968a.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1108_9fd4b9dc69769bb763e212fd287ce11971c6968a.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
