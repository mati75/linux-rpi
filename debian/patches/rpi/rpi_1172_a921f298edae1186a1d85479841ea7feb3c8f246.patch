commit a921f298edae1186a1d85479841ea7feb3c8f246
Author: Sugizaki Yukimasa <i.can.speak.c.and.basic@gmail.com>
Date:   Fri Jan 5 00:01:30 2018 +0900

    vcsm: Support for finding user/vc handle in memory pool
    
    vmcs_sm_{usr,vc}_handle_from_pid_and_address() were failing to find
    handle if specified user pointer is not exactly the one that the memory
    locking call returned even if the pointer is in range of map/resource.
    So fixed the functions to match the range.
    
    Signed-off-by: Sugizaki Yukimasa <i.can.speak.c.and.basic@gmail.com>

diff --git a/drivers/char/broadcom/vc_sm/vmcs_sm.c b/drivers/char/broadcom/vc_sm/vmcs_sm.c
index 53843054d761..abd770566ed3 100644
--- a/drivers/char/broadcom/vc_sm/vmcs_sm.c
+++ b/drivers/char/broadcom/vc_sm/vmcs_sm.c
@@ -276,7 +276,10 @@ static unsigned int vmcs_sm_vc_handle_from_pid_and_address(unsigned int pid,
 	/* Lookup the resource. */
 	if (!list_empty(&sm_state->map_list)) {
 		list_for_each_entry(map, &sm_state->map_list, map_list) {
-			if (map->res_pid != pid || map->res_addr != addr)
+			if (map->res_pid != pid)
+				continue;
+			if (!(map->res_addr <= addr &&
+						addr < map->res_addr + map->resource->res_size))
 				continue;
 
 			pr_debug("[%s]: global map %p (pid %u, addr %lx) -> vc-hdl %x (usr-hdl %x)\n",
@@ -326,7 +329,10 @@ static unsigned int vmcs_sm_usr_handle_from_pid_and_address(unsigned int pid,
 	/* Lookup the resource. */
 	if (!list_empty(&sm_state->map_list)) {
 		list_for_each_entry(map, &sm_state->map_list, map_list) {
-			if (map->res_pid != pid || map->res_addr != addr)
+			if (map->res_pid != pid)
+				continue;
+			if (!(map->res_addr <= addr &&
+						addr < map->res_addr + map->resource->res_size))
 				continue;
 
 			pr_debug("[%s]: global map %p (pid %u, addr %lx) -> usr-hdl %x (vc-hdl %x)\n",
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1172_a921f298edae1186a1d85479841ea7feb3c8f246.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1172_a921f298edae1186a1d85479841ea7feb3c8f246.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
