commit 93a6d3464023c19d539b29c6bd40e1730d2b5373
Author: Anurag Kumar Vulisha <anurag.kumar.vulisha@xilinx.com>
Date:   Sat Dec 1 16:43:29 2018 +0530

    usb: dwc3: Correct the logic for checking TRB full in __dwc3_prepare_one_trb()
    
    [ Upstream commit b7a4fbe2300a8965ea760c7e871507b84aea17f6 ]
    
    Availability of TRB's is calculated using dwc3_calc_trbs_left(), which
    determines total available TRB's based on the HWO bit set in a TRB.
    
    In the present code, __dwc3_prepare_one_trb() is called with a TRB which
    needs to be prepared for transfer. This __dwc3_prepare_one_trb() calls
    dwc3_calc_trbs_left() to determine total available TRBs and set IOC bit
    if the total available TRBs are zero. Since the present working TRB (which
    is passed as an argument to __dwc3_prepare_one_trb() )  doesn't yet have
    the HWO bit set before calling dwc3_calc_trbs_left(), there are chances
    that dwc3_calc_trbs_left() wrongly calculates this present working TRB
    as free(since the HWO bit is not yet set) and returns the total available
    TRBs as greater than zero (including the present working TRB). This could
    be a problem.
    
    This patch corrects the above mentioned problem in __dwc3_prepare_one_trb()
    by increementing the dep->trb_enqueue at the last (after preparing the TRB)
    instead of increementing at the start and setting the IOC bit only if the
    total available TRBs returned by dwc3_calc_trbs_left() is 1 . Since we are
    increementing the dep->trb_enqueue at the last, the present working TRB is
    also considered as available by dwc3_calc_trbs_left() and non zero value is
    returned . So, according to the modified logic, when the total available
    TRBs is equal to 1 that means the total available TRBs in the pool are 0.
    
    Signed-off-by: Anurag Kumar Vulisha <anurag.kumar.vulisha@xilinx.com>
    Reviewed-by: Thinh Nguyen <thinhn@synopsys.com>
    Tested-by: Tejas Joglekar <tejas.joglekar@synopsys.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

diff --git a/drivers/usb/dwc3/gadget.c b/drivers/usb/dwc3/gadget.c
index d8bf9307901e..74d29159f3b9 100644
--- a/drivers/usb/dwc3/gadget.c
+++ b/drivers/usb/dwc3/gadget.c
@@ -912,8 +912,6 @@ static void __dwc3_prepare_one_trb(struct dwc3_ep *dep, struct dwc3_trb *trb,
 	struct usb_gadget	*gadget = &dwc->gadget;
 	enum usb_device_speed	speed = gadget->speed;
 
-	dwc3_ep_inc_enq(dep);
-
 	trb->size = DWC3_TRB_SIZE_LENGTH(length);
 	trb->bpl = lower_32_bits(dma);
 	trb->bph = upper_32_bits(dma);
@@ -992,7 +990,7 @@ static void __dwc3_prepare_one_trb(struct dwc3_ep *dep, struct dwc3_trb *trb,
 	}
 
 	if ((!no_interrupt && !chain) ||
-			(dwc3_calc_trbs_left(dep) == 0))
+			(dwc3_calc_trbs_left(dep) == 1))
 		trb->ctrl |= DWC3_TRB_CTRL_IOC;
 
 	if (chain)
@@ -1003,6 +1001,8 @@ static void __dwc3_prepare_one_trb(struct dwc3_ep *dep, struct dwc3_trb *trb,
 
 	trb->ctrl |= DWC3_TRB_CTRL_HWO;
 
+	dwc3_ep_inc_enq(dep);
+
 	trace_dwc3_prepare_trb(dep, trb);
 }
 
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1091_93a6d3464023c19d539b29c6bd40e1730d2b5373.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1091_93a6d3464023c19d539b29c6bd40e1730d2b5373.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
