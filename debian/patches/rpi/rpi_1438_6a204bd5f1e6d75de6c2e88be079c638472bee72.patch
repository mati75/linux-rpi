commit 6a204bd5f1e6d75de6c2e88be079c638472bee72
Author: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
Date:   Thu Feb 7 10:54:53 2019 +0200

    drm/i915: Prevent a race during I915_GEM_MMAP ioctl with WC set
    
    commit 2e7bd10e05afb866b5fb13eda25095c35d7a27cc upstream.
    
    Make sure the underlying VMA in the process address space is the
    same as it was during vm_mmap to avoid applying WC to wrong VMA.
    
    A more long-term solution would be to have vm_mmap_locked variant
    in linux/mmap.h for when caller wants to hold mmap_sem for an
    extended duration.
    
    v2:
    - Refactor the compare function
    
    Fixes: 1816f9236303 ("drm/i915: Support creation of unbound wc user mappings for objects")
    Reported-by: Adam Zabrocki <adamza@microsoft.com>
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Cc: <stable@vger.kernel.org> # v4.0+
    Cc: Akash Goel <akash.goel@intel.com>
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Tvrtko Ursulin <tvrtko.ursulin@linux.intel.com>
    Cc: Adam Zabrocki <adamza@microsoft.com>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Reviewed-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com> #v1
    Link: https://patchwork.freedesktop.org/patch/msgid/20190207085454.10598-1-joonas.lahtinen@linux.intel.com
    (cherry picked from commit 5c4604e757ba9b193b09768d75a7d2105a5b883f)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/gpu/drm/i915/i915_gem.c b/drivers/gpu/drm/i915/i915_gem.c
index 47cc932e23a7..280c851714e6 100644
--- a/drivers/gpu/drm/i915/i915_gem.c
+++ b/drivers/gpu/drm/i915/i915_gem.c
@@ -1821,6 +1821,16 @@ i915_gem_sw_finish_ioctl(struct drm_device *dev, void *data,
 	return 0;
 }
 
+static inline bool
+__vma_matches(struct vm_area_struct *vma, struct file *filp,
+	      unsigned long addr, unsigned long size)
+{
+	if (vma->vm_file != filp)
+		return false;
+
+	return vma->vm_start == addr && (vma->vm_end - vma->vm_start) == size;
+}
+
 /**
  * i915_gem_mmap_ioctl - Maps the contents of an object, returning the address
  *			 it is mapped to.
@@ -1879,7 +1889,7 @@ i915_gem_mmap_ioctl(struct drm_device *dev, void *data,
 			return -EINTR;
 		}
 		vma = find_vma(mm, addr);
-		if (vma)
+		if (vma && __vma_matches(vma, obj->base.filp, addr, args->size))
 			vma->vm_page_prot =
 				pgprot_writecombine(vm_get_page_prot(vma->vm_flags));
 		else
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1438_6a204bd5f1e6d75de6c2e88be079c638472bee72.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1438_6a204bd5f1e6d75de6c2e88be079c638472bee72.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
