commit 92f6bb16bbe97158dc222f0862d6c19c1687bc8f
Author: Xin Long <lucien.xin@gmail.com>
Date:   Sun Aug 5 22:46:07 2018 +0800

    ip6_tunnel: use the right value for ipv4 min mtu check in ip6_tnl_xmit
    
    [ Upstream commit 82a40777de12728dedf4075453b694f0d1baee80 ]
    
    According to RFC791, 68 bytes is the minimum size of IPv4 datagram every
    device must be able to forward without further fragmentation while 576
    bytes is the minimum size of IPv4 datagram every device has to be able
    to receive, so in ip6_tnl_xmit(), 68(IPV4_MIN_MTU) should be the right
    value for the ipv4 min mtu check in ip6_tnl_xmit.
    
    While at it, change to use max() instead of if statement.
    
    Fixes: c9fefa08190f ("ip6_tunnel: get the min mtu properly in ip6_tnl_xmit")
    Reported-by: Sabrina Dubroca <sd@queasysnail.net>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/net/ipv6/ip6_tunnel.c b/net/ipv6/ip6_tunnel.c
index 00e138a44cbb..1cc9650af9fb 100644
--- a/net/ipv6/ip6_tunnel.c
+++ b/net/ipv6/ip6_tunnel.c
@@ -1133,12 +1133,8 @@ int ip6_tnl_xmit(struct sk_buff *skb, struct net_device *dev, __u8 dsfield,
 		max_headroom += 8;
 		mtu -= 8;
 	}
-	if (skb->protocol == htons(ETH_P_IPV6)) {
-		if (mtu < IPV6_MIN_MTU)
-			mtu = IPV6_MIN_MTU;
-	} else if (mtu < 576) {
-		mtu = 576;
-	}
+	mtu = max(mtu, skb->protocol == htons(ETH_P_IPV6) ?
+		       IPV6_MIN_MTU : IPV4_MIN_MTU);
 
 	skb_dst_update_pmtu(skb, mtu);
 	if (skb->len - t->tun_hlen - eth_hlen > mtu && !skb_is_gso(skb)) {
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1009_92f6bb16bbe97158dc222f0862d6c19c1687bc8f.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1009_92f6bb16bbe97158dc222f0862d6c19c1687bc8f.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
