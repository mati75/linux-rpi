commit 1bb1252b4e788fd8bcab9a2b4aebcffa2f49c30a
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Thu Jun 28 09:57:42 2018 +0200

    siox: don't create a thread without starting it
    
    [ Upstream commit e890591413819eeb604207ad3261ba617b2ec0bb ]
    
    When a siox master device is registered a kthread is created that is
    only started when triggered by userspace. So this thread might be in
    TASK_UNINTERRUPTIBLE state for long and trigger a warning
    
            [  241.130465] INFO: task siox-0:626 blocked for more than 120 seconds.
    
    with the respective debug settings enabled. It might be right to put an
    unstarted thread to TASK_IDLE (in kernel/kthread.c:kthread()) instead,
    but independant of this discussion it is cleaner for
    siox_master_register() to start the thread immediately. The effect is
    that it enters its own waiting state and then stays in state TASK_IDLE
    which doesn't trigger the above warning.
    
    As siox_poll_thread() uses some variables of the device the
    initialisation of these is moved before thread creation.
    
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Acked-by: Gavin Schenk <g.schenk@eckelmann.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/siox/siox-core.c b/drivers/siox/siox-core.c
index 16590dfaafa4..cef307c0399c 100644
--- a/drivers/siox/siox-core.c
+++ b/drivers/siox/siox-core.c
@@ -715,17 +715,17 @@ int siox_master_register(struct siox_master *smaster)
 
 	dev_set_name(&smaster->dev, "siox-%d", smaster->busno);
 
+	mutex_init(&smaster->lock);
+	INIT_LIST_HEAD(&smaster->devices);
+
 	smaster->last_poll = jiffies;
-	smaster->poll_thread = kthread_create(siox_poll_thread, smaster,
-					      "siox-%d", smaster->busno);
+	smaster->poll_thread = kthread_run(siox_poll_thread, smaster,
+					   "siox-%d", smaster->busno);
 	if (IS_ERR(smaster->poll_thread)) {
 		smaster->active = 0;
 		return PTR_ERR(smaster->poll_thread);
 	}
 
-	mutex_init(&smaster->lock);
-	INIT_LIST_HEAD(&smaster->devices);
-
 	ret = device_add(&smaster->dev);
 	if (ret)
 		kthread_stop(smaster->poll_thread);
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1094_1bb1252b4e788fd8bcab9a2b4aebcffa2f49c30a.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1094_1bb1252b4e788fd8bcab9a2b4aebcffa2f49c30a.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
