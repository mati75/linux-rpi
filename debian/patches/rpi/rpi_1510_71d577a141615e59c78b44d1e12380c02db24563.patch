commit 71d577a141615e59c78b44d1e12380c02db24563
Author: Tim Gover <tim.gover@raspberrypi.org>
Date:   Fri Jul 6 11:06:48 2018 +0100

    ASoC: Enable the RPi simple soundcard driver
    
    Switch the following soundcards to use the RPi simple soundcard driver
    and remove the dedicate driver implementations.
    
    * ADAU1977 ADC
    * Google VoiceHat
    * HifiBerry AMP
    * HifiBerry DAC
    * RPI DAC
    
    There is no impact on defconfig or codec configuration. Instead of
    enabling the config to build the dedicated driver the menuconfig entries
    now just select SND_RPI_SIMPLE_SOUNDCARD.
    
    Signed-off-by: Tim Gover <tim.gover@raspberrypi.org>

diff --git a/sound/soc/bcm/Kconfig b/sound/soc/bcm/Kconfig
index be66a94795b5..fb09789a7a70 100644
--- a/sound/soc/bcm/Kconfig
+++ b/sound/soc/bcm/Kconfig
@@ -21,6 +21,7 @@ config SND_BCM2708_SOC_GOOGLEVOICEHAT_SOUNDCARD
 	tristate "Support for Google voiceHAT soundcard"
 	depends on SND_BCM2708_SOC_I2S || SND_BCM2835_SOC_I2S
 	select SND_SOC_VOICEHAT
+	select SND_RPI_SIMPLE_SOUNDCARD
 	help
           Say Y or M if you want to add support for voiceHAT soundcard.
 
@@ -28,6 +29,7 @@ config SND_BCM2708_SOC_HIFIBERRY_DAC
         tristate "Support for HifiBerry DAC"
         depends on SND_BCM2708_SOC_I2S || SND_BCM2835_SOC_I2S
         select SND_SOC_PCM5102A
+        select SND_RPI_SIMPLE_SOUNDCARD
         help
          Say Y or M if you want to add support for HifiBerry DAC.
 
@@ -49,6 +51,7 @@ config SND_BCM2708_SOC_HIFIBERRY_AMP
         tristate "Support for the HifiBerry Amp"
         depends on SND_BCM2708_SOC_I2S || SND_BCM2835_SOC_I2S
         select SND_SOC_TAS5713
+        select SND_RPI_SIMPLE_SOUNDCARD
         help
          Say Y or M if you want to add support for the HifiBerry Amp amplifier board.
 
@@ -65,6 +68,7 @@ config SND_BCM2708_SOC_RPI_DAC
         tristate "Support for RPi-DAC"
         depends on SND_BCM2708_SOC_I2S || SND_BCM2835_SOC_I2S
         select SND_SOC_PCM1794A
+        select SND_RPI_SIMPLE_SOUNDCARD
         help
          Say Y or M if you want to add support for RPi-DAC.
 
@@ -107,6 +111,7 @@ config SND_BCM2708_SOC_ADAU1977_ADC
 	tristate "Support for ADAU1977 ADC"
 	depends on SND_BCM2708_SOC_I2S || SND_BCM2835_SOC_I2S
 	select SND_SOC_ADAU1977_I2C
+	select SND_RPI_SIMPLE_SOUNDCARD
 	help
 	  Say Y or M if you want to add support for ADAU1977 ADC.
 
@@ -198,14 +203,6 @@ config SND_PISOUND
 	  Say Y or M if you want to add support for Blokas Labs pisound.
 
 config SND_RPI_SIMPLE_SOUNDCARD
-	tristate "Support for Raspberry Pi simple soundcard driver"
-	depends on SND_BCM2708_SOC_I2S || SND_BCM2835_SOC_I2S
-	depends on I2C
-	select SND_SOC_ADAU1977_I2C
-	select SND_SOC_PCM1794A
-	select SND_SOC_PCM5102A
-	select SND_SOC_PCM512x_I2C
-	select SND_SOC_TAS5713
+	tristate "Support for Raspberry Pi simple soundcards"
 	help
-	  Say Y or M if you want to to add support for the RPI simple driver
-	  which provides a generic soundcard driver for several soundcards.
+	  Say Y or M if you want to add support Raspbery Pi simple soundcards
diff --git a/sound/soc/bcm/Makefile b/sound/soc/bcm/Makefile
index a8644d6f1074..734bea249f96 100644
--- a/sound/soc/bcm/Makefile
+++ b/sound/soc/bcm/Makefile
@@ -12,16 +12,11 @@ obj-$(CONFIG_SND_SOC_CYGNUS) += snd-soc-cygnus.o
 snd-soc-googlevoicehat-codec-objs := googlevoicehat-codec.o
 
 # BCM2708 Machine Support
-snd-soc-adau1977-adc-objs := adau1977-adc.o
-snd-soc-googlevoicehat-soundcard-objs := googlevoicehat-soundcard.o
-snd-soc-hifiberry-amp-objs := hifiberry_amp.o
-snd-soc-hifiberry-dac-objs := hifiberry_dac.o
 snd-soc-hifiberry-dacplus-objs := hifiberry_dacplus.o
 snd-soc-hifiberry-digi-objs := hifiberry_digi.o
 snd-soc-justboom-dac-objs := justboom-dac.o
 snd-soc-justboom-digi-objs := justboom-digi.o
 snd-soc-rpi-cirrus-objs := rpi-cirrus.o
-snd-soc-rpi-dac-objs := rpi-dac.o
 snd-soc-rpi-proto-objs := rpi-proto.o
 snd-soc-iqaudio-dac-objs := iqaudio-dac.o
 snd-soc-iqaudio-digi-objs := iqaudio_digi.o
@@ -39,17 +34,12 @@ snd-soc-pisound-objs := pisound.o
 snd-soc-fe-pi-audio-objs := fe-pi-audio.o
 snd-soc-rpi-simple-soundcard-objs := rpi-simple-soundcard.o
 
-obj-$(CONFIG_SND_BCM2708_SOC_ADAU1977_ADC) += snd-soc-adau1977-adc.o
-obj-$(CONFIG_SND_BCM2708_SOC_GOOGLEVOICEHAT_SOUNDCARD) += snd-soc-googlevoicehat-soundcard.o
 obj-$(CONFIG_SND_BCM2708_SOC_GOOGLEVOICEHAT_SOUNDCARD)  += snd-soc-googlevoicehat-codec.o
-obj-$(CONFIG_SND_BCM2708_SOC_HIFIBERRY_AMP) += snd-soc-hifiberry-amp.o
-obj-$(CONFIG_SND_BCM2708_SOC_HIFIBERRY_DAC) += snd-soc-hifiberry-dac.o
 obj-$(CONFIG_SND_BCM2708_SOC_HIFIBERRY_DACPLUS) += snd-soc-hifiberry-dacplus.o
 obj-$(CONFIG_SND_BCM2708_SOC_HIFIBERRY_DIGI) += snd-soc-hifiberry-digi.o
 obj-$(CONFIG_SND_BCM2708_SOC_JUSTBOOM_DAC) += snd-soc-justboom-dac.o
 obj-$(CONFIG_SND_BCM2708_SOC_JUSTBOOM_DIGI) += snd-soc-justboom-digi.o
 obj-$(CONFIG_SND_BCM2708_SOC_RPI_CIRRUS) += snd-soc-rpi-cirrus.o
-obj-$(CONFIG_SND_BCM2708_SOC_RPI_DAC) += snd-soc-rpi-dac.o
 obj-$(CONFIG_SND_BCM2708_SOC_RPI_PROTO) += snd-soc-rpi-proto.o
 obj-$(CONFIG_SND_BCM2708_SOC_IQAUDIO_DAC) += snd-soc-iqaudio-dac.o
 obj-$(CONFIG_SND_BCM2708_SOC_IQAUDIO_DIGI) += snd-soc-iqaudio-digi.o
diff --git a/sound/soc/bcm/adau1977-adc.c b/sound/soc/bcm/adau1977-adc.c
deleted file mode 100644
index a0c59a95f0be..000000000000
--- a/sound/soc/bcm/adau1977-adc.c
+++ /dev/null
@@ -1,119 +0,0 @@
-/*
- * ASoC Driver for ADAU1977 ADC
- *
- * Author:	Andrey Grodzovsky <andrey2805@gmail.com>
- *		Copyright 2016
- *
- * This file is based on hifibery_dac driver by Florian Meier.
- * 
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * version 2 as published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful, but
- * WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- * General Public License for more details.
- */
-
-#include <linux/module.h>
-#include <linux/platform_device.h>
-
-#include <sound/core.h>
-#include <sound/pcm.h>
-#include <sound/pcm_params.h>
-#include <sound/soc.h>
-#include <sound/jack.h>
-
-enum adau1977_clk_id {
-    ADAU1977_SYSCLK,
-};
- 
-enum adau1977_sysclk_src {
-    ADAU1977_SYSCLK_SRC_MCLK,
-    ADAU1977_SYSCLK_SRC_LRCLK,
-};
-
-static int eval_adau1977_init(struct snd_soc_pcm_runtime *rtd)
-{
-	int ret;
-	struct snd_soc_dai *codec_dai = rtd->codec_dai;
-	
-	ret = snd_soc_dai_set_tdm_slot(codec_dai, 0, 0, 0, 0);
-	if (ret < 0)
-		return ret;
-
-	return snd_soc_component_set_sysclk(codec_dai->component, ADAU1977_SYSCLK,
-			ADAU1977_SYSCLK_SRC_MCLK, 11289600, SND_SOC_CLOCK_IN);
-}
- 
-static struct snd_soc_dai_link snd_rpi_adau1977_dai[] = {
-	{
-	.name = "adau1977",
-	.stream_name = "ADAU1977", 
-	.cpu_dai_name = "bcm2708-i2s.0", 
-	.codec_dai_name = "adau1977-hifi",
-	.platform_name = "bcm2708-i2s.0",
-	.codec_name = "adau1977.1-0011",
-	.init = eval_adau1977_init,
-	.dai_fmt = SND_SOC_DAIFMT_I2S |
-		SND_SOC_DAIFMT_NB_NF |
-		SND_SOC_DAIFMT_CBM_CFM,
-	},
-};
-
-/* audio machine driver */
-static struct snd_soc_card snd_adau1977_adc = {
-	.name         = "snd_rpi_adau1977_adc",
-	.owner        = THIS_MODULE,
-	.dai_link     = snd_rpi_adau1977_dai,
-	.num_links    = ARRAY_SIZE(snd_rpi_adau1977_dai),
-};
-
-static int snd_adau1977_adc_probe(struct platform_device *pdev)
-{
-	int ret = 0;
-
-	snd_adau1977_adc.dev = &pdev->dev;
-	if (pdev->dev.of_node) {
-	    struct device_node *i2s_node;
-	    struct snd_soc_dai_link *dai = &snd_rpi_adau1977_dai[0];
-	    i2s_node = of_parse_phandle(pdev->dev.of_node,
-					"i2s-controller", 0);
-
-	    if (i2s_node) {
-		dai->cpu_dai_name = NULL;
-		dai->cpu_of_node = i2s_node;
-		dai->platform_name = NULL;
-		dai->platform_of_node = i2s_node;
-	    }
-	}
-
-	ret = devm_snd_soc_register_card(&pdev->dev, &snd_adau1977_adc);
-	if (ret && ret != -EPROBE_DEFER)
-		dev_err(&pdev->dev, "snd_soc_register_card() failed: %d\n", ret);
-
-	return ret;
-}
-
-static const struct of_device_id snd_adau1977_adc_of_match[] = {
-	{ .compatible = "adi,adau1977-adc", },
-	{},
-};
-
-MODULE_DEVICE_TABLE(of, snd_adau1977_adc_of_match);
-
-static struct platform_driver snd_adau1977_adc_driver = {
-        .driver = {
-                .name   = "snd-adau1977-adc",
-                .owner  = THIS_MODULE,
-		.of_match_table = snd_adau1977_adc_of_match,
-        },
-        .probe          = snd_adau1977_adc_probe,
-};
-
-module_platform_driver(snd_adau1977_adc_driver);
-
-MODULE_AUTHOR("Andrey Grodzovsky <andrey2805@gmail.com>");
-MODULE_DESCRIPTION("ASoC Driver for ADAU1977 ADC");
-MODULE_LICENSE("GPL v2");
diff --git a/sound/soc/bcm/googlevoicehat-soundcard.c b/sound/soc/bcm/googlevoicehat-soundcard.c
deleted file mode 100644
index 314281c7a7d8..000000000000
--- a/sound/soc/bcm/googlevoicehat-soundcard.c
+++ /dev/null
@@ -1,119 +0,0 @@
-/*
- * ASoC Driver for Google voiceHAT SoundCard
- *
- * Author: Peter Malkin <petermalkin@google.com>
- *         Copyright 2016
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * version 2 as published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful, but
- * WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- * General Public License for more details.
- */
-
-#include <linux/module.h>
-#include <linux/platform_device.h>
-
-#include <sound/core.h>
-#include <sound/pcm.h>
-#include <sound/pcm_params.h>
-#include <sound/soc.h>
-#include <sound/jack.h>
-
-static int snd_rpi_googlevoicehat_soundcard_init(struct snd_soc_pcm_runtime *rtd)
-{
-	return 0;
-}
-
-static int snd_rpi_googlevoicehat_soundcard_hw_params(
-	struct snd_pcm_substream *substream,
-	struct snd_pcm_hw_params *params)
-{
-	struct snd_soc_pcm_runtime *rtd = substream->private_data;
-	struct snd_soc_dai *cpu_dai = rtd->cpu_dai;
-
-	unsigned int sample_bits =
-		snd_pcm_format_physical_width(params_format(params));
-
-	return snd_soc_dai_set_bclk_ratio(cpu_dai, sample_bits * 2);
-}
-
-/* machine stream operations */
-static struct snd_soc_ops snd_rpi_googlevoicehat_soundcard_ops = {
-	.hw_params = snd_rpi_googlevoicehat_soundcard_hw_params,
-};
-
-static struct snd_soc_dai_link snd_rpi_googlevoicehat_soundcard_dai[] = {
-{
-	.name		= "Google voiceHAT SoundCard",
-	.stream_name	= "Google voiceHAT SoundCard HiFi",
-	.cpu_dai_name	= "bcm2708-i2s.0",
-	.codec_dai_name	= "voicehat-hifi",
-	.platform_name	= "bcm2708-i2s.0",
-	.codec_name	= "voicehat-codec",
-	.dai_fmt	= SND_SOC_DAIFMT_I2S | SND_SOC_DAIFMT_NB_NF |
-				SND_SOC_DAIFMT_CBS_CFS,
-	.ops		= &snd_rpi_googlevoicehat_soundcard_ops,
-	.init		= snd_rpi_googlevoicehat_soundcard_init,
-},
-};
-
-/* audio machine driver */
-static struct snd_soc_card snd_rpi_googlevoicehat_soundcard = {
-	.name         = "snd_rpi_googlevoicehat_soundcard",
-	.owner        = THIS_MODULE,
-	.dai_link     = snd_rpi_googlevoicehat_soundcard_dai,
-	.num_links    = ARRAY_SIZE(snd_rpi_googlevoicehat_soundcard_dai),
-};
-
-static int snd_rpi_googlevoicehat_soundcard_probe(struct platform_device *pdev)
-{
-	int ret = 0;
-
-	snd_rpi_googlevoicehat_soundcard.dev = &pdev->dev;
-
-	if (pdev->dev.of_node) {
-		struct device_node *i2s_node;
-		struct snd_soc_dai_link *dai = &snd_rpi_googlevoicehat_soundcard_dai[0];
-		i2s_node = of_parse_phandle(pdev->dev.of_node,
-					"i2s-controller", 0);
-
-		if (i2s_node) {
-			dai->cpu_dai_name = NULL;
-			dai->cpu_of_node = i2s_node;
-			dai->platform_name = NULL;
-			dai->platform_of_node = i2s_node;
-		}
-	}
-
-	ret = devm_snd_soc_register_card(&pdev->dev,
-			&snd_rpi_googlevoicehat_soundcard);
-	if (ret)
-		dev_err(&pdev->dev, "snd_soc_register_card() failed: %d\n", ret);
-
-	return ret;
-}
-
-static const struct of_device_id snd_rpi_googlevoicehat_soundcard_of_match[] = {
-	{ .compatible = "googlevoicehat,googlevoicehat-soundcard", },
-	{},
-};
-MODULE_DEVICE_TABLE(of, snd_rpi_googlevoicehat_soundcard_of_match);
-
-static struct platform_driver snd_rpi_googlevoicehat_soundcard_driver = {
-	.driver = {
-		.name   = "snd-googlevoicehat-soundcard",
-		.owner  = THIS_MODULE,
-		.of_match_table = snd_rpi_googlevoicehat_soundcard_of_match,
-	},
-	.probe          = snd_rpi_googlevoicehat_soundcard_probe,
-};
-
-module_platform_driver(snd_rpi_googlevoicehat_soundcard_driver);
-
-MODULE_AUTHOR("Peter Malkin <petermalkin@google.com>");
-MODULE_DESCRIPTION("ASoC Driver for Google voiceHAT SoundCard");
-MODULE_LICENSE("GPL v2");
diff --git a/sound/soc/bcm/hifiberry_amp.c b/sound/soc/bcm/hifiberry_amp.c
deleted file mode 100644
index 3b0f00edea0d..000000000000
--- a/sound/soc/bcm/hifiberry_amp.c
+++ /dev/null
@@ -1,106 +0,0 @@
-/*
- * ASoC Driver for HifiBerry AMP
- *
- * Author:	Sebastian Eickhoff <basti.eickhoff@googlemail.com>
- *		Copyright 2014
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * version 2 as published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful, but
- * WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- * General Public License for more details.
- */
-
-#include <linux/module.h>
-#include <linux/platform_device.h>
-
-#include <sound/core.h>
-#include <sound/pcm.h>
-#include <sound/pcm_params.h>
-#include <sound/soc.h>
-#include <sound/jack.h>
-
-static int snd_rpi_hifiberry_amp_init(struct snd_soc_pcm_runtime *rtd)
-{
-	return snd_soc_dai_set_bclk_ratio(rtd->cpu_dai, 64);
-}
-
-static struct snd_soc_dai_link snd_rpi_hifiberry_amp_dai[] = {
-    {
-		.name			= "HifiBerry AMP",
-		.stream_name	= "HifiBerry AMP HiFi",
-		.cpu_dai_name	= "bcm2708-i2s.0",
-		.codec_dai_name	= "tas5713-hifi",
-		.platform_name	= "bcm2708-i2s.0",
-		.codec_name		= "tas5713.1-001b",
-		.dai_fmt		= SND_SOC_DAIFMT_I2S |
-						  SND_SOC_DAIFMT_NB_NF |
-						  SND_SOC_DAIFMT_CBS_CFS,
-		.init			= snd_rpi_hifiberry_amp_init,
-	},
-};
-
-
-static struct snd_soc_card snd_rpi_hifiberry_amp = {
-	.name         = "snd_rpi_hifiberry_amp",
-	.driver_name  = "HifiberryAmp",
-	.owner        = THIS_MODULE,
-	.dai_link     = snd_rpi_hifiberry_amp_dai,
-	.num_links    = ARRAY_SIZE(snd_rpi_hifiberry_amp_dai),
-};
-
-static const struct of_device_id snd_rpi_hifiberry_amp_of_match[] = {
-        { .compatible = "hifiberry,hifiberry-amp", },
-        {},
-};
-MODULE_DEVICE_TABLE(of, snd_rpi_hifiberry_amp_of_match);
-
-
-static int snd_rpi_hifiberry_amp_probe(struct platform_device *pdev)
-{
-	int ret = 0;
-
-	snd_rpi_hifiberry_amp.dev = &pdev->dev;
-
-        if (pdev->dev.of_node) {
-            struct device_node *i2s_node;
-            struct snd_soc_dai_link *dai = &snd_rpi_hifiberry_amp_dai[0];
-            i2s_node = of_parse_phandle(pdev->dev.of_node,
-                                        "i2s-controller", 0);
-
-            if (i2s_node) {
-                dai->cpu_dai_name = NULL;
-                dai->cpu_of_node = i2s_node;
-                dai->platform_name = NULL;
-                dai->platform_of_node = i2s_node;
-            }
-        }
-
-	ret = devm_snd_soc_register_card(&pdev->dev, &snd_rpi_hifiberry_amp);
-
-	if (ret && ret != -EPROBE_DEFER)
-		dev_err(&pdev->dev, "snd_soc_register_card() failed: %d\n", ret);
-
-	return ret;
-}
-
-
-static struct platform_driver snd_rpi_hifiberry_amp_driver = {
-        .driver = {
-                .name   = "snd-hifiberry-amp",
-                .owner  = THIS_MODULE,
-		.of_match_table = snd_rpi_hifiberry_amp_of_match,
-        },
-        .probe          = snd_rpi_hifiberry_amp_probe,
-};
-
-
-module_platform_driver(snd_rpi_hifiberry_amp_driver);
-
-
-MODULE_AUTHOR("Sebastian Eickhoff <basti.eickhoff@googlemail.com>");
-MODULE_DESCRIPTION("ASoC driver for HiFiBerry-AMP");
-MODULE_LICENSE("GPL v2");
diff --git a/sound/soc/bcm/hifiberry_dac.c b/sound/soc/bcm/hifiberry_dac.c
deleted file mode 100644
index 2ef43601f2f9..000000000000
--- a/sound/soc/bcm/hifiberry_dac.c
+++ /dev/null
@@ -1,118 +0,0 @@
-/*
- * ASoC Driver for HifiBerry DAC
- *
- * Author:	Florian Meier <florian.meier@koalo.de>
- *		Copyright 2013
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * version 2 as published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful, but
- * WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- * General Public License for more details.
- */
-
-#include <linux/module.h>
-#include <linux/platform_device.h>
-
-#include <sound/core.h>
-#include <sound/pcm.h>
-#include <sound/pcm_params.h>
-#include <sound/soc.h>
-#include <sound/jack.h>
-
-static int snd_rpi_hifiberry_dac_init(struct snd_soc_pcm_runtime *rtd)
-{
-	return 0;
-}
-
-static int snd_rpi_hifiberry_dac_hw_params(struct snd_pcm_substream *substream,
-				       struct snd_pcm_hw_params *params)
-{
-	struct snd_soc_pcm_runtime *rtd = substream->private_data;
-	struct snd_soc_dai *cpu_dai = rtd->cpu_dai;
-
-	unsigned int sample_bits =
-		snd_pcm_format_physical_width(params_format(params));
-
-	return snd_soc_dai_set_bclk_ratio(cpu_dai, sample_bits * 2);
-}
-
-/* machine stream operations */
-static struct snd_soc_ops snd_rpi_hifiberry_dac_ops = {
-	.hw_params = snd_rpi_hifiberry_dac_hw_params,
-};
-
-static struct snd_soc_dai_link snd_rpi_hifiberry_dac_dai[] = {
-{
-	.name		= "HifiBerry DAC",
-	.stream_name	= "HifiBerry DAC HiFi",
-	.cpu_dai_name	= "bcm2708-i2s.0",
-	.codec_dai_name	= "pcm5102a-hifi",
-	.platform_name	= "bcm2708-i2s.0",
-	.codec_name	= "pcm5102a-codec",
-	.dai_fmt	= SND_SOC_DAIFMT_I2S | SND_SOC_DAIFMT_NB_NF |
-				SND_SOC_DAIFMT_CBS_CFS,
-	.ops		= &snd_rpi_hifiberry_dac_ops,
-	.init		= snd_rpi_hifiberry_dac_init,
-},
-};
-
-/* audio machine driver */
-static struct snd_soc_card snd_rpi_hifiberry_dac = {
-	.name         = "snd_rpi_hifiberry_dac",
-	.driver_name  = "HifiberryDac",
-	.owner        = THIS_MODULE,
-	.dai_link     = snd_rpi_hifiberry_dac_dai,
-	.num_links    = ARRAY_SIZE(snd_rpi_hifiberry_dac_dai),
-};
-
-static int snd_rpi_hifiberry_dac_probe(struct platform_device *pdev)
-{
-	int ret = 0;
-
-	snd_rpi_hifiberry_dac.dev = &pdev->dev;
-
-	if (pdev->dev.of_node) {
-	    struct device_node *i2s_node;
-	    struct snd_soc_dai_link *dai = &snd_rpi_hifiberry_dac_dai[0];
-	    i2s_node = of_parse_phandle(pdev->dev.of_node,
-					"i2s-controller", 0);
-
-	    if (i2s_node) {
-		dai->cpu_dai_name = NULL;
-		dai->cpu_of_node = i2s_node;
-		dai->platform_name = NULL;
-		dai->platform_of_node = i2s_node;
-	    }
-	}
-
-	ret = devm_snd_soc_register_card(&pdev->dev, &snd_rpi_hifiberry_dac);
-	if (ret && ret != -EPROBE_DEFER)
-		dev_err(&pdev->dev, "snd_soc_register_card() failed: %d\n", ret);
-
-	return ret;
-}
-
-static const struct of_device_id snd_rpi_hifiberry_dac_of_match[] = {
-	{ .compatible = "hifiberry,hifiberry-dac", },
-	{},
-};
-MODULE_DEVICE_TABLE(of, snd_rpi_hifiberry_dac_of_match);
-
-static struct platform_driver snd_rpi_hifiberry_dac_driver = {
-        .driver = {
-                .name   = "snd-hifiberry-dac",
-                .owner  = THIS_MODULE,
-		.of_match_table = snd_rpi_hifiberry_dac_of_match,
-        },
-        .probe          = snd_rpi_hifiberry_dac_probe,
-};
-
-module_platform_driver(snd_rpi_hifiberry_dac_driver);
-
-MODULE_AUTHOR("Florian Meier <florian.meier@koalo.de>");
-MODULE_DESCRIPTION("ASoC Driver for HifiBerry DAC");
-MODULE_LICENSE("GPL v2");
diff --git a/sound/soc/bcm/rpi-dac.c b/sound/soc/bcm/rpi-dac.c
deleted file mode 100644
index 978ea1155f00..000000000000
--- a/sound/soc/bcm/rpi-dac.c
+++ /dev/null
@@ -1,98 +0,0 @@
-/*
- * ASoC Driver for RPi-DAC.
- *
- * Author:	Florian Meier <florian.meier@koalo.de>
- *		Copyright 2013
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * version 2 as published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful, but
- * WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- * General Public License for more details.
- */
-
-#include <linux/module.h>
-#include <linux/platform_device.h>
-
-#include <sound/core.h>
-#include <sound/pcm.h>
-#include <sound/pcm_params.h>
-#include <sound/soc.h>
-#include <sound/jack.h>
-
-static int snd_rpi_rpi_dac_init(struct snd_soc_pcm_runtime *rtd)
-{
-	return snd_soc_dai_set_bclk_ratio(rtd->cpu_dai, 32*2);
-}
-
-static struct snd_soc_dai_link snd_rpi_rpi_dac_dai[] = {
-{
-	.name		= "RPi-DAC",
-	.stream_name	= "RPi-DAC HiFi",
-	.cpu_dai_name	= "bcm2708-i2s.0",
-	.codec_dai_name	= "pcm1794a-hifi",
-	.platform_name	= "bcm2708-i2s.0",
-	.codec_name	= "pcm1794a-codec",
-	.dai_fmt	= SND_SOC_DAIFMT_I2S | SND_SOC_DAIFMT_NB_NF |
-				SND_SOC_DAIFMT_CBS_CFS,
-	.init		= snd_rpi_rpi_dac_init,
-},
-};
-
-/* audio machine driver */
-static struct snd_soc_card snd_rpi_rpi_dac = {
-	.name         = "snd_rpi_rpi_dac",
-	.owner        = THIS_MODULE,
-	.dai_link     = snd_rpi_rpi_dac_dai,
-	.num_links    = ARRAY_SIZE(snd_rpi_rpi_dac_dai),
-};
-
-static int snd_rpi_rpi_dac_probe(struct platform_device *pdev)
-{
-	int ret = 0;
-
-	snd_rpi_rpi_dac.dev = &pdev->dev;
-	
-	if (pdev->dev.of_node) {
-		struct device_node *i2s_node;
-		struct snd_soc_dai_link *dai = &snd_rpi_rpi_dac_dai[0];
-		i2s_node = of_parse_phandle(pdev->dev.of_node, "i2s-controller", 0);
-
-		if (i2s_node) {
-			dai->cpu_dai_name = NULL;
-			dai->cpu_of_node = i2s_node;
-			dai->platform_name = NULL;
-			dai->platform_of_node = i2s_node;
-		}
-	}
-	
-	ret = devm_snd_soc_register_card(&pdev->dev, &snd_rpi_rpi_dac);
-	if (ret && ret != -EPROBE_DEFER)
-		dev_err(&pdev->dev, "snd_soc_register_card() failed: %d\n", ret);
-
-	return ret;
-}
-
-static const struct of_device_id snd_rpi_rpi_dac_of_match[] = {
-	{ .compatible = "rpi,rpi-dac", },
-	{},
-};
-MODULE_DEVICE_TABLE(of, snd_rpi_rpi_dac_of_match);
-
-static struct platform_driver snd_rpi_rpi_dac_driver = {
-        .driver = {
-                .name   = "snd-rpi-dac",
-                .owner  = THIS_MODULE,
-                .of_match_table = snd_rpi_rpi_dac_of_match,
-        },
-        .probe          = snd_rpi_rpi_dac_probe,
-};
-
-module_platform_driver(snd_rpi_rpi_dac_driver);
-
-MODULE_AUTHOR("Florian Meier <florian.meier@koalo.de>");
-MODULE_DESCRIPTION("ASoC Driver for RPi-DAC");
-MODULE_LICENSE("GPL v2");
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1510_71d577a141615e59c78b44d1e12380c02db24563.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1510_71d577a141615e59c78b44d1e12380c02db24563.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
