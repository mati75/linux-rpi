commit 3c68944bda81603075e1205f066c9ff855d3ffe0
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Fri Sep 29 16:43:11 2017 -0700

    target: Fix quiese during transport_write_pending_qf endless loop
    
    commit 9574a497df2bbc0a676b609ce0dd24d237cee3a6 upstream.
    
    This patch fixes a potential end-less loop during QUEUE_FULL,
    where cmd->se_tfo->write_pending() callback fails repeatedly
    but __transport_wait_for_tasks() has already been invoked to
    quiese the outstanding se_cmd descriptor.
    
    To address this bug, this patch adds a CMD_T_STOP|CMD_T_ABORTED
    check within transport_write_pending_qf() and invokes the
    existing se_cmd->t_transport_stop_comp to signal quiese
    completion back to __transport_wait_for_tasks().
    
    Cc: Mike Christie <mchristi@redhat.com>
    Cc: Hannes Reinecke <hare@suse.com>
    Cc: Bryant G. Ly <bryantly@linux.vnet.ibm.com>
    Cc: Michael Cyr <mikecyr@linux.vnet.ibm.com>
    Cc: Potnuri Bharat Teja <bharat@chelsio.com>
    Cc: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/target/target_core_transport.c b/drivers/target/target_core_transport.c
index 953b99d8654c..cbf0ff75be35 100644
--- a/drivers/target/target_core_transport.c
+++ b/drivers/target/target_core_transport.c
@@ -2575,7 +2575,20 @@ EXPORT_SYMBOL(transport_generic_new_cmd);
 
 static void transport_write_pending_qf(struct se_cmd *cmd)
 {
+	unsigned long flags;
 	int ret;
+	bool stop;
+
+	spin_lock_irqsave(&cmd->t_state_lock, flags);
+	stop = (cmd->transport_state & (CMD_T_STOP | CMD_T_ABORTED));
+	spin_unlock_irqrestore(&cmd->t_state_lock, flags);
+
+	if (stop) {
+		pr_debug("%s:%d CMD_T_STOP|CMD_T_ABORTED for ITT: 0x%08llx\n",
+			__func__, __LINE__, cmd->tag);
+		complete_all(&cmd->t_transport_stop_comp);
+		return;
+	}
 
 	ret = cmd->se_tfo->write_pending(cmd);
 	if (ret) {
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1116_3c68944bda81603075e1205f066c9ff855d3ffe0.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1116_3c68944bda81603075e1205f066c9ff855d3ffe0.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
