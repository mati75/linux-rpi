commit fa4f43b53fbe70a6f83fe2ef69e9251685e0383d
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Mar 1 14:28:39 2017 -0800

    net: net_enable_timestamp() can be called from irq contexts
    
    [ Upstream commit 13baa00ad01bb3a9f893e3a08cbc2d072fc0c15d ]
    
    It is now very clear that silly TCP listeners might play with
    enabling/disabling timestamping while new children are added
    to their accept queue.
    
    Meaning net_enable_timestamp() can be called from BH context
    while current state of the static key is not enabled.
    
    Lets play safe and allow all contexts.
    
    The work queue is scheduled only under the problematic cases,
    which are the static key enable/disable transition, to not slow down
    critical paths.
    
    This extends and improves what we did in commit 5fa8bbda38c6 ("net: use
    a work queue to defer net_disable_timestamp() work")
    
    Fixes: b90e5794c5bd ("net: dont call jump_label_dec from irq context")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

Index: linuxtest/dummy/rpi_1387_fa4f43b53fbe70a6f83fe2ef69e9251685e0383d.txt
===================================================================
--- /dev/null
+++ linuxtest/dummy/rpi_1387_fa4f43b53fbe70a6f83fe2ef69e9251685e0383d.txt
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
