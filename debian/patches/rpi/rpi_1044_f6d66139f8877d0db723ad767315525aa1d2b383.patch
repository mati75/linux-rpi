commit f6d66139f8877d0db723ad767315525aa1d2b383
Author: Stanislav Fomichev <sdf@google.com>
Date:   Mon Nov 19 14:49:01 2018 -0800

    bpf: libbpf: retry map creation without the name
    
    [ Upstream commit 23499442c319412aa8e54e7a939e2eb531bdd77d ]
    
    Since commit 88cda1c9da02 ("bpf: libbpf: Provide basic API support
    to specify BPF obj name"), libbpf unconditionally sets bpf_attr->name
    for maps. Pre v4.14 kernels don't know about map names and return an
    error about unexpected non-zero data. Retry sys_bpf without a map
    name to cover older kernels.
    
    v2 changes:
    * check for errno == EINVAL as suggested by Daniel Borkmann
    
    Signed-off-by: Stanislav Fomichev <sdf@google.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

diff --git a/tools/lib/bpf/bpf.c b/tools/lib/bpf/bpf.c
index 60aa4ca8b2c5..7a0014794bff 100644
--- a/tools/lib/bpf/bpf.c
+++ b/tools/lib/bpf/bpf.c
@@ -77,6 +77,7 @@ int bpf_create_map_xattr(const struct bpf_create_map_attr *create_attr)
 {
 	__u32 name_len = create_attr->name ? strlen(create_attr->name) : 0;
 	union bpf_attr attr;
+	int ret;
 
 	memset(&attr, '\0', sizeof(attr));
 
@@ -94,7 +95,15 @@ int bpf_create_map_xattr(const struct bpf_create_map_attr *create_attr)
 	attr.map_ifindex = create_attr->map_ifindex;
 	attr.inner_map_fd = create_attr->inner_map_fd;
 
-	return sys_bpf(BPF_MAP_CREATE, &attr, sizeof(attr));
+	ret = sys_bpf(BPF_MAP_CREATE, &attr, sizeof(attr));
+	if (ret < 0 && errno == EINVAL && create_attr->name) {
+		/* Retry the same syscall, but without the name.
+		 * Pre v4.14 kernels don't support map names.
+		 */
+		memset(attr.map_name, 0, sizeof(attr.map_name));
+		return sys_bpf(BPF_MAP_CREATE, &attr, sizeof(attr));
+	}
+	return ret;
 }
 
 int bpf_create_map_node(enum bpf_map_type map_type, const char *name,
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1044_f6d66139f8877d0db723ad767315525aa1d2b383.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1044_f6d66139f8877d0db723ad767315525aa1d2b383.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
