commit 82bc7120308365a469f9ed0d03a61b4deb7378cb
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Tue Sep 19 02:22:39 2017 +0200

    PM: core: Fix device_pm_check_callbacks()
    
    commit 157c460e10cb6eca29ccbd0f023db159d0c55ec7 upstream.
    
    The device_pm_check_callbacks() function doesn't check legacy
    ->suspend and ->resume callback pointers under the device's
    bus type, class and driver, so in some cases it may set the
    no_pm_callbacks flag for the device incorrectly and then the
    callbacks may be skipped during system suspend/resume, which
    shouldn't happen.
    
    Fixes: aa8e54b55947 (PM / sleep: Go direct_complete if driver has no callbacks)
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/base/power/main.c b/drivers/base/power/main.c
index 2932a5bd892f..dfffba39f723 100644
--- a/drivers/base/power/main.c
+++ b/drivers/base/power/main.c
@@ -1757,10 +1757,13 @@ void device_pm_check_callbacks(struct device *dev)
 {
 	spin_lock_irq(&dev->power.lock);
 	dev->power.no_pm_callbacks =
-		(!dev->bus || pm_ops_is_empty(dev->bus->pm)) &&
-		(!dev->class || pm_ops_is_empty(dev->class->pm)) &&
+		(!dev->bus || (pm_ops_is_empty(dev->bus->pm) &&
+		 !dev->bus->suspend && !dev->bus->resume)) &&
+		(!dev->class || (pm_ops_is_empty(dev->class->pm) &&
+		 !dev->class->suspend && !dev->class->resume)) &&
 		(!dev->type || pm_ops_is_empty(dev->type->pm)) &&
 		(!dev->pm_domain || pm_ops_is_empty(&dev->pm_domain->ops)) &&
-		(!dev->driver || pm_ops_is_empty(dev->driver->pm));
+		(!dev->driver || (pm_ops_is_empty(dev->driver->pm) &&
+		 !dev->driver->suspend && !dev->driver->resume));
 	spin_unlock_irq(&dev->power.lock);
 }
