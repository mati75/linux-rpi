commit d846ca07d50e20defa9b7dca39671eff729885cc
Author: Alexey Kardashevskiy <aik@ozlabs.ru>
Date:   Fri Mar 17 00:48:28 2017 +0000

    vfio/spapr: Add a helper to create default DMA window
    
    [ Upstream commit 6f01cc692a16405235d5c34056455b182682123c ]
    
    There is already a helper to create a DMA window which does allocate
    a table and programs it to the IOMMU group. However
    tce_iommu_take_ownership_ddw() did not use it and did these 2 calls
    itself to simplify error path.
    
    Since we are going to delay the default window creation till
    the default window is accessed/removed or new window is added,
    we need a helper to create a default window from all these cases.
    
    This adds tce_iommu_create_default_window(). Since it relies on
    a VFIO container to have at least one IOMMU group (for future use),
    this changes tce_iommu_attach_group() to add a group to the container
    first and then call the new helper.
    
    Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>
    Reviewed-by: David Gibson <david@gibson.dropbear.id.au>
    Acked-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

Index: linuxtest/drivers/vfio/vfio_iommu_spapr_tce.c
===================================================================
--- linuxtest.orig/drivers/vfio/vfio_iommu_spapr_tce.c
+++ linuxtest/drivers/vfio/vfio_iommu_spapr_tce.c
@@ -837,6 +837,29 @@ static long tce_iommu_create_default_win
 	return ret;
 }
 
+static long tce_iommu_create_default_window(struct tce_container *container)
+{
+	long ret;
+	__u64 start_addr = 0;
+	struct tce_iommu_group *tcegrp;
+	struct iommu_table_group *table_group;
+
+	if (!tce_groups_attached(container))
+		return -ENODEV;
+
+	tcegrp = list_first_entry(&container->group_list,
+			struct tce_iommu_group, next);
+	table_group = iommu_group_get_iommudata(tcegrp->grp);
+	if (!table_group)
+		return -ENODEV;
+
+	ret = tce_iommu_create_window(container, IOMMU_PAGE_SHIFT_4K,
+			table_group->tce32_size, 1, &start_addr);
+	WARN_ON_ONCE(!ret && start_addr);
+
+	return ret;
+}
+
 static long tce_iommu_ioctl(void *iommu_data,
 				 unsigned int cmd, unsigned long arg)
 {
@@ -1287,6 +1310,7 @@ static int tce_iommu_attach_group(void *
 	struct tce_container *container = iommu_data;
 	struct iommu_table_group *table_group;
 	struct tce_iommu_group *tcegrp = NULL;
+	bool create_default_window = false;
 
 	mutex_lock(&container->lock);
 
Index: linuxtest/dummy/rpi_1438_d846ca07d50e20defa9b7dca39671eff729885cc.txt
===================================================================
--- /dev/null
+++ linuxtest/dummy/rpi_1438_d846ca07d50e20defa9b7dca39671eff729885cc.txt
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
