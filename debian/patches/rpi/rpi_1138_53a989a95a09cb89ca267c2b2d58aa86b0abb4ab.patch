commit 53a989a95a09cb89ca267c2b2d58aa86b0abb4ab
Author: Gao Xiang <gaoxiang25@huawei.com>
Date:   Mon Mar 11 14:08:56 2019 +0800

    staging: erofs: fix memleak of inode's shared xattr array
    
    From: Sheng Yong <shengyong1@huawei.com>
    
    commit 3b1b5291f79d040d549d7c746669fc30e8045b9b upstream.
    
    If it fails to read a shared xattr page, the inode's shared xattr array
    is not freed. The next time the inode's xattr is accessed, the previously
    allocated array is leaked.
    
    Signed-off-by: Sheng Yong <shengyong1@huawei.com>
    Fixes: b17500a0fdba ("staging: erofs: introduce xattr & acl support")
    Cc: <stable@vger.kernel.org> # 4.19+
    Reviewed-by: Gao Xiang <gaoxiang25@huawei.com>
    Signed-off-by: Gao Xiang <gaoxiang25@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/erofs/xattr.c b/drivers/staging/erofs/xattr.c
index c4b620dfa75c..937ad3fa540f 100644
--- a/drivers/staging/erofs/xattr.c
+++ b/drivers/staging/erofs/xattr.c
@@ -109,8 +109,11 @@ static int init_inode_xattrs(struct inode *inode)
 
 			it.page = erofs_get_meta_page(inode->i_sb,
 				++it.blkaddr, S_ISDIR(inode->i_mode));
-			if (IS_ERR(it.page))
+			if (IS_ERR(it.page)) {
+				kfree(vi->xattr_shared_xattrs);
+				vi->xattr_shared_xattrs = NULL;
 				return PTR_ERR(it.page);
+			}
 
 			it.kaddr = kmap_atomic(it.page);
 			atomic_map = true;
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1138_53a989a95a09cb89ca267c2b2d58aa86b0abb4ab.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1138_53a989a95a09cb89ca267c2b2d58aa86b0abb4ab.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
