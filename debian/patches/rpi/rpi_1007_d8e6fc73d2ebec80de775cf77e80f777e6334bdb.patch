commit d8e6fc73d2ebec80de775cf77e80f777e6334bdb
Author: Sabrina Dubroca <sd@queasysnail.net>
Date:   Wed Sep 12 17:44:41 2018 +0200

    tls: don't copy the key out of tls12_crypto_info_aes_gcm_128
    
    [ Upstream commit 7cba09c6d5bc73ebbd25a353742d9ddb7a713b95 ]
    
    There's no need to copy the key to an on-stack buffer before calling
    crypto_aead_setkey().
    
    Fixes: 3c4d7559159b ("tls: kernel TLS support")
    Signed-off-by: Sabrina Dubroca <sd@queasysnail.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/net/tls/tls_sw.c b/net/tls/tls_sw.c
index b3344bbe336b..33b79d2a2820 100644
--- a/net/tls/tls_sw.c
+++ b/net/tls/tls_sw.c
@@ -1064,7 +1064,6 @@ void tls_sw_free_resources_rx(struct sock *sk)
 
 int tls_set_sw_offload(struct sock *sk, struct tls_context *ctx, int tx)
 {
-	char keyval[TLS_CIPHER_AES_GCM_128_KEY_SIZE];
 	struct tls_crypto_info *crypto_info;
 	struct tls12_crypto_info_aes_gcm_128 *gcm_128_info;
 	struct tls_sw_context_tx *sw_ctx_tx = NULL;
@@ -1184,9 +1183,7 @@ int tls_set_sw_offload(struct sock *sk, struct tls_context *ctx, int tx)
 
 	ctx->push_pending_record = tls_sw_push_pending_record;
 
-	memcpy(keyval, gcm_128_info->key, TLS_CIPHER_AES_GCM_128_KEY_SIZE);
-
-	rc = crypto_aead_setkey(*aead, keyval,
+	rc = crypto_aead_setkey(*aead, gcm_128_info->key,
 				TLS_CIPHER_AES_GCM_128_KEY_SIZE);
 	if (rc)
 		goto free_aead;
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1007_d8e6fc73d2ebec80de775cf77e80f777e6334bdb.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1007_d8e6fc73d2ebec80de775cf77e80f777e6334bdb.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
