From: Ben Hutchings <ben@decadent.org.uk>
Date: Wed, 20 Jun 2018 21:52:19 +0100
Subject: ipv4: Avoid ABI change in 3.16.57
Forwarded: not-needed

Commit d52e5a7e7ca4 "ipv4: lock mtu in fnhe when received PMTU <
net.ipv4.route.min_pmtu" reallocated 1 bit of route::rt_pmtu
to a separate field, rt_mtu_locked.

It looks like rt_pmtu is only used in-tree, by ipv4 and by xfrm4.  The
latter is built as a module, but both old and new versions just copy
all 32 bits without interpreting them.  So although this is an ABI
change it should be ignorable.

However, the rt_mtu_locked field is now read, but not written, by
various inline functions that may be built into modules.  We need to
ensure that newly built modules loaded on an older kernel will always
see this field as clear.  Therefore reorder the bitfields on little-
endian architectures so that rt_mtu_locked is always the most
significant bit of the word.

Then hide the change from genksyms.

---
--- a/include/net/route.h
+++ b/include/net/route.h
@@ -35,6 +35,7 @@
 #include <linux/ip.h>
 #include <linux/cache.h>
 #include <linux/security.h>
+#include <asm/byteorder.h>
 
 /* IPv4 datagram length is stored into 16bit field (tot_len) */
 #define IP_MAX_MTU	0xFFFFU
@@ -61,8 +62,17 @@ struct rtable {
 	__be32			rt_gateway;
 
 	/* Miscellaneous cached information */
+#ifndef __GENKSYMS__
+#ifdef __LITTLE_ENDIAN_BITFIELD
+	u32			rt_pmtu:31,
+				rt_mtu_locked:1;
+#else
 	u32			rt_mtu_locked:1,
 				rt_pmtu:31;
+#endif
+#else
+	u32			rt_pmtu;
+#endif
 
 	struct list_head	rt_uncached;
 };
