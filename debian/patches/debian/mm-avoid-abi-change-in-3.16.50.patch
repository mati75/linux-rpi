From: Ben Hutchings <ben@decadent.org.uk>
Date: Mon, 27 Nov 2017 20:36:53 +0000
Subject: mm: Avoid ABI change in 3.16.50
Forwarded: not-needed

Commit 16af97dc5a89 "mm: migrate: prevent racy access to
tlb_flush_pending" changed mm_struct::tlb_flush_pending from bool to
atomic_t.  Only built-in code allocates the structure and accesses
this field, but in some configurations the offset of the following
field will be changed.  Move tlb_flush_pending to the end of the
structure and leave compatible padding in its place.  Hide the
change from genksyms.

---
--- a/include/linux/mm_types.h
+++ b/include/linux/mm_types.h
@@ -448,6 +448,15 @@ struct mm_struct {
 	int numa_scan_seq;
 #endif
 #if defined(CONFIG_NUMA_BALANCING) || defined(CONFIG_COMPACTION)
+#ifndef __GENKSYMS__
+	bool pad_was_tlb_flush_pending;
+#else
+	bool tlb_flush_pending;
+#endif
+#endif
+	struct uprobes_state uprobes_state;
+#ifndef __GENKSYMS__
+#if defined(CONFIG_NUMA_BALANCING) || defined(CONFIG_COMPACTION)
 	/*
 	 * An operation with batched TLB flushing is going on. Anything that
 	 * can move process memory needs to flush the TLB when moving a
@@ -455,7 +464,7 @@ struct mm_struct {
 	 */
 	atomic_t tlb_flush_pending;
 #endif
-	struct uprobes_state uprobes_state;
+#endif
 };
 
 static inline void mm_init_cpumask(struct mm_struct *mm)
