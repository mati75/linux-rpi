From: Ben Hutchings <ben@decadent.org.uk>
Date: Thu, 31 Aug 2017 21:30:54 +0100
Subject: ttm: Avoid ABI change for ttm_ref_object_add() require_existing param
Forwarded: not-needed

Change the symbol name for the new version of ttm_ref_object_add(), and
make the old one a wrapper for it.

---
--- a/drivers/gpu/drm/ttm/ttm_object.c
+++ b/drivers/gpu/drm/ttm/ttm_object.c
@@ -762,3 +762,12 @@ int ttm_prime_object_init(struct ttm_obj
 				    ref_obj_release);
 }
 EXPORT_SYMBOL(ttm_prime_object_init);
+
+#undef ttm_ref_object_add
+int ttm_ref_object_add(struct ttm_object_file *tfile,
+		       struct ttm_base_object *base,
+		       enum ttm_ref_type ref_type, bool *existed)
+{
+	return ttm_ref_object_add_2(tfile, base, ref_type, existed, false);
+}
+EXPORT_SYMBOL(ttm_ref_object_add);
--- a/include/drm/ttm/ttm_object.h
+++ b/include/drm/ttm/ttm_object.h
@@ -245,8 +245,12 @@ extern void ttm_base_object_unref(struct
  */
 extern int ttm_ref_object_add(struct ttm_object_file *tfile,
 			      struct ttm_base_object *base,
-			      enum ttm_ref_type ref_type, bool *existed,
-			      bool require_existed);
+			      enum ttm_ref_type ref_type, bool *existed);
+extern int ttm_ref_object_add_2(struct ttm_object_file *tfile,
+				struct ttm_base_object *base,
+				enum ttm_ref_type ref_type, bool *existed,
+				bool require_existed);
+#define ttm_ref_object_add ttm_ref_object_add_2
 
 extern bool ttm_ref_object_exists(struct ttm_object_file *tfile,
 				  struct ttm_base_object *base);
