From: Ben Hutchings <ben@decadent.org.uk>
Date: Thu, 29 Dec 2016 01:31:15 +0000
Subject: net: Fix ABI change for sk_filter changes
Forwarded: not-needed

Restore sk_filter() and sk_receive_skb() as exported functions rather
than inlines.

---
--- a/include/linux/filter.h
+++ b/include/linux/filter.h
@@ -347,10 +347,7 @@ static inline unsigned int sk_filter_siz
 		(fprog->len * sizeof(fprog->filter[0]))
 
 int sk_filter_trim_cap(struct sock *sk, struct sk_buff *skb, unsigned int cap);
-static inline int sk_filter(struct sock *sk, struct sk_buff *skb)
-{
-	return sk_filter_trim_cap(sk, skb, 1);
-}
+int sk_filter(struct sock *sk, struct sk_buff *skb);
 
 void sk_filter_select_runtime(struct sk_filter *fp);
 void sk_filter_free(struct sk_filter *fp);
--- a/include/net/sock.h
+++ b/include/net/sock.h
@@ -1671,11 +1671,7 @@ void sock_gen_put(struct sock *sk);
 
 int __sk_receive_skb(struct sock *sk, struct sk_buff *skb, const int nested,
 		     unsigned int trim_cap);
-static inline int sk_receive_skb(struct sock *sk, struct sk_buff *skb,
-				 const int nested)
-{
-	return __sk_receive_skb(sk, skb, nested, 1);
-}
+int sk_receive_skb(struct sock *sk, struct sk_buff *skb, const int nested);
 
 static inline void sk_tx_queue_set(struct sock *sk, int tx_queue)
 {
--- a/net/core/filter.c
+++ b/net/core/filter.c
@@ -135,6 +135,12 @@ int sk_filter_trim_cap(struct sock *sk,
 }
 EXPORT_SYMBOL(sk_filter_trim_cap);
 
+int sk_filter(struct sock *sk, struct sk_buff *skb)
+{
+	return sk_filter_trim_cap(sk, skb, 1);
+}
+EXPORT_SYMBOL(sk_filter);
+
 /* Base function for offset calculation. Needs to go into .text section,
  * therefore keeping it non-static as well; will also be used by JITs
  * anyway later on, so do not let the compiler omit it.
--- a/net/core/sock.c
+++ b/net/core/sock.c
@@ -523,6 +523,12 @@ discard_and_relse:
 }
 EXPORT_SYMBOL(__sk_receive_skb);
 
+int sk_receive_skb(struct sock *sk, struct sk_buff *skb, const int nested)
+{
+	return __sk_receive_skb(sk, skb, nested, 1);
+}
+EXPORT_SYMBOL(sk_receive_skb);
+
 struct dst_entry *__sk_dst_check(struct sock *sk, u32 cookie)
 {
 	struct dst_entry *dst = __sk_dst_get(sk);
