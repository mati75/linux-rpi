From: Ben Hutchings <ben@decadent.org.uk>
Date: Mon, 18 Sep 2017 00:30:42 +0100
Subject: ptrace: Avoid ABI change in 3.16.48
Forwarded: not-needed

ptrace_may_access() now expects the given mode to include exactly one
of the PTRACE_MODE_FSCREDS and PTRACE_MODE_REALCREDS flags, and always
fails (-EPERM) otherwise.  Old out-of-tree modules won't set either of
these flags, so revert to the old behaviour in this case.

---
--- a/kernel/ptrace.c
+++ b/kernel/ptrace.c
@@ -260,6 +260,10 @@ static int __ptrace_may_access(struct ta
 	kuid_t caller_uid;
 	kgid_t caller_gid;
 
+	/* bwh: Use old behaviour for any out-of-tree modules */
+	if ((mode & (PTRACE_MODE_FSCREDS | PTRACE_MODE_REALCREDS)) == 0) {
+		mode |= PTRACE_MODE_REALCREDS;
+	} else
 	if (!(mode & PTRACE_MODE_FSCREDS) == !(mode & PTRACE_MODE_REALCREDS)) {
 		WARN(1, "denying ptrace access check without PTRACE_MODE_*CREDS\n");
 		return -EPERM;
